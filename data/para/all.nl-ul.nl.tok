( GNU specific ) Display info on most CPU-intensive processes once and exit .
( GNU specific ) Display information about number of processes in various states .
( GNU specific ) Display process information ( batch mode , display once ) with full command lines .
( GNU specific ) Display process information for all processes whose command line contains &quot; processname &quot; .
( GNU specific ) Find the process currently taking the most CPU time .
( GNU specific ) Monitor all processes belonging to user &apos; abc &apos; in batch mode ( not accepting user input ) and displaying info each 30 seconds up to 10 times .
( GNU specific ) Monitor process activity , starting with the last remembered &quot; c &quot; state reversed : typing &quot; c &quot; toggles between using process names or full command lines .
( GNU specific ) Set variable LINE to full process info of process currently taking the most CPU time , squeezing multiple consecutive spaces into one .
( GNU specific ) Set variable OUTPUT to full process info of process currently taking the most CPU time .
( GNU specific ) Use &apos; top &apos; to monitor one process .
( Linux specific ) Copy loadable kernel module &quot; mymodule.ko &quot; to the drivers in modules directory matchig current kernel .
( Linux specific ) Display all lines containing &quot; IP _ MROUTE &quot; in the current kernel &apos; s compile-time config file .
( Linux specific ) Display current running kernel &apos; s compile-time config file .
( Linux specific ) Find all loadable modules for current kernel , whose name includes &quot; perf &quot;
( Linux specific ) Look for any instance of &quot; HIGHMEM &quot; in the current kernel &apos; s compile-time config file .
( Linux specific ) Search for command &quot; tail &quot; in the maps of the process with PID 2671
( Linux-specific ) Display all lines containing PROBES in the current kernel &apos; s compile-time config file .
( Linux-specific ) Display all lines containing UTRACE in the current kernel &apos; s compile-time config file .
( Linux-specific ) Look for any instance of &quot; ds1337 &quot; in the modules.alias file matching current kernel release
Add &quot; execute &quot; to the permissions of all directories in the home directory tree
Add &quot; new &quot; . to the beginning of the name of &quot; original.filename &quot; , renaming it to &quot; new.original.filename &quot; .
Add &quot; new &quot; . to the beginning of the name of &quot; original.filename &quot; , renaming it to &quot; new.original.filename &quot; .
Add &quot; prefix &quot; to every non-blank line in &quot; file.txt &quot;
Add &quot; prefix _ &quot; to every non-blank line in &quot; a.txt &quot;
Add &apos; .avi &apos; extension to all files / directories with &apos; .mkv &apos; extension under &apos; / volume1 / uploads &apos; directory tree
Add a cron job to existing list , without removing existing ones , ro tun &quot; scripty.sh &quot; at 2 : 01 am , 3rd day of april ( 4th month ) , if that day happens to be a friday ( 5th day of the week starting with sunday = 0 ) .
Add a date time stamp to every line of output in &quot; ping google.com &quot;
Add a line number to every line in &quot; infile &quot;
Add a line number to every line in &quot; long-file &quot;
Add a number prefix followed by &apos; ) &apos; to each line in &quot; $ string &quot;
Add content of &quot; filename &quot; to the existing cron jobs of user &quot; user &quot; , without removing the previously existing cron jobs .
Add cron lists from &quot; file1 &quot; and &quot; file2 &quot; to list of cron jobs , giving errors for any lines that cannot be parsed by crontab .
Add cron lists from &quot; filename &quot; to list of cron jobs , giving errors for any lines that cannot be parsed by crontab .
Add executable permission to &quot; java _ ee _ sdk-6u2-jdk-linux-x64.sh &quot;
Add executable permission to &quot; pretty-print &quot;
Add executable permission to &quot; rr.sh &quot;
Add execute permission to &quot; ComputeDate &quot; , &quot; col &quot; , and &quot; printdirections &quot; for all users
Add execute permission to all files ending in &quot; .sh &quot;
Add group write permission to all files and directories in the current directory including hidden files and excluding &quot; &quot; ..
Add group write permission to all files and directories in the current directory including hidden files and excluding &quot; &quot; ..
Add group write permission to all files in the current directory
Add group write permission to all files matching &quot; * &quot; or &quot; ... * &quot;
Add line numbers to each non-blank line in &quot; file &quot; starting with number 1000001
Add prefix like number and &quot; ^ M $ { LOGFILE } &gt; &quot; to every non-blank line received on standard input
Add read and execute permission to command &quot; node &quot;
Add read and execute permission to every directory under the current directory
Add read permission for &apos; other &apos; for all files / directories named &apos; rc.conf &apos; under current directory tree
Add the .abc suffix to the names of all * .txt regular files in the current directory tree
Add the execute and read permission for all and the write permission for the user to the dir _ data directory and all of its sub-directories .
Add variable TESTVAR with value &quot; bbb &quot; to a temporary environment , and search for TESTVAR in all variables and their values in the resulting environment .
Adjust the timestamp of &apos; filename &apos; by subtracting 2 hours from it .
Adjust the timestamp of file $ filename by subtracting 2 hours from it
Allow all users to execute &quot; myscript.sh &quot;
Allow all users to execute &apos; $ pathToShell &quot; myShell.sh &quot; &apos;
Allow anyone to run command &quot; Xvfb &quot; as the owner of &quot; Xvfb &quot;
Answer &quot; n &quot; to any prompts in the interactive recursive removal of &quot; dir1 &quot; , &quot; dir2 &quot; , and &quot; dir3 &quot;
Answer &quot; y &quot; to all &quot; Are you sure ? &quot; prompts from command &quot; cp * / tmp &quot;
Answer &quot; y &quot; to all prompts of &quot; rm -rf foo &quot;
Answer &quot; y &quot; to any prompts in the interactive recursive removal of &quot; dir1 &quot; , &quot; dir2 &quot; , and &quot; dir3 &quot;
Append &quot; .txt &quot; to all filenames in the current directory tree
Append * .java files from the current directory tree to tar archive &apos; myfile.tar &apos;
Append all * .mp3 files modified within the last 180 days to tar archive &apos; music.tar &apos;
Append all PNG and JPG files to tar archive &apos; images.tar &apos;
Append all regular files modified in the last 24 hours to the &quot; $ archive.tar &quot; tar archive
Append all regular files modified in the last 24 hours to the &quot; $ archive.tar &quot; tar archive
Append history lines from this session to the history list
Append the contents of &quot; .cwdhist &quot; file to the current in-memory history list
Append the contents of &quot; file.txt &quot; to the current in-memory history list
Append the current date in &apos; % Y % m % d _ % H % M &apos; format with the basename of $ 0 and save it to variable &apos; LOGNAME &apos;
Append the current date in &apos; % d % m % Y- % H- % M &apos; format , &apos; _ &apos; and the current username , then save it in &apos; name &apos; variable
Append the current date to variable &apos; LBUFFER &apos;
Append the date and command ran to &quot; / tmp / trace &quot; after every command
Append the last modification time of file $ arg as the seconds since epoch with a preceding space to the variable &apos; KEY &apos;
Archive &quot; . / dir &quot; to &quot; user @ host : / path &quot; via ssh on port 2222 and display progress
Archive &quot; . / htmlguide &quot; to &quot; ~ / src / &quot; with resolved symbolic links and delete any extraneous files from &quot; ~ / src / &quot; not found in &quot; . / htmlguide &quot;
Archive &quot; / home / abc / * &quot; to &quot; / mnt / windowsabc &quot; with human readable output
Archive &quot; / home / path &quot; to &quot; path &quot; on host &quot; server &quot; showing progress and statistics and remove files in the destination not found in the source
Archive &quot; / home / user1 &quot; to &quot; wobgalaxy02 : / home / user1 &quot; excluding hidden files
Archive &quot; / local / path / some _ file &quot; to &quot; / some / path &quot; on host &quot; server.com &quot; authenticating as user &quot; usr &quot; , compress data during transmission , show progress details .
Archive &quot; / media / 10001 / music / &quot; on host &quot; server &quot; to local directory &quot; / media / incoming / music / &quot; and skip files that are newer in the destination , delete any files in the destination not in the source , and compress data during transmission
Archive &quot; / media / Incoming / music / &quot; to &quot; / media / 10001 / music / &quot; on host &quot; server &quot; and skip files that are newer in the destination , delete any files in the destination not in the source , and compress data during transmission
Archive &quot; / my / dir &quot; on host &quot; server &quot; as user &quot; user &quot; to the current local directory excluding files ending in &quot; .svn &quot;
Archive &quot; / path / to / application.ini &quot; on host &quot; source _ host &quot; to current directory .
Archive &quot; / path / to / copy &quot; on host &quot; remote.host &quot; as user &quot; user &quot; to &quot; / path / to / local / storage &quot; updating files with different checksums , showing human readable progress and statistics , and compressing data during transmission
Archive &quot; / path / to / copy &quot; to &quot; / path / to / local / storage &quot; on host &quot; host.remoted.from &quot; as user &quot; user &quot; updating files with different checksums , showing human readable progress and statistics , and compressing data during transmission
Archive &quot; / path / to / files &quot; on host &quot; remotemachine &quot; authentifying as user &quot; user &quot; and compressing data during transmission , copy symlinks as symlinks .
Archive &quot; / path / to / files &quot; to &quot; / path &quot; on host &quot; user @ targethost &quot; with elevated permission on the remote host
Archive &quot; / path / to / files &quot; to &quot; user @ targethost : / path &quot;
Archive &quot; / path / to / files / source &quot; to &quot; user @ remoteip : / path / to / files / destination &quot; via ssh on port 2121
Archive &quot; / path / to / sfolder &quot; to &quot; name @ remote.server : / path / to / remote / dfolder &quot; compressing the data during transmission
Archive &quot; / path / to / sfolder &quot; to &quot; name @ remote.server : / path / to / remote / dfolder &quot; preserving hard links and compressing the data during transmission
Archive &quot; / path / to / sfolder / &quot; to &quot; name @ remote.server : / path / to / remote / dfolder &quot; preserving hard links and compressing the data during transmission
Archive &quot; / source &quot; and all files under &quot; folder / &quot; to &quot; / dstfolder / &quot; on host &quot; remoteserver &quot; as user &quot; user &quot; without copying files that already exist
Archive &quot; / source / backup &quot; to &quot; / destination &quot; with compression during transfer
Archive &quot; / top / a / b / c / d &quot; to host &quot; remote &quot; using relative path names
Archive &quot; / usr / local / &quot; to &quot; / BackUp / usr / local / &quot; on host &quot; XXX.XXX.XXX.XXX &quot; via ssh and show progress
Archive &quot; / var / www / test / &quot; to &quot; / var / www / test &quot; on host &quot; 231.210.24.48 &quot; as user &quot; ubuntu &quot; via ssh using identity file &quot; / home / test / pkey _ new.pem &quot;
Archive &quot; _ vim / &quot; to &quot; ~ / .vim &quot; suppressing non-error messages and compressing data during transmission
Archive &quot; _ vimrc &quot; to &quot; ~ / .vimrc &quot; suppressing non-error messages and compressing data during transmission
Archive &quot; blanktest / &quot; to &quot; test / &quot; deleting any files in the destination not found in the source
Archive &quot; directory &quot; preserving hard links from host &quot; remote &quot; to the current local directory and keep partial files , handle sparse files efficiently , and itemize changes made
Archive &quot; fileToCopy &quot; to &quot; / some / nonExisting / dirToCopyTO &quot; on host &quot; ssh.myhost.net &quot; via ssh
Archive &quot; foo / bar / baz.c &quot; to &quot; remote : / tmp / &quot; preserving the relative path of &quot; foo / bar / baz.c &quot;
Archive &quot; myfile &quot; to &quot; / foo / bar / &quot; and create directory &quot; / foo / bar / &quot; if &quot; / foo / &quot; exists
Archive &quot; path / subfolder &quot; to &quot; path &quot; , skipping files that are newer at the destination .
Archive &quot; path / to / working / copy &quot; to &quot; path / to / export &quot; excluding files or directories named &quot; .svn &quot;
Archive &quot; somedir / . / foo / bar / baz.c &quot; to &quot; remote : / tmp / &quot; preserving the relative path of &quot; foo / bar / baz.c &quot;
Archive &quot; source &quot; to &quot; destination &quot; via ssh on port &quot; PORT _ NUMBER &quot;
Archive &quot; src &quot; to &quot; dst &quot; updating files existing in &quot; dst &quot;
Archive &quot; src &quot; to &quot; dst &quot; without overwriting existing files in &quot; dst &quot;
Archive &quot; src-dir &quot; to &quot; dest-dir &quot; on &quot; remote-user @ remote-host &quot; and delete any files in &quot; dest-dir &quot; not found in &quot; src-dir &quot;
Archive &quot; src / bar &quot; on host &quot; foo &quot; to local directory &quot; / data / tmp &quot;
Archive all &quot; .txt &quot; files in the current directory to &quot; / path / to / dest &quot; keeping partially transferred files
Archive all * .xml files under current directory tree to xml.tar excluding the files that match &apos; / workspace / &apos; in their paths
Archive all * html files using tar .
Archive all directories in / path / to / directory / * ( only command line arguments , no sub-directories ) to files with .tar.gz extension
Archive all directories in / path / to / directory / * ( only command line arguments , no sub-directories ) to files with .tar.gz extension transforming the full paths to relative paths
Archive all filepattern- * 2009 * files / directories under data / into 2009.tar
Archive all filepattern- * 2009 * files / directories under data / into 2009.tar
Archive all filepattern- * 2009 * files / directories under data / into 2009.tar
Archive all files ( not directories ) in &quot; folder1 &quot; to &quot; copy _ of _ folder1 &quot; specifying to include files info.txt and data.zip
Archive all files beginning with .env or .bash in current directory to user &apos; s home directory on host &quot; app1 &quot; , preserving timestamps and skipping files that are newer on &quot; app1 &quot;
Archive all files specified on standard input under &quot; / path / to / files &quot; to &quot; / path &quot; on host &quot; targethost &quot; as user &quot; user &quot; with escalated privileges
Archive any files changed in the last day from &quot; remote _ host &quot; to &quot; local _ dir &quot;
Archive current directory to &quot; / some / path &quot; on localhost , using ssh to authentify as user &quot; me &quot; , only update files that are newer in the source directory .
Archive directory &quot; &quot; . to &quot; server2 : : sharename / B &quot;
Archive directory &quot; / mnt / data &quot; to &quot; / media / WD _ Disk _ 1 / current _ working _ data / &quot; , deleting any extraneous files in destination , compress data during copy .
Archive directory &quot; symdir &quot; to &quot; symdir _ output &quot; preserving symbolic links .
Archive directory &quot; tata &quot; to directory &quot; tata2 &quot; , compressing data during copy .
Archive directory specified by variable &quot; i &quot; to &quot; / iscsi &quot; preserving relative paths .
Archive directory specified by variable &quot; myFolder &quot; to current directory .
Archive file &apos; file &apos; with bzip2 tool , store compressed data to a file &apos; logfile &apos; and also print to screen
Archive files ( not directories ) in &quot; sorce _ dir &quot; to &quot; target _ dir &quot;
Archive files in &quot; / mnt / source-tmp &quot; to &quot; / media / destination &quot;
Archive preserving permissions and ownership files in &quot; / var / www / &quot; on host &quot; user @ 10.1.1.2 &quot; to local &quot; / var / www / &quot;
Archive showing progress &quot; sourcefolder &quot; to &quot; / destinationfolder &quot; excluding &quot; thefoldertoexclude &quot;
Archive showing progress all files in &quot; / media / 2TB \ Data / data / music / &quot; to &quot; / media / wd / network _ sync / music / &quot; excluding files matching &quot; * .VOB &quot; , &quot; * .avi &quot; , &quot; * .mkv &quot; , &quot; * .ts &quot; , &quot; * .mpg &quot; , &quot; * .iso &quot; , &quot; * ar &quot; , &quot; * .vob &quot; , &quot; * .BUP &quot; , &quot; * .cdi &quot; , &quot; * .ISO &quot; , &quot; * .shn &quot; , &quot; * .MPG &quot; , &quot; * .AVI &quot; , &quot; * .DAT &quot; , &quot; * .img &quot; , &quot; * .nrg &quot; , &quot; * .cdr &quot; , &quot; * .bin &quot; , &quot; * .MOV &quot; , &quot; * .goutputs * &quot; , &quot; * .flv &quot; , &quot; * .mov &quot; , &quot; * .m2ts &quot; , &quot; * .cdg &quot; , &quot; * .IFO &quot; , &quot; * .asf &quot; , and &quot; * .ite &quot;
Archive the entire file system into tarfile.tar.bz2
Archive the list of 1st level subdirectories in / fss / fin to / fss / fi / outfile.tar.gz
As root , edit the cron job list of user &quot; apache &quot; using the editor specified by EDITOR environment variable , or default / usr / bin / editor if this variable is not set .
Assign permissions 644 to files in the current directory tree
Assign permissions 755 to directories in the current directory tree
Assigns MAC address 00 : 80 : 48 : BA : d1 : 30 to interface eth0 .
Attempt to connect as root to localhost and copy / home / reportuser / dailyReport.doc to directory / root / dailyReports / 20150105 / - this will normally fail because ssh won &apos; t accept root connections by default .
Attempt to connect as root via ssh to host &quot; IP &quot; and copy / root / K to local machine , passing option &quot; StrictHostKeyChecking = no &quot; to the ssh backend - this will normally fail because ssh servers by default don &apos; t ( and shouldn &apos; t ) accept root logins .
Attempt to connect as root via ssh to host whose IP address or hostname is specified by environment variable IPADDRESS - this will normally fail because ssh servers normally don &apos; t accept root logins .
Back up all * .txt files / directories in new files / directories with a .bak extension in their names under / etc directory
Back up all * .txt files / directories in new files / directories with a .bak extension in their names under / etc directory
Backup all PHP files under the current directory tree
Backup all of the Java files in the current directory tree by copying them and appending the suffix .bk to each
Brings down network interface eth0 .
Build an &quot; svn hotcopy &quot; command for each subdirectory of / usr / local / svn / repos /
Calculate and show md5 sums for every files under current directory tree
Calculate and show md5 sums for every files under current directory tree
Calculate md5 checksum of $ KEY , take the 1st to 10th character , append them with the string &apos; / tmp / command _ cache . &apos; and save the rsultant string to variable FILE
Calculate md5 checksum of $ line and save to variable &apos; md5 &apos;
Calculate md5 checksum of &apos; / etc / localtime &apos; and save the first space separated part in variable &apos; checksum &apos;
Calculate md5 checksum of the list of all files / dirs in / path recursively including dot files and excluding the patterns &apos; run &apos; , &apos; sys &apos; , &apos; tmp &apos; and &apos; proc &apos; , then check the checksum against the checksum saved in / tmp / file
Calculate md5 checksum of theDirname
Calculate md5 sum of empty string
Calculate md5 sum of empty string
Calculate md5 sum of file $ ecriv
Calculate md5 sum of file $ item and save it to variable &apos; md5 &apos;
Calculate md5 sum of file $ { my _ iso _ file } and save it to variable &apos; md5 &apos;
Calculate md5 sum of file $ { my _ iso _ file } and save it to variable &apos; md5 &apos;
Calculate md5 sum of files $ source _ file and $ dest _ file
Calculate md5 sum of the md5 sum of all the sorted files under $ path
Calculate md5 sums for each files matching &apos; main.cpp * &apos;
Calculate the md5 checksum of the current directory structure and save it in variable SUM
Calculate the md5 sum of &quot; a &quot;
Calculate the md5 sum of &quot; exampleString &quot;
Calculate the md5 sum of &quot; password &quot;
Calculate the md5 sum of &quot; yourstring &quot;
Calculate the md5 sum of all &quot; .py &quot; files in &quot; / your / dir &quot; including content and filenames
Calculate the md5 sum of all * .py files in the current directory
Calculate the md5 sum of all files in &quot; / your / dir &quot; including content and filenames
Calculate the md5 sum of all files in &quot; / your / dir &quot; including content and filenames and following symbolic links
Calculate the md5 sum of all the file metadata in the current directory tree excluding &quot; .svn &quot;
Calculate the md5 sum of every &quot; .py &quot; file in directory tree &quot; / path &quot;
Calculate the md5 sum of hex byte 61
Calculate the md5 sum of the contents of &quot; $ FILES &quot;
Calculate the md5 sum of the contents of all files sorted in directory tree &quot; / path &quot;
Calculate the md5 sum of the contents of the sorted list of files &quot; $ FILES &quot;
Calculate the md5 sum of the file &quot; filename &quot; and print only the hash
Calculate the md5 sum of the list of files in the current directory
Calculate the md5 sum of the md5 sum of all the files sorted under &quot; $ path &quot;
Calculate the md5 sum of the output of &quot; du -csxb / path &quot; and compare it against the md5 sum saved in &quot; file &quot;
Calculate the md5 sum of the tar archive of &quot; dir &quot;
Calculate the md5sum of all the files with name &quot; MyCProgram.c &quot; , ignoring case
Calculate the md5sum of the executable file of command &quot; cc &quot;
Calculate the md5sum of the executable file of command &quot; gcc &quot;
Calculate the md5sum of the executable file of command &apos; c + + &apos;
Case-insensitive search all existing environment variables and their values for &quot; shell &quot; .
Change all &quot; JPG &quot; filename suffixes in current directory to &quot; jpeg &quot; .
Change all directories under &quot; . / bootstrap / cache / &quot; to owner &quot; apache &quot; and group &quot; laravel &quot;
Change all directories under &quot; . / storage / &quot; to owner &quot; apache &quot; and group &quot; laravel &quot;
Change all file permissions to 664 and all directory permissions to 775 in directory tree &quot; htdocs &quot;
Change all files in &quot; ~ &quot; which are owned by the group &quot; vboxusers &quot; to be owned by the user group &quot; kent &quot;
Change all files in the current directory tree to owner &quot; xx &quot;
Change all files with no user under &quot; / var / www &quot; to have owner &quot; root &quot; and group &quot; apache &quot;
Change directory to &quot; $ dir1 &quot; and resolve any symlinks in the resulting path
Change directory to &quot; / lib / modules / &quot; of the current kernel release
Change directory to &quot; / path / to / pdf &quot;
Change directory to parent directory and do not resolve any symlinks in the resulting path
Change directory to the &quot; lib &quot; directory located two parent directories above the path to command &quot; perl &quot;
Change directory to the alphabetically last path under the current directory
Change directory to the basename of &quot; $ 1 &quot; with &quot; .tar.gz &quot; removed
Change directory to the current user &apos; s home directory
Change directory to the directory containing file path &quot; $ 1 &quot;
Change directory to the directory containing the &quot; oracle &quot; executable
Change directory to the directory containing the &quot; oracle &quot; executable
Change directory to the directory containing the &quot; oracle &quot; executable
Change directory to the directory containing the current script
Change directory to the directory containing the executable file of command &quot; oracle &quot;
Change directory to the download directory specified in the current user &apos; s user-dirs.dirs file
Change directory to the download directory specified in the current user &apos; s user-dirs.dirs file
Change directory to the output of command &apos; ~ / marker.sh go &quot; $ @ &quot; &apos;
Change directory to the parent of the real path of the current script
Change directory to the real path of the current working directory of process &quot; $ PID &quot;
Change directory to the real path of the directory containing the current script
Change directory to the user &apos; s home directory
Change every directory under &quot; / var / www / html / &quot; to have permissions 775
Change every file under &quot; / var / www / html / &quot; to have permissions 664
Change file owner and group of &quot; / path / to / yourapp &quot; to root and print a diagnostic
Change file permissions on all regular files within a directory
Change folder to the one where $ 0 link target file is located .
Change group ownership to &apos; foo &apos; for files with GID = 2000
Change mode of all files ending with &quot; .php &quot; under the current folder to 755 and write the output to the console and &quot; logfile.txt &quot; file
Change onwer of &quot; file &quot; to &quot; user _ name &quot;
Change onwer to &quot; root &quot; and group to &quot; wheel &quot; of &quot; com.xxxx.adbind.plist &quot;
Change owner and group of &quot; script.sh &quot; to &quot; root &quot;
Change owner of &quot; folder &quot; to &quot; user _ name &quot;
Change owner of &quot; my _ test _ expect.exp &quot; to &quot; el &quot;
Change owner to &quot; $ 1 &quot; and group to &quot; httpd &quot; of &quot; .htaccess &quot;
Change owner to &quot; $ FUID &quot; and group to &quot; $ FGID &quot; of &quot; $ FILE2 &quot;
Change owner to &quot; $ user &quot; and group to &quot; $ group &quot; of &quot; $ file &quot;
Change owner to &quot; bob &quot; and group to &quot; sftponly &quot; of &quot; / home / bob / writable &quot;
Change owner to &quot; root &quot; and group to &quot; dockerroot &quot; of &quot; / var / run / docker.sock &quot;
Change owner to &quot; root &quot; and group to &quot; wheel &quot; of &quot; adbind.bash &quot;
Change owner to &quot; root &quot; and group to &quot; wheel &quot; of &quot; bin &quot;
Change owner to &quot; root &quot; and group to &quot; www-data &quot; of &quot; / foobar / test _ file &quot;
Change ownership of &quot; / data / db &quot; to the current user
Change ownership of &quot; / vol &quot; to the current user
Change permission to 000 of all directories named &apos; .texturedata &apos; under &apos; / path / to / look / in / &apos; directory tree
Change permission to 000 of all directories named &apos; .texturedata &apos; under &apos; / path / to / look / in / &apos; directory tree
Change permission to 755 for all directories under $ d directory tree
Change permission to 755 of all files / directories under current directory tree that have 777 permission
Change permissions for all PHP files under the current directory tree to 755
Change permissions for all PHP files under the current directory tree to 755 and print the number of files changed
Change permissions for all PHP files under the current directory tree to 755 and print the number of files changed
Change permissions of &quot; .bash _ logout &quot; , &quot; .bashrc &quot; , and &quot; .profile &quot; to 444
Change permissions of &quot; .git / hooks / pre-commit &quot; to 777
Change permissions of &quot; .git / hooks / prepare-commit-msg &quot; to 777
Change permissions of &quot; / dvtcolorconvert.rb &quot; to 755
Change permissions of &quot; / usr / bin / wget &quot; to 777
Change permissions of &quot; mksdcard &quot; to 755
Change permissions of all directories from the current directory tree to 644
Change permissions of all directories in the ~ / dir _ data directory tree in accordance with mode &apos; a + xr , u + w &apos;
Change permissions of all directories residing under and below . / debian to 755
Change permissions of all files ending &quot; .php &quot; under the current directory to 755 and print a count of modified files
Change permissions of all files ending in &quot; .php &quot; under the current directory to 755 and print a &apos; + &apos; for each file
Change permissions of all files ending in &quot; .php &quot; under the current directory to 755 and print a count of modified files
Change permissions of all regular files from the current directory tree to 644
Change permissions of all regular files in the ~ / dir _ data directory tree in accordance with mode &apos; a-x , u + w &apos;
Change permissions of directory &quot; / home / sshtunnel / &quot; to 555
Change permissions to 0755 for all directories in the / path directory tree
Change permissions to 0755 for all directories in the / path directory tree
Change permissions to 0755 for all directories in the / path directory tree
Change permissions to 500 for all regular files under and below the current directory
Change permissions to 600 for all regular .rb files in the current directory tree
Change permissions to 644 for * .html files under / usr / local
Change permissions to 644 for all directories under and below / path / to / someDirectory /
Change permissions to 644 for all files in the current directory tree
Change permissions to 644 for all files in the current directory tree
Change permissions to 644 for all files showing the respective chmod command
Change permissions to 644 for all regular files under and below / path / to / someDirectory /
Change permissions to 644 for all regular files under the / path / to / dir / tree
Change permissions to 644 for all regular files under the / path / to / dir / tree unless these permissions are already set
Change permissions to 644 for all regular files under the / path / to / dir / tree unless these permissions are already set
Change permissions to 644 for all subdirectories
Change permissions to 644 of multiple files with permissions 755
Change permissions to 644 of multiple regular files with permissions 755
Change permissions to 644 recursively for PHP files .
Change permissions to 644 recursively only for files
Change permissions to 700 for directories at the current level and deeper
Change permissions to 700 for files and directories deeper than the current directory
Change permissions to 755 for all directories in the / path / to / dir directory tree
Change permissions to 755 for all directories in the current directory tree
Change permissions to 755 recursively only for directories
Change permissions to 777 for all directories in the current directory tree
Change permissions to u = rw , g = r , o = for all files in the current directory tree
Change permissions to u = rw , g = r , o = for all files inside the current directory tree
Change permissions to u = rwx , g = rx , o = for all directories in the current directory tree
Change permissions to u = rwx , g = rx , o = for all directories inside the current directory tree
Change permssions of * .cgi files under directories htdocs and cgi-bin to 755
Change symbolic link &quot; $ f &quot; into a file
Change the group of &quot; myfile &quot; to &quot; friends &quot;
Change the group to &apos; temp &apos; for all files in the current directory tree that belong to group &apos; root &apos;
Change the owner and group of &quot; it &quot; to &quot; root &quot;
Change the owner and group of &quot; testfile.txt &quot; to &quot; root &quot;
Change the owner and group of &quot; uid _ demo &quot; to &quot; root &quot;
Change the owner of &quot; $ JBOSS _ CONSOLE _ LOG &quot; to &quot; $ JBOSS _ USER &quot;
Change the owner of &quot; / var / www / html / mysite / images / &quot; to &quot; nobody &quot;
Change the owner of &quot; / var / www / html / mysite / tmp _ file _ upload / &quot; to &quot; nobody &quot;
Change the owner of &quot; destination _ dir &quot; to &quot; user &quot;
Change the owner of &quot; process &quot; to &quot; root &quot;
Change the owner of all &quot; .txt &quot; files in directory tree &quot; / mydir &quot; to &quot; root &quot;
Change the owner of all files in &quot; / empty _ dir / &quot; to &quot; root &quot; using at most 10 files at a time
Change the owner of all files in &quot; / empty _ dir / &quot; to &quot; root &quot; using at most 10 files at a time
Change the owner of all files in the current directory tree excluding those who match &quot; . / var / foo * &quot; to &quot; www-data &quot;
Change the owner of all files in the directory tree &quot; dir _ to _ start &quot; excluding directory &quot; dir _ to _ exclude &quot; to &quot; owner &quot;
Change the owner of all files in the directory tree &quot; dir _ to _ start &quot; excluding file &quot; file _ to _ exclude &quot; to &quot; owner &quot;
Change the owner to &quot; hduser &quot; and group to &quot; hadoop &quot; of &quot; { directory path } &quot;
Change the owner to &quot; owner &quot; and group to &quot; nobody &quot; of &quot; public _ html &quot;
Change the owner to &quot; root &quot; and group to &quot; specialusers &quot; of &quot; dir1 &quot;
Change the owner to &quot; user &quot; and group to &quot; group &quot; of files &quot; file &quot; ...
Change the ownership of &quot; / etc / udev / rules.d / 51-android.rules &quot; to &quot; root &quot;
Change the ownership of &quot; / home / bob &quot; to &quot; root &quot;
Change the ownership of &quot; file.sh &quot; to &quot; root &quot;
Change the ownership of all aluno1 &apos; s files in the current directory and below to aluno2
Change the ownership of all files in the current directory tree from root to www-data
Change the ownership of all files in the current directory tree to myuser : a-common-group-name
Change the ownership to eva for all files / directories that belong to the user &apos; george &apos; in the entire file system without traversing to other devices / partitions
Change the ownership to the user daisy for all directories under current directory that are owned by harry
Change the permission of all regular files under current directory tree to 644
Change the permission to 0644 for all files under current directory
Change the permission to 0644 for all files under current directory
Change the permission to 0755 for all directories under current directory
Change the permission to 644 for all files under current directory
Change the permission to 644 for all files under current directory
Change the permission to 755 for all directories under current directory
Change the permissions of all regular files whose names end with .mp3 in the directory tree / var / ftp / mp3
Change the permissions of every directory in the current directory and all files and directories within them to 700
Change the permissions of the current directory and all its subdirectories to 755 .
Change the timestamp of symbolic link &quot; somesymlink &quot; to current date / time
Change the user and group of all files and directories under / var / www to www-data : www-data
Change the user to daisy for directories and subdirectories owned by harry
Change to directory &apos; foo &apos; and print to terminal all received on standard input
Change to directory &apos; xyz &apos; and resolve any symlinks in the resulting path , making the physical path the current one .
Change to directory listed in file &apos; $ HOME / .lastdir &apos;
Change to folder where the oracle binary is .
Change to folder where the oracle binary is .
Change to folder where the oracle binary is .
Change to folder where the oracle binary is .
Change to folder where the oracle binary is .
Change to location of &apos; $ TARGET _ FILE &apos; file .
Change to parent directory and resolve any symlinks in the resulting path , making the physical path the current one .
Change to the directory containing the &quot; oracle &quot; executable
Change to the directory of the executable &quot; python &quot;
Change to the directory pointed by variable TAG
Change user ownership to &apos; foo &apos; for files with UID = 1005
Change user to &quot; amzadm &quot; and group to &quot; root &quot; of &quot; / usr / bin / aws &quot;
Changes group ownership of &apos; / etc / btsync / &#91; prefered conf name &#93; .conf &apos; to &apos; btsync &apos; .
Changes group ownership of &apos; / home / www-user / php _ user.sh &apos; to &apos; www-data &apos; .
Changes group ownership of &apos; / var / run / fcgiwrap.socket &apos; to &apos; forge &apos; .
Changes group ownership of &apos; logdir &apos; to &apos; loggroup &apos; .
Changes group ownership of &apos; myprog &apos; to &apos; groupb &apos; .
Changes group ownership of &apos; myprogram &apos; to $ { USER } ( the current user )
Changes group ownership of &apos; public &apos; and &apos; private &apos; to &apos; god &apos; .
Changes group ownership of &apos; public &apos; to &apos; pub &apos; .
Changes group ownership of &apos; shared &apos; to &apos; Workers &apos; .
Changes group ownership of &apos; target _ directory &apos; to &apos; target _ group &apos; .
Changes group ownership of / sys / class / gpio / export and / sys / class / gpio / unexport to &apos; gpio &apos; .
Changes the group of defined file .
Changes to the directory where &apos; ssh &apos; executable is located .
Check all .txt files whether they contain &quot; needle &quot;
Check all .txt files whose names may contain spaces whether they contain &quot; needle &quot;
Check if &quot; $ file &quot; contains DOS line endings
Check if &quot; \ &#91; $ VLABEL \ &#93; &quot; is mounted and save the result in variable &quot; AMV &quot;
Check if &quot; ~ / mnt / sdc1 &quot; is mounted
Check if $ path _ in _ question is mount point of filesystem
Check if &apos; nullglob &apos; shell option is enabled , and if so , saves its status in &apos; is _ nullglob &apos; variable .
Check if a drive is mounted to nfs
Check if a drive with UUID &quot; $ UUID &quot; is mounted
Check if content of all top-level * .txt files in the current directory contain only unique lines
Check if current system is running in 64-bit addressing .
Check if directory $ some _ dir is empty
Check if process ID 1 exists ( init or systemd ) and current user has permission to send it signals .
Check if the $ somedir directory is empty
Check if the contents of file &quot; subset &quot; is a subset of file &quot; set &quot;
Check if the directory tree whose name is given as variable $ somedir contains no regular files
Check if the file &quot; somelink &quot; links to exists
Check md5sum of directory / path against the checksum saved in file &apos; file &apos;
Check that the master SSH control socket &quot; my-ctrl-socket &quot; to &quot; jm @ sampledomain.com &quot; is running
Check that the master ssh connection &quot; officefirewall &quot; is running
Check the environment variables generated by switching to the root account .
Check whether &quot; $ path _ in _ question &quot; is a mount point
Check whether &quot; / full / path &quot; is a mount point with no output and using the exit code
Checks compressed file integrity .
Checks that &apos; monit &apos; user is in &apos; www-data &apos; group .
Clean directories and subdirectories of the temporary files generated during normal use
Clean the current directory from all subversion directories recursively
Clear the in-memory history
Clear the in-memory history and read from the current history file
Clear the terminal &apos; s search history
Clears terminal screen .
Clears the terminal screen .
Close the master SSH control socket &quot; my-ctrl-socket &quot; to &quot; jm @ sampledomain.com &quot;
Combine every two lines of standard input
Compare &quot; $ source _ file &quot; and &quot; $ dest _ file &quot; line by line
Compare &quot; current.log &quot; and &quot; previous.log &quot; line by line and print lines containing regex pattern &quot; &gt; \ &#124; &lt; &quot;
Compare &quot; fastcgi _ params &quot; and &quot; fastcgi.conf &quot; line by line , output 3 lines of unified context , and print the C function the change is in
Compare &quot; file1 &quot; and &quot; file2 &quot; line by line with 3 lines of unified context
Compare * .csv files in the current directory tree with their analogs stored in / some / other / path /
Compare * .csv files in the current directory tree with their analogs stored in / some / other / path / prompting before running &apos; diff &apos;
Compare each .xml file under the current directory with a file of the same name in &quot; / destination / dir / 2 &quot;
Compare each file in &quot; repos1 / &quot; and &quot; repos2 / &quot; , treat absent files as empty , ignore differences in whitespace and tab expansions , and print 3 lines of unified context
Compare files &quot; A1 &quot; and &quot; A2 &quot; with 3 lines of unified context and print lines beginning with &quot; + &quot;
Compare files &apos; file1 &apos; and &apos; file2 &apos; and print in three columns strings unique for first file , second file , and common ones
Compare files in &quot; / tmp / dir1 &quot; and &quot; / tmp / dir2 &quot; , treat absent files as empty and all files as text , and print 3 lines of unified context
Compare files in &quot; / tmp / dir1 &quot; and &quot; / tmp / dir2 &quot; , treating absent files as empty and all files as text
Compare sorted files &apos; f1.txt &apos; and &apos; f2.txt &apos; and print in three columns strings unique for first file , second file , and common ones
Compare sorted files &apos; f1.txt &apos; and &apos; f2.txt &apos; and print in three columns strings unique for first file , second file , and common ones
Compare text &quot; hello &quot; and &quot; goodbye &quot; line by line
Compare the contents of &quot; / bin &quot; and &quot; / usr / bin &quot; line by line
Compare the contents of gzip-ompressed files &quot; file1 &quot; and &quot; file2 &quot;
Compare the files in &apos; FOLDER1 &apos; and &apos; FOLDER2 &apos; and show which ones are indentical and which ones differ
Compares two listings &apos; ls &apos; and &apos; ls * Music * &apos; , showing only strings that unique for first listing .
Compose filepath as folder path where file $ SRC is located , and lowercase filename of $ SRC file , and save it in &apos; DST &apos; variable
Compose filepath as folder path where file $ f is located , and lowercase filename of $ f file , and save it in &apos; g &apos; variable
Composes full process tree with process id numbers , and prints only those strings that contain &apos; git &apos; .
Compress &quot; archive.tar &quot;
Compress &quot; hello world &quot; and save to variable &quot; hey &quot;
Compress &quot; my _ large _ file &quot; with gzip and split the result into files of size 1024 MiB with prefix &quot; myfile _ split.gz _ &quot;
Compress $ file file using gzip
Compress a file named &apos; { } &apos; in the current directory
Compress all &quot; .txt &quot; files in all sub directories with gzip
Compress all &quot; .txt &quot; files in the current directory tree with gzip
Compress all * .img files using bzip2
Compress all directories found in $ LOGDIR wherein a file &apos; s data has been modified within the last 24 hours
Compress all directories found in directory tree $ LOGDIR that have been modified within the last 24 hours
Compress all files in directory &quot; $ PATH _ TO _ LOGS &quot; that were last modified more than &quot; $ SOME _ NUMBER _ OF _ DAYS &quot; days ago
Compress all files in the &quot; $ FILE &quot; directory tree that were last modified 30 days ago
Compress all files in the &quot; $ FILE &quot; directory tree that were last modified 30 days ago and have not already been compressed with gzip
Compress all files under / source directory tree using gzip with best compression method
Compress all files under current directory tree with gzip
Compress all files with &apos; .txt &apos; extension under current directory
Compress and display the gzip compression ratio of every file on the system that is greater than 100000 bytes and ends in &quot; .log &quot;
Compress and display the original filename of every file on the system that is greater than 100000 bytes and ends in &quot; .log &quot;
Compress every file in the current directory that matches &quot; * cache.html &quot; and keep the original file
Compress every file in the current directory tree that matches &quot; * cache.html &quot; and keep the original file
Compress every file in the current directory tree with gzip and keep file extensions the same
Compress files excluding * .Z files
Compress from standard input and print the byte count preceded with &apos; gzip . &apos;
Compress from standard input with gzip
Compress in parallel regular files in the current directory tree that were last modified more than 7 days ago
Compress regular files in the current directory tree that were last modified more than 7 days ago
Compress the file &apos; file &apos; with &apos; bzip2 &apos; and append all output to the file &apos; logfile &apos; and stdout
Compresses all &apos; * .xml &apos; files under current directory with &apos; bzip2 &apos; utility .
Compresses all files in a current folder ( not recursively ) .
Compresses all files in the directory &apos; PATH _ TO _ FOLDER &apos; without recursion and keeps uncompressed files from deletion .
Compresses all files listed in array $ * , executing in background .
Compresses file &apos; example.log &apos; keeping original file in place .
Compresses with compression level 9 all files under the current folder but already compressed &apos; * .bz2 &apos; files , performing in background .
Concatenate all files under the current directory and below that contain &quot; test &quot; in their names
Concatenate files containing &apos; test &apos; in their names
Concatenate with a space every other line in &quot; input.txt &quot;
Connect as ssh user specified by variable USER to host whose IP address or host name is specified by HOST , and copy remote file specified by variable SRC to location on local host specified by variable DEST , disabling progress info but enabling debug info .
Connect to &quot; $ USER _ AT _ HOST &quot; using connection sharing on &quot; $ SSHSOCKET &quot; and request the master to exit
Connect to host &quot; $ USER _ AT _ HOST &quot; in master mode in the background without executing any commands and set the ControlPath to &quot; $ SSHSOCKET &quot;
Connect to host &quot; $ { HOSTNAME } &quot; as user &quot; $ { USERNAME } &quot; and execute &quot; $ { SCRIPT } &quot; non-interactively
Connect to host &quot; remotehost &quot; as ssh user &quot; user &quot; to copy remote file &quot; / location / KMST _ DataFile _ * .kms &quot; to current directory on local host .
Connect to host &quot; server _ b &quot; as ssh user &quot; user &quot; and copy local file &quot; / my _ folder / my _ file.xml &quot; to server _ b &apos; s directory &quot; / my _ new _ folder / &quot; .
Connect to host &apos; hostname &apos; as user &apos; username &apos; by forcing host key confirmation
Connect to port 1234 of specified IP address or hostname as ssh user &quot; user &quot; , and copy all visible files in / var / www / mywebsite / dumps / on this host to local directory / myNewPathOnCurrentLocalMachine - this directory must already exist on local host .
Connect to port 2222 of example.com as ssh user &quot; user &quot; , and copy local file &quot; / absolute _ path / source-folder / some-file &quot; to remote directory &quot; / absolute _ path / destination-folder &quot;
Connect via ssh to &quot; your.server.example.com &quot; and recursively copy directory &quot; / path / to / foo &quot; on this host to direcotry &quot; / home / user / Desktop &quot; on local host , using &quot; blowfish &quot; cipher algorithm .
Continuously answer &quot; y &quot; to any prompt from &quot; mv &quot; ...
Continuously send &quot; y &quot; to all prompts of command &quot; rm &quot;
Convert &quot; 1199092913 &quot; to dotted decimal IPv4 address
Convert &quot; ; &quot; separated list &quot; luke ; yoda ; leila &quot; to new line separated list
Convert &quot; abc &quot; to a string of hexadecimal bytes
Convert relative path &quot; / x / y / .. / .. / a / b / z / .. / c / d &quot; into absolute path with resolved symbolic links
Convert relative symbolic link &quot; $ link &quot; to absolute symbolic link
Convert standard input into a dump of octal bytes without the first 8 bytes of address and count the unique results
Convert the content of variable &apos; CLEAN &apos; to small letters
Convert the contents of &apos; var1 &apos; variable to lowercase
Convert the first 16 characters in &quot; / dev / random &quot; to a single hexadecimal value
Copies &quot; &quot; $ project _ dir &quot; / iTunesArtwork &quot; , to the &apos; Payload / iTunesArtwork &apos; , rewriting files if necessary .
Copies $ { FILE } to COLLECT folder with unique name formatted like &apos; job _ XXXXXXXXX &apos; .
Copies &apos; &#91; MacVim _ source _ folder &#93; / src / MacVim / mvim &apos; to the &apos; / usr / local / bin &apos; , printing info message on each operation .
Copies &apos; libgtest _ main.so &apos; and &apos; libgtest.so &apos; to &apos; / usr / lib / &apos; , preserving all attributes , and copying symlinks as symlinks , without following in source files .
Copies &apos; src &apos; to &apos; dest &apos; preserving overwriting the existing files .
Copies all files like &quot; * FooBar * &quot; under the current directory to the &apos; ~ / foobar &apos; directory .
Copies all files like &apos; lib * .so &apos; to &apos; ~ / usr / gtest / lib / &apos; directory .
Copies all files under current directory like &apos; * FooBar * &apos; to the &apos; ~ / foo / bar &apos; directory .
Copies all files under the current directory but ones with &apos; * / not-from-here / * &apos; in path to the &apos; / dest / &apos; directory .
Copies all files under the current directory like any-cased &apos; * foobar * &apos; to the &apos; ~ / foo / bar &apos; directory .
Copies all files under the current folder like &quot; file.ext &quot; with &quot; FooBar &quot; in the path to the root of the current folder , preserving mode , ownership and timestamp attributes .
Copies all files with &quot; FooBar &quot; in the path under the current directory to the &apos; ~ / foo / bar &apos; directory .
Copies defined file to the target folder without overwriting existing files .
Copies file &apos; / boot / config- &apos; uname -r &quot; to the &apos; .config &apos; , printing info message and prompting before owerwriting files .
Copies file &apos; file.dat &apos; to each top-level directory in the current directory .
Copies file &apos; file.txt &apos; to each top-level directory in the current directory .
Copies file &apos; file1 &apos; to each of directories &apos; dir1 &apos; , &apos; dir2 &apos; , &apos; dir3 &apos; .
Copies file &apos; fileName.txt &apos; to each of directories listed in the &apos; allFolders.txt &apos; list .
Copies file &apos; index.html &apos; to each top-level directory in the current directory beginning with &apos; d &apos; .
Copies file &apos; index.html &apos; to each top-level directory in the current directory .
Copies file &apos; test &apos; to each of directories like &apos; . / fs * / * &apos; .
Copies files &apos; src / prog.js &apos; and &apos; images / icon.jpg &apos; with fully-defined path to &apos; / tmp / package &apos; directory .
Copies newest file under the current folder to the &apos; / tmp / &apos;
Copy &quot; * .cc &quot; , &quot; * .h &quot; , and &quot; SConstruct &quot; to &quot; rsync : / / localhost : 40001 / bledge _ ce &quot; using blocking IO
Copy &quot; . / export &quot; recursively to &quot; / path / to / webroot &quot; preserving permissions
Copy &quot; / Users / username / path / on / machine / &quot; to &quot; username @ server.ip.address.here : / home / username / path / on / server / &quot; and convert encoding from UTF-8-MAC to UTF-8
Copy &quot; / home / username / path / on / server / &quot; to &quot; username @ your.ip.address.here : / Users / username / path / on / machine / &quot; and convert encoding from UTF-8 to UTF-8-MAC
Copy &quot; / new / x / y / z / &quot; over the network to &quot; user @ remote : / pre _ existing / dir / &quot; preserving the directory hierarchy
Copy &quot; / path / to / source &quot; to &apos; / path / to / dest &apos; in remote &quot; username @ computer &quot;
Copy &quot; 6.3.3 / 6.3.3 / macosx / bin / mybinary &quot; to &quot; ~ / work / binaries / macosx / 6.3.3 / &quot; and create directory &quot; ~ / work / binaries / macosx / 6.3.3 / &quot; if &quot; ~ / work / binaries / macosx / &quot; exists
Copy &quot; fileName.txt &quot; to all directories listed in &quot; allFolders.txt &quot; - names may not contain spaces .
Copy &quot; some _ file _ name &quot; to &quot; destination _ directory &quot; and change ownership to &quot; someuser : somegroup &quot;
Copy &quot; source &quot; recursively to &quot; destination &quot; excluding &quot; path1 / to / exclude &quot; and &quot; path2 / to / exclude &quot;
Copy &quot; src &quot; to &quot; dest &quot; if &quot; src &quot; is newer than &quot; dest &quot;
Copy &quot; src / prog.js &quot; and &quot; images / icon.jpg &quot; to &quot; / tmp / package &quot; keeping relative path names
Copy &quot; src / prog.js &quot; and &quot; images / icon.jpg &quot; to &quot; / tmp / package / &quot; keeping relative path names
Copy &apos; / path / to / source &apos; from remote &quot; username @ computer &quot; to local &quot; / path / to / dest &quot;
Copy * .mp3 files to / tmp / MusicFiles
Copy * .txt files from the dir / directory tree along with their parent directories
Copy / my / configfile to all empty directories of the $ somedir directory tree
Copy a comlex directory tree from one machine o another while preserving copy permissions and ownership
Copy a file xyz.c to all directories or over all files matching the letter &apos; c &apos; at the end of their names under current directory tree
Copy a file xyz.c to all the .c files present in the C directory and below
Copy a file xyz.c to all the directories below the current one whose names begin with &quot; temp &quot;
Copy a large sparse file &quot; sparse-1 &quot; to &quot; sparse-1-copy &quot;
Copy a whole directory tree skipping files residing on other files systems to destination _ dir
Copy all &quot; .php &quot; files in &quot; projects / &quot; directory tree to &quot; copy / &quot; preserving directory hierarchy
Copy all &quot; .xml &quot; files in the current directory tree to &quot; / new / parent / dir &quot; preserving the directory hierarchy
Copy all * .data files under / source _ path to / target _ path
Copy all * .mp3 files under the current directory to / tmp / MusicFiles /
Copy all .patch files from the current directory tree to patches /
Copy all .pdf files in the . / work / directory tree with size bigger then 2 MB and modified more than 5 days ago to the . / backup / directory
Copy all .png files from the home directory tree to imagesdir /
Copy all .txt files from the dir / directory tree along with their parent directories hierarchy
Copy all directories recursively from &quot; source / &quot; to &quot; destination / &quot; excluding all files
Copy all directories recursively from &quot; source / &quot; to &quot; destination / &quot; excluding all files
Copy all files ( not directories ) in &quot; / path / to / local / storage &quot; to &quot; / path / to / copy &quot; on host &quot; remote.host &quot; authenticating as user &quot; user &quot;
Copy all files and directories in &quot; / home / &quot; to &quot; / newhome &quot; preserving directory hierarchy and modification time
Copy all files and directories under the current directory into &quot; .. / new &quot; preserving relative paths
Copy all files below the current directory whose names contain &quot; FooBar &quot; to directory foo / bar / in user &apos; s home directory .
Copy all files below the current directory whose names contain &quot; FooBar &quot; to directory foo / bar / in user &apos; s home directory .
Copy all files below the current directory whose names contain &quot; foobar &quot; ( case-insensitive ) to directory foo / bar / in user &apos; s home directory .
Copy all files ending in &quot; .a &quot; in directory trees matching &quot; folder * &quot; to &quot; / path / to / dest &quot; preserving directory hierarchy
Copy all files from the current directory tree to / path / to / destination / dir preserving their times , permissions , and ownership
Copy all files in &quot; / mail &quot; to &quot; / home / username &quot; preserving the directory hierarchy and modification times
Copy all files in &quot; / var / spool / mail &quot; to &quot; / home / username / mail &quot; preserving the directory hierarchy and modification times
Copy all files in current directory that do not match * / exlude-path / * in their paths to / destination / preserving directory structure
Copy all files in current directory that do not match * / not-from-here / * in their names to / dest
Copy all files in current directory that do not match * / not-from-here / * in their paths to / dest
Copy all files in the current directory except those containing &apos; Music &apos; to &apos; / target _ directory &apos; .
Copy all files in the current directory tree matching &quot; textToSearch &quot; to &quot; $ destination _ path &quot;
Copy all files matching &quot; * .sh &quot; in &quot; $ from / * &quot; to &quot; root @ $ host : / home / tmp / &quot; compressing data during transmission
Copy all files matching &quot; * failed.ipynb &quot; in the current directory tree to &quot; . / fails &quot; preserving the directory hierarchy
Copy all files matching &quot; file _ name.extension &quot; to &quot; / path / to / receiving / folder &quot; preserving directory hierarchy
Copy all files named &apos; script.sh &apos; in directory &apos; olddir &apos; to directory &apos; newdir &apos;
Copy all files that match &apos; FooBar &apos; in their paths under current directory tree to the &apos; ~ / foo / bar &apos; directory
Copy all files unconditionally and directories in directory tree &quot; myfiles &quot; to &quot; target-dir &quot; preserving directory hierarchy and modification time
Copy all files under director &apos; foo &apos; whose name doesn &apos; t contain &apos; Music &apos; to directory &apos; bar &apos; .
Copy all files with &apos; .png &apos; ( case insensitive ) extension under &apos; / home / mine &apos; directory tree to &apos; / home / mine / pngcoppies / &apos; directory with new names constructed by prepending &apos; copy &apos; in their names
Copy all files with &apos; .png &apos; ( case insensitive ) extension under &apos; / home / mine &apos; directory tree to &apos; / home / mine / pngcoppies / copy . &apos; directory
Copy all files with name pattern $ j.sh ( case insensitive ) under &apos; / tmp / 2 &apos; directory tree to $ i directory
Copy all regular files from the current directory tree to directory &apos; TARGET &apos;
Copy all regular files whose names end in &quot; ~ &quot; from the / path directory tree to ~ / backups /
Copy an entire file structure , creating empty files in the copy instead of copying the actual files .
Copy and always overwrite all files in &quot; / zzz / zzz &quot; to &quot; / xxx / xxx &quot;
Copy directory hierarchy &quot; dir &quot; and all its .txt files to &quot; dir _ txt &quot;
Copy directory hierarchy from the current working directory to &quot; / path / to / backup / &quot;
Copy directory structure from directory &apos; olddir &apos; to &apos; newdir &apos;
Copy directory tree preserving UID and GID and leaving user files alone
Copy file &quot; exist &quot; from directory &quot; / file / that &quot; to a new file named &quot; file &quot; in &quot; / location / for / new &quot;
Copy file &apos; src &apos; to &apos; dest &apos; , except if &apos; dest &apos; already exists .
Copy file header.shtml to directories dir1 , dir2 , dir3 , and dir4
Copy file in current directory of local host to host &quot; remote &quot; , connecting as ssh user matching current local username , and copying the file in home directory on remote host - enable compression during transfer .
Copy file linked to by &quot; bar.pdf &quot; to &quot; bar.pdf &quot;
Copy file linked to by &quot; file &quot; to &quot; file &quot;
Copy file or directory &apos; gtest &apos; from directory &apos; include &apos; in current directory to / usr / include , preserving ownerships and permissions .
Copy file or folder linked to by &quot; file &quot; to &quot; file &quot;
Copy local file &quot; $ 1 &quot; to host &quot; $ 2 &quot; into host directory &quot; $ 3 &quot;
Copy permissions from &quot; version2 / somefile &quot; to &quot; version1 / somefile &quot;
Copy recursively &quot; / source / backup &quot; to &quot; / destination &quot; preserving symbolic links , modification times , and permissions
Copy recursively &quot; tata / &quot; to &quot; tata2 / &quot; and remove read , write , and execute permission for other
Copy src _ dir recursively to dest _ dir , but without overwriting existing files .
Copy the 3 specified files to / tmp / package , preserving / creating directory structure of each file as specified on command line .
Copy the current directory tree to &quot; newdirpathname &quot; preserving directory hierarchy
Copy the current directory tree to &apos; / path / to / destination / dir &apos; preserving permissions , timestamp and ownership
Copy the directory hierarchy from &quot; original &quot; to &quot; new &quot;
Copy the directory hierarchy of the current directory to &quot; destdir &quot;
Copy the directory structure in &quot; src / &quot; to &quot; dest / &quot; with empty files
Copy the entire &quot; / lib &quot; and &quot; / usr &quot; directory including symlinks from &quot; pi @ 192.168.1.PI &quot; to &quot; $ HOME / raspberrypi / rootfs &quot; and delete files after the transfer
Copy the entire contents of the current directory preserving ownership , permissions , and times
Copy the entire directory tree under t1 to t2 , do not create a containing t1 directory in t2 .
Copy the executable &quot; python2.7 &quot; in $ PATH to &quot; myenv / bin / python &quot;
Copy the owner and group from &quot; file.txt &quot; to &quot; $ tempfile &quot;
Copy the owner and group of &quot; oldfile &quot; to &quot; newfile &quot;
Copy the standard output of a &quot; bash &quot; session to &quot; / var / log / bash.out.log &quot;
Correct permissions for directories in the web directory
Correct permissions for files in the web directory
Count all directories in maximum 1 level down the current directory
Count all directories under current directory
Count all files under &quot; / DIR &quot;
Count all the lines of all &apos; * .c &apos; files in current directory recursively
Count all the lines of all files with names ending with &apos; php &apos; in current directory recursively
Count all the lines of all php files in current directory recursively
Count all the mp3 files in the music user &apos; s home and subdirs .
Count and show the number of lines for each PHP files in the current directory tree
Count files accessed more than a month ago
Count files in $ DIR _ TO _ CLEAN that are older than $ DAYS _ TO _ SAVE days
Count files in the current path by modification month
Count line numbers on files and record each count along with individual file name .
Count number of A records of domain &apos; $ domain &apos; on nameserver &apos; $ server &apos; and save value in &apos; result &apos; variable
Count number of lines in &quot; Sample _ 51770BL1 _ R1.fastq.gz &quot;
Count number of lines in all files matching &quot; * R1 * .fastq.gz &quot;
Count number of occurences of &quot; 123 &quot; in the string &quot; 123 123 123 &quot; ( ie . 3 )
Count the * .html files residing in the / usr / src directory tree and containing string &quot; foo &quot;
Count the * .html files residing in the / usr / src directory tree and containing string &quot; foo &quot;
Count the number of .gz files in directory tree / home / user1 / data1 / 2012 / mainDir
Count the number of .gz files in the current directory tree
Count the number of .java files in all folders rooted in the current folder
Count the number of all directories under current directory non-recursively
Count the number of all directories under directory &apos; / mount / point &apos; non-recursively
Count the number of areas that differ in &quot; file1 &quot; and &quot; file2 &quot; with 0 lines of unified context
Count the number of characters in the list of regular files from the current directory tree
Count the number of differing lines in &quot; file1 &quot; and &quot; file2 &quot;
Count the number of differing lines in &quot; file1 &quot; and &quot; file2 &quot; with 0 lines of unified context
Count the number of directories in the current directory and below
Count the number of directories under directory &apos; / directory / &apos; non-recursively
Count the number of equal lines in &quot; file1.txt &quot; and &quot; file2.txt &quot;
Count the number of equal lines in sorted files &quot; ignore.txt &quot; and &quot; input.txt &quot;
Count the number of files in the / usr / ports directory tree whose names begin with &apos; pkg-plist &apos; and which contain &apos; dirrmtry &apos;
Count the number of files in the / usr / ports directory tree whose names begin with &apos; pkg-plist &apos; and which contain &apos; etc / rc.d / &apos;
Count the number of files in the / usr / ports directory tree whose names begin with &apos; pkg-plist &apos; and which contain &apos; unexec.rmdir % D &apos;
Count the number of files in the current directory and below
Count the number of files in the directory trees whose pathnames match pattern &apos; / dev / sd * &#91; a-z &#93; &apos;
Count the number of files in the directory trees whose pathnames match pattern &apos; / dev / sd * &#91; a-z &#93; &apos;
Count the number of files named &apos; job.history &apos; under &apos; / data / SpoolIn &apos; directory tree that match &apos; FAIL &apos; in their contents
Count the number of files named &apos; job.history &apos; under &apos; / data / SpoolIn &apos; directory tree that match &apos; FAIL &apos; in their contents
Count the number of files named &apos; job.history &apos; under &apos; / data / SpoolIn &apos; directory tree that match &apos; FAIL &apos; in their contents
Count the number of files named &apos; file1 &apos;
Count the number of files / directories named file1 under current directory
Count the number of files / directories with &apos; .php &apos; extension under current directory tree and change the permissions to 755
Count the number of lines in &quot; / dir / file.txt &quot;
Count the number of lines in &quot; / etc / fstab &quot;
Count the number of lines in &quot; myfile.txt &quot;
Count the number of lines in &quot; testfile &quot; wrapped to fit in a width of &quot; $ COLUMNS &quot; characters
Count the number of lines in all &quot; .php &quot; files in the current directory tree
Count the number of lines in all &quot; .php &quot; files in the current directory tree
Count the number of lines in all &quot; .txt &quot; files
Count the number of lines in all files in the xargstest / directory tree that match pattern &apos; file ? ? &apos;
Count the number of lines in each .java file in the current directory tree
Count the number of lines in every regular .rb file in the current directory tree
Count the number of lines in every regular .rb file in the current directory tree
Count the number of non localhost users
Count the number of open files for PID &quot; $ PYTHONPID &quot; every 2 seconds
Count the number of regular files in the current directory that contain a vowel in their names
Count the number of regular files in the current directory tree
Count the number of regular files with 755 permission under current directory tree
Count the number of regular files with case insensitive name pattern $ srchfor under &apos; teste2 &apos; directory tree
Count the number of the regular files residing under and below . / randfiles /
Count the number of total files and folders under current directory tree
Count the number of unique duplicate lines in &quot; file1 &quot; and &quot; file2 &quot; combined
Count the number of unique lines in sorted file &quot; a.txt &quot; compared to sorted file &quot; b.txt &quot;
Count the number of users logged in
Count the occurrence of 2 in the string &apos; 1 1 2 2 2 5 &apos;
Count the total number of lines in all &quot; * .gz &quot; files in the current directory tree after decompression
Count the total number of lines in all HTML files under / usr / src that contain string &quot; foo &quot;
Count total number of lines in all * txt files in current directory
Counts all * .mod files in a / boot / grub / folder .
Counts all business days in a current month .
Counts all files in a DIR _ NAME folder and subfolders .
Counts all files in a current folder and subfolders .
Counts all files in a current folder and subfolders .
Counts all files in a current folder and subfolders .
Counts all lines in $ i file .
Counts all top-level files in a current folder .
Counts lines in each * .cpp , * .c , * .h file .
Counts lines in each * .php file sorted by file path .
Counts lines in each * .php file , sorted by number of lines , descending .
Counts lines in each * .php file .
Counts lines in each * .php file .
Counts lines in each * .php file .
Counts lines in each * .php file .
Counts lines in each of * .php files in a current folder and subfolders and prints total count as well .
Counts lines in each of * .php files in a current folder and subfolders and prints total count as well .
Counts lines in each of * .php files in a current folder and subfolders ignoring &apos; tests &apos; folder and prints total count as well .
Counts lines in each of * .php files in a current folder and subfolders ignoring &apos; tests * &apos; folders and prints total count as well .
Counts lines in each of * .php files in current folder with subfolders and prints total count as well .
Counts lines in file &apos; filename &apos; ignoring empty lines and lines with spaces only .
Counts lines of &apos; file &apos; file .
Counts lines of / dir / file.txt file .
Counts lines of / dir / file.txt file .
Counts lines of / etc / fstab file .
Counts lines of all * .txt files in a current folder .
Counts lines of myfile.txt file .
Counts lines with all-cased word &apos; null &apos; in file &apos; myfile.txt &apos; .
Counts non-blank lines ( lines with spaces are considered blank ) in all * .py files in a current folder .
Counts non-empty lines in file fileName .
Counts number of * .php files in a current folder and subfolders .
Counts number of processors and saves in variable NUMCPU .
Counts the number of lines in * .php and * .inc files in a current folder and subfolders .
Counts total lines in all * .php files in the current directory recursively
Creae a tarball &apos; files.tar.gz &apos; containing all regular files under current directory tree that are newer than 2013-12-04 and older than 2013-12-05
Create 1000 files each file having a number from 1 to 1000 named &quot; file000 &quot; to &quot; file999 &quot;
Create 5 empty .txt files
Create 6-letter named temporary directory in a folder path that is provided as the first positional parameter , and save the path to it in a variable &apos; tmp &apos;
Create 6-letter named temporary file in a folder path $ file1 , and save the path to it in a variable &apos; tmpfile &apos;
Create 6-letter named temporary file in a folder path that is provided as the first positional parameter , and save the path to it in a variable &apos; tmpfile &apos;
Create 998 directories one inside another with sequential names folder1 , folder2 , ... folder998 and create an additional folder named &apos; folder9991000 &apos; inside the last &apos; folder998 &apos; directory
Create a compressed archive from &quot; www &quot; and split the contents into files of at most 1073741824 bytes and use prefix &quot; www-backup.tar &quot; .
Create a compressed archive named &apos; my _ directory.tar.gz &apos; with files inside directory &apos; my _ directory &apos; without including the directory entry &apos; my _ directory &apos; itself
Create a compressed archive of &quot; / home &quot; and split the contents into files with at most 4000 MiB each and use prefix &quot; / media / DRIVENAME / BACKUPNAME.tgz &quot;
Create a copy of index.html in all directories in current directory whose name contains Va , pausing for confirmation before overwriting any existing files - names may not contain spaces .
Create a copy of index.html in all directories in current directory , pausing for confirmation before overwriting any existing files - names may not contain spaces - names may not contain spaces .
Create a directory named &apos; alpha _ real &apos; in the current directory
Create a full path symbolic link &quot; $ newlink &quot; from a relative path symbolic link &quot; $ origlink &quot;
Create a gzip archive file ( $ tarFile ) of all * .log files under $ sourcePath
Create a hard link named &quot; my-hard-link &quot; to &quot; myfile.txt &quot;
Create a local SSH tunnel from &quot; localhost &quot; port 16379 to &quot; localhost &quot; port 6379 using key &quot; keyfile.rsa &quot; and disables the interactive shell
Create a new RSA key for ssh with no passphrase , store it in ~ / .ssh / id _ rsa without prompting to overwrite if this file exists , and minimize output from ssh-keygen .
Create a new directory &quot; existing-dir / new-dir / &quot; on host &quot; node &quot;
Create a rsa key of 2048 bits with comment &quot; michael &quot; and store it in file &quot; key &quot; .
Create a rsa key with comment specified by variable APP and passphrase specified y SSHKEYPASS .
Create a ssh key and store it in the file ~ / .ssh / apache-rsync
Create a ssh key of RSA type , and prompt for a filename to store it , presenting the default for this type of key as $ HOME / .ssh / id _ rsa
Create a ssh key with no passphrase and store it in &quot; outfile &quot; .
Create a ssh tunnel on local port 2222 through &quot; bridge.example.com &quot; to &quot; remote.example.com &quot; port 22 without executing any commands and run in the background
Create a symbolc link in the current directory to &quot; target &quot;
Create a symbolc link named &quot; latest &quot; to the last modified file or directory in &quot; target-directory &quot;
Create a symbolc link named &quot; public _ html &quot; to &quot; current / app / webroot &quot; under the current working directory
Create a symbolic link in &quot; / bar / tmp / &quot; for each file in directory &quot; / foo &quot; that does not start with &quot; runscript &quot;
Create a symbolic link in directory &quot; / path / to / dir &quot; for each file and directory under the current directory starting with &quot; &quot; .
Create a symbolic link in directory &quot; new &quot; for each file in &quot; original &quot; directory tree
Create a symbolic link in directory &quot; ~ / newlinks &quot; for each file listed in &quot; results2.txt &quot;
Create a symbolic link in target directory &quot; $ tmpdir &quot; for each file under the current directory
Create a symbolic link in target directory &quot; ~ / newlinks &quot; to &quot; $ source &quot;
Create a symbolic link in the current directory for each .jpg file under &quot; dir &quot;
Create a symbolic link in the current directory for each file .dbf under the directories matching &quot; / home / michael / foxpro / mount / A &#91; 1FV &#93; / &#91; 12 &#93; &#91; 0-9 &#93; &#91; 0-9 &#93; &#91; 0-9 &#93; &quot;
Create a symbolic link in the current directory for each file under the directories matching &quot; .. / &#91; 12 &#93; &#91; 0-9 &#93; &#91; 0-9 &#93; &quot;
Create a symbolic link in the current directory for each hidden file or directory in &quot; git-stuff / home / &quot; excluding &quot; &quot; . and &quot; &quot; ..
Create a symbolic link in the current directory to &quot; $ file &quot;
Create a symbolic link in the current directory to &quot; .. / config / init &quot;
Create a symbolic link named &quot; $ 1 / link &quot; to the current working directory
Create a symbolic link named &quot; $ 1 / link &quot; to the existing full and real path of &quot; $ 2 &quot;
Create a symbolic link named &quot; $ HOME / bin / &quot; to &quot; $ HOME / downloads / fnord &quot;
Create a symbolic link named &quot; $ SYMLINK &quot; to &quot; $ ACTUAL _ DIR &quot;
Create a symbolic link named &quot; $ tmpdir / bam &quot; to the full path of command &quot; bam2 &quot; found in &quot; $ PATH &quot;
Create a symbolic link named &quot; $ { DESTINATION } $ { file } &quot; to &quot; $ { TARGET } $ { file } &quot;
Create a symbolic link named &quot; .bash _ profile &quot; to &quot; .bashrc &quot;
Create a symbolic link named &quot; .profile &quot; to &quot; git-stuff / home / profile &quot; without dereferencing &quot; .profile &quot;
Create a symbolic link named &quot; / lib / libc.so.0 &quot; to &quot; / lib / libc.so.6 &quot;
Create a symbolic link named &quot; / usr / bin / my-editor &quot; to &quot; / usr / share / my-editor / my-editor-executable &quot; and attemp to hard link directories
Create a symbolic link named &quot; / usr / local / bin / subl &quot; to &quot; / Applications / Sublime Text 2.app / Contents / SharedSupport / bin / subl &quot;
Create a symbolic link named &quot; foo &quot; to &quot; / var / cache / apt / archives / bash _ 4.3-14ubuntu1 _ amd64.deb &quot;
Create a symbolic link named &quot; temp &quot; to &quot; newtarget &quot;
Create a symbolic link named &quot; wh &quot; to &quot; $ wh &quot;
Create a symbolic link named &quot; ~ / bin / subl &quot; to &quot; / Applications / Sublime Text 2.app / Contents / SharedSupport / bin / subl &quot;
Create a symbolic link named &quot; ~ / bin / subl &quot; to &quot; / Applications / Sublime Text.app / Contents / SharedSupport / bin / subl &quot;
Create a symbolic link named the basename of &quot; $ file &quot; to &quot; $ file &quot;
Create a symbolic link relative to link location named &quot; $ dest _ dir / $ orig _ name &quot; to &quot; $ orig _ dest &quot;
Create a symbolic link to &quot; $ file &quot; named &quot; / tmp / allfiles &quot;
Create a symbolic link to file &quot; / usr / bin / perl &quot; named with escaped characters &quot; / usr / local / bin / perl \ r \ n &quot;
Create a symbolic lnk named &quot; $ 1 / link &quot; to &quot; $ dir &quot;
Create a symolic link in &quot; / usr / local / &quot; to &quot; / Applications / Sublime \ Text.app / Contents / SharedSupport / bin / subl &quot;
Create a symolic link in &quot; / usr / local / bin / &quot; to &quot; / Applications / Sublime \ Text.app / Contents / SharedSupport / bin / subl &quot;
Create a symolic link in &quot; / usr / local / bin / &quot; to &quot; / Applications / Sublime \ Text \ 2.app / Contents / SharedSupport / bin / subl &quot;
Create a tar archive with all * .java files under the current directory
Create a tar file containing all the files in ~ / Library folder that contain spaces in their names
Create all directories in the path specified by variable $ javaUsrLib as super user
Create all directories in the path specified by variable $ tempWork
Create an archive named newArch from the contents of . / test directory
Create an empty file &quot; foo &quot; in each directory under the current directory containing a file named &quot; bar &quot; .
Create an empty file &apos; last.check &apos; in directory pointed by variable &quot; log _ dir &quot; , with specified timestamp .
Create an empty file ( or update timestamp of file ) specified by variable &quot; correctFilePathAndName &quot;
Create an empty file called &quot; emptyfile.c &quot;
Create an empty file in each directory named &quot; mydir &quot; under current directory .
Create an empty file with a carriage return character in its name .
Create an empty file with a carriage return character in its name .
Create an empty index.html in each directory under the current one , updating timestamps of already existing index.html files .
Create an empty index.html , or update its timestamp if it already exists .
Create compressed archive from &quot; my _ large _ file _ 1 &quot; and &quot; my _ large _ file _ 2 &quot; and split into files of size 1024 MiB with prefix &quot; myfiles _ split.tgz _ &quot;
Create compressed archive of all the files in the current directory tree that have been modified in the last 7 days
Create directorie ( s ) &apos; some / path &apos; as required in the current directory
Create directories &quot; / tmp / x / y / z / &quot; on remote host before copying &quot; $ source &quot; to &quot; user @ remote : / tmp / x / y / z / &quot;
Create directory dir2
Create empty files ( or update timestamps if they exist ) with names matching each word in variable &quot; correctFilePathAndName &quot;
Create hard links of all files and directories matching &quot; test / icecream / cupcake / * &quot; or &quot; test / mtndew / livewire / * &quot; in &quot; test-keep &quot; preserving directory hierarchy
Create intermediate directories &quot; b and &quot; c &quot; as required and directory &quot; c &quot;
Create intermediate directories &quot; full &quot; , &quot; path &quot; as required and directory &quot; to &quot;
Create intermediate directories &quot; tmp &quot; as required and directories real _ dir1 and real _ dir2
Create intermediate directories &quot; x &quot; and &quot; p &quot; as required and create &quot; q &quot;
Create intermediate directories as required
Create intermediate directories as required and directory / my / other / path / here
Create intermediate directories as required and directory / tmp / test / blah / oops / something
Create intermediate directories as required and directory project / { lib / ext , bin , src , doc / { html , info , pdf } , demo / stat / a }
Create intermediate directories as required directory { 1 .. 3 } and subdirectory { 1 .. 3 } and directories subsubdirectory1 and subsubdirectory2
Create intermediate directories foo and bar as required and directory foo / bar / baz
Create intermediate directories ~ / foo / bar / as required and directories baz , bif , bang
Create intermediate directoriy path2 as required and directories a .. z
Create links for all files in the current directory tree that are more than 1000 days old in &quot; / home / user / archives &quot;
Create master SSH control socket &quot; my-ctrl-socket &quot; in the background with no terminal or command execution with connection forwarding from localhost port 50000 to localhost port 3306 via &quot; jm @ sampledomani.com &quot;
Create new crontab set for user &apos; test &apos; including $ job and only jobs from current crontab of &apos; test &apos; user that don &apos; t contain $ command
Create new crontab set including $ job and only jobs from current crontab that don &apos; t contain $ command
Create ssh tunnel through &quot; genja.org &quot; connecting localhost port 4444 to &quot; raptor.lan &quot; port 22
Create symbolic link &quot; $ 1 / link &quot; to the absolute path of &quot; $ 2 &quot;
Create symbolic links in current directory for all files located in &quot; dir &quot; directory and have filename extension &quot; jpg &quot;
Create symbolic links in the current directory for all files excluding &quot; CONFIGFILE &quot; located in &quot; / your / project &quot;
Create symbolic links in the current directory for all files excluding &quot; CONFIGFILE &quot; located under &quot; / your / project &quot; directory tree
Create symbolic links in the current directory for all files located in directory &quot; / path / with / files &quot; with a name containing &quot; txt &quot;
Create symbolic links in the current directory for all files under &quot; bar1 &quot; that are not directories and do not end in &quot; .cc &quot;
Create symlinks to all / home / folder1 / * .txt files and &apos; folder1 _ &apos; directory with the same name in a target directory named &apos; + &apos;
Create symlinks to all / home / folder1 / * .txt files and &apos; folder2 _ &apos; directory with the same name in a target directory named &apos; + &apos;
Create symlinks to all / home / folder1 / * .txt files with the same name in current directory
Create symlinks to all / home / folder2 / * .txt files with the same name in current directory
Create tar archive &quot; dirall.tar &quot; and copy all files from directory tree / tmp / a1 to it
Create tar archive &quot; foo.tar &quot; and copy all files from directory tree / tmp / a1 to it
Create tar.gz files older than one day logs
Create the directory &apos; .npm-global &apos; in the user &apos; s home directory ( ~ ) .
Create the directory &apos; .npm-packages &apos; in the user &apos; s home directory ( $ HOME )
Creates 5-letter random file name and saves it in &apos; rand _ str &apos; variable .
Creates alias for network interface &apos; eth0 &apos; with IP address &apos; 192.0.2.55 &apos; and network mask &apos; 255.255.255.255 &apos; .
Creates file by template &apos; aws-sync-XXXXX &apos; in a current folder and stores file name in a &apos; dir &apos; variable .
Creates full path with parents , that matches to folder path extracted from $ f variable .
Creates random file name formatted like expression in variable $ { str / / / X } and saves it in &apos; rand _ str &apos; variable .
Creates temporary directory in &apos; / tmp / &apos; folder and saves path to it in &apos; my _ tmp _ dir &apos; variable .
Creates temporary directory with name formatted like .daemonXXXXXXX in / tmp / folder , and saves path to it in &apos; TMPDIR &apos; variable .
Creates temporary file and saves path to it in &apos; content _ dir1 &apos; variable .
Creates temporary file and saves path to it in &apos; content _ dir2 &apos; variable .
Creates temporary file and saves path to it in &apos; fif2 &apos; variable .
Creates temporary file and saves path to it in a &apos; tmpfile &apos; variable .
Creates temporary file and saves path to it in a &apos; tmpfile &apos; variable .
Creates temporary file by template provided in option &apos; -t &apos; .
Creates temporary file in $ appdir variable with name formatted like expression in variable $ { template } , and saves path to it in &apos; launcherfile &apos; variable .
Creates temporary file in TMPDIR folder or / tmp / if TMPDIR is not defined , named by template $ { tempname } .XXXXXX , and saves path to new file in a TMPPS _ PREFIX variable .
Creates temporary file in a TMPDIR folder or / tmp folder if TMPDIR doesn &apos; t defined , with file name like current shell name and &apos; -XXXXX &apos; -formatted suffix , and saves created path to the &apos; tempFile &apos; variable .
Creates temporary file in a TMPDIR folder with name like tmp.XXXXXXXXXX .
Creates temporary file in a current folder and saves path to it in &apos; f &apos; variable .
Creates temporary file in a current folder with name formatted like &apos; templateXXXXXX &apos; , and saves path to it in &apos; tempfile &apos; variable .
Creates temporary file in default folder and saves path to it in &apos; source &apos; variable .
Creates temporary file name and saves path to it in &apos; TMP _ FILE &apos; variable .
Creates temporary file with appended suffix &apos; .cmd &apos; and saves path to it in &apos; LGT _ TEMP _ FILE &apos; variable .
Creates temporary file with file name formatted like / tmp / gnuplot _ cmd _ $ ( basename &quot; $ { 0 } &quot; ) .XXXXXX.gnuplot and saves path to it in a variable &apos; gnuplotscript &apos; .
Creates temporary file with name formatted like &apos; .script.XXXXXX &apos; in &apos; / tmp / &apos; folder and saves path to it in &apos; script1 &apos; variable .
Creates temporary file with name formatted like &apos; .script.XXXXXX &apos; in &apos; / tmp / &apos; folder and saves path to it in &apos; script2 &apos; variable .
Creates temporary file with name formatted like &apos; emacs-manager.XXXXXX &apos; in &apos; / tmp / &apos; folder and saves path to it in &apos; tmp _ file &apos; variable .
Creates temporary file with name formatted like expression in variable $ { PROG } , and saves path to it in &apos; mytemp &apos; variable .
Creates temporary file , replacing XXXXXXXXXXXXXXXXXXXXXXX with equal length suffix .
Creates temporary folder and save path to that in a TMPDIR variable .
Creates temporary folder and saves path to it in &apos; other &apos; variable .
Creates temporary folder and saves path to it in &apos; td &apos; variable .
Creates temporary folder and saves path to it in a &apos; tempd &apos; variable .
Creates temporary folder in / tmp / ( by default ) with 10-letter suffux .
Creates temporary folder in TMPDIR ( if defined ) or in &apos; / tmp / &apos; , and stores path to created folder in &apos; dir &apos; variable .
Creates temporary folder in TMPDIR ( if defined ) or in &apos; / tmp / &apos; , and stores path to created folder in &apos; tmpdir &apos; variable .
Creates temporary folder in a $ temp _ dir folder with name pattern defined by $ template , and stores path to created folder in &apos; my _ temp &apos; variable .
Creates temporary folder in a TMPDIR folder or / tmp folder if TMPDIR doesn &apos; t defined , with folder name like current shell name and 10-letter suffix , and saves created path in &apos; mydir &apos; variable .
Creates temporary folder like &apos; / tmp / tardir-XXXXXX &apos; with 6-letter suffix and saves its path in &apos; tmpdir &apos; variable .
Creates temporary folder relative to directory &apos; / path / to / dir &apos; .
Creates temporary folder within TMPDIR , with name like current shell name and 10-letter suffix .
Creates temporary folder within a $ mnt _ dir folder and saves path to it in a &apos; rsync _ src &apos; variable .
Creates temporary folder , and saves current folder path joined with created temporary folder path in &apos; tdir &apos; variable .
Cut off three last symbols from string &apos; 1234567890 * &apos;
Cuts off last part from the path $ dir , and deletes resulted folder if empty .
Cuts off last two parts from the path $ dir , and deletes resulted folder if empty .
Decompress &quot; / file / address / file.tar.gz &quot; to standard output
Decompress &quot; path / to / test / file.gz &quot; to standard output and save all lines matching &quot; my regex &quot; and not matching &quot; other regex &quot; to files with a 1000000 line limit
Decompress &quot; path / to / test / file.gz &quot; to standard output and save all lines matching &quot; my regex &quot; to files with a 1000000 line limit
Decompress &quot; path / to / test / file.gz &quot; to standard output and save all lines matching &quot; my regex &quot; to files with a 1000000 line limit
Decompress $ { set1 &#91; @ &#93; } files with gzip
Decompress &apos; file.gz &apos;
Decompress &apos; file.gz &apos; to standard output and execute the output in bash
Decompress and extract &apos; / usr / src / redhat / SOURCES / source-one.tar.gz &apos;
Decompress and extract &apos; archive.tar.gz &apos; into &apos; / destination &apos;
Decompress and extract &apos; libxml2-sources-2.7.7.tar.gz &apos;
Decompress and sort &quot; $ part0 &quot; and &quot; $ part1 &quot; of files in different processes
Decompress and unarchive &quot; hello-0.2.tar.gz &quot;
Decompresses each of &quot; * bz2 &quot; files under the current folder , redirecting output to the standard out , and prints only fourth of comma-separated fields .
Decompresses file &apos; xac.bz2 &apos; , redirecting output to standard out .
Decompresses file .
Delete all &quot; .DS _ Store &quot; files / directories under test directory
Delete all &apos; - &apos; character from $ 1 and save the resultant string to variable &apos; COLUMN &apos;
Delete all &apos; restore.php &apos; files in / var / www and 3 levels below
Delete all * .zip files under current directory that are older than 2 days
Delete all * .zip files under current directory that are older than 2 days
Delete all * txt files under current directory
Delete all .bam files in the current directory tree
Delete all .pyc files in the current directory tree
Delete all .pyc files in the current directory tree
Delete all .svn directories under current directory
Delete all .svn files / directories under current directory
Delete all .svn files / directories under current directory
Delete all .svn files / directories under current directory
Delete all .svn files / directories under current directory
Delete all .svn files / directories under current directory
Delete all .svn files / directories under current directory
Delete all .svn files / directories under current directory
Delete all .svn files / directories under current directory
Delete all .svn subdirectories under current directory
Delete all 1US * ( case insensitive ) files under current directory
Delete all HTML files under tree ~ / mydir
Delete all MP3 files under / tmp
Delete all _ _ temp _ _ * directories under maximum 1 level down the current directory tree
Delete all _ _ temp _ _ * files / directories under current directory tree
Delete all _ _ temp _ _ * files / directories under current directory tree
Delete all broken symbolic links under &apos; / usr / ports / packages &apos; directory tree
Delete all but the most recent 5 files
Delete all directories found in $ LOGDIR that are more than a work-week old
Delete all directories in the / myDir directory tree
Delete all directories in the TBD directory that were modified more than 1 day ago
Delete all directories under &apos; .cache / chromium / Default / Cache &apos; directory tree that are at least 1 level deep and are bigger than 100 MB in size
Delete all directories under &apos; .cache / chromium / Default / Cache / &apos; directory tree that are bigger than 100MB and are at least 1 level deep
Delete all empty directories and directories that contain only empty directories under current directory
Delete all empty directories in minimum 1 level down the directory &apos; directory &apos;
Delete all empty directories in minimum 2 levels down the root directory
Delete all empty directories in the &quot; test &quot; directory tree
Delete all empty directories in the current directory tree
Delete all empty directories under current directory
Delete all empty directories under root
Delete all empty directories under test directory
Delete all empty files and directories in the &quot; test &quot; directory tree
Delete all empty files in the current directory tree
Delete all empty files / directories under test directory
Delete all empty subdirectories in and below directory /
Delete all filename * files under / dir directory
Delete all filename * files under / dir directory
Delete all filename * files under / dir directory
Delete all files ( files , directories , links , pipes ... ) named &apos; core &apos; under current directory
Delete all files and directories
Delete all files beneath the current directory that begin with the letters &apos; Foo &apos; .
Delete all files in directory $ DIR that have not been accessed in at least 5 days
Delete all files in the &quot; $ { S } / bundled-libs &quot; folder except &quot; libbass.so &quot;
Delete all files in the $ DIR directory that have not been accessed in 5 or more days .
Delete all files in the / TBD directory that were modified more than 1 day ago
Delete all files in the / myDir directory tree that were last modfied 7 days ago
Delete all files in the / myDir directory tree that were last modfied 7 days ago
Delete all files in the / myDir directory tree that were last modfied more than 7 days ago
Delete all files in the / myDir directory tree that were last modified 7 days ago
Delete all files in the TBD directory that were modified more than 1 day ago
Delete all files in the current directory tree whose names end with ~
Delete all files in the current directory tree whose names end with ~
Delete all files in the current directory .
Delete all files in the current user &apos; s home directory and its sub-directories that have not been accessed for more than 100 days .
Delete all files named &quot; filename &quot; in the current directory tree , except the one with path . / path / to / filename
Delete all files named &quot; filename &quot; in the current directory tree , except those with paths ending in &quot; / myfolder / filename &quot;
Delete all files named &apos; -F &apos; under current directory tree
Delete all files named &apos; Waldo &apos; under ~ / Books directory tree where &apos; ~ &apos; expands to user &apos; s home directory
Delete all files named &apos; sample &apos; ( case insensitive ) under &apos; / home / user / Series &apos; directory tree with superuser privilege
Delete all files not owned by valid users
Delete all files that have not been accessed in the last 30 days
Delete all files that were modified more than 60 days ago under &apos; / path-to-directory &apos; tree
Delete all files throughout the entire filesystem that are no longer owned by a valid user .
Delete all files under $ DESTINATION directory tree that were modified more than 7 days ago
Delete all files under $ INTRANETDESTINATION / monthly directory tree that were modified more than 366 days ago
Delete all files under $ INTRANETDESTINATION / weekly directory tree that were modified more than 32 days ago
Delete all files under &apos; / home / backups &apos; directory tree with &apos; .tgz &apos; or &apos; .gz &apos; extension ( case insensitive ) that were modified more thant 60 days ago
Delete all files under / path / to / files that are not newer than dummyfile
Delete all files under / path / to / input / that match the case insensitive string literal &apos; spammer @ spammy.com &apos; in their contents
Delete all files under and below the current directory
Delete all files under current directory tree with &apos; . $ 1 &apos; extension where $ 1 expands as the first positional parameter
Delete all files under root whose status were changed more than 30 minutes ago
Delete all files under user &apos; s home directory tree that were accessed more than 365 days after their status was changed
Delete all files with &apos; .o &apos; extension in the entire filesystem
Delete all files with &apos; .old &apos; extension under current directory tree
Delete all files with &apos; .old &apos; extension under current directory tree
Delete all files with 128128 inode number under current directory tree
Delete all files with indoe number $ inum under current directory tree
Delete all files with inode number 804180
Delete all files / directories in minimum 2 levels down the root directory
Delete all files / directories named &apos; FILE-TO-FIND &apos; under current directory tree
Delete all files / directories named &apos; file &apos; under current directory tree
Delete all files / directories named &apos; sample &apos; ( case insensitive ) under &apos; / home / user / Series / &apos; directory tree as super user
Delete all files / directories named test under maximum 2 level down the current directory
Delete all files / directories older than 48 hours in / path / to / files * paths
Delete all files / directories taken by the glob pattern * except the ones with the name &apos; b &apos;
Delete all files / directories taken by the glob pattern * except the ones with the name &apos; b &apos;
Delete all files / directories under current directory
Delete all files / directories under current directory tree excluding &apos; .gitignore &apos; files / directories and files / directories matching the patterns &apos; .git &apos; or &apos; .git / * &apos; in their paths
Delete all files / directories under current directory tree with &apos; . $ 1 &apos; extension where $ 1 expands as the first positional parameter
Delete all files / directories with &apos; .old &apos; extension under current directory tree
Delete all files / directories with inode number 117672808 under current directory tree
Delete all files / directories with node number $ inum under current directory tree
Delete all hard links to the physical file with inode number 2655341
Delete all hidden files in the directory tree given as variable $ FOLDER
Delete all hidden files under $ some _ directory
Delete all hidden files under $ some _ directory
Delete all hidden files under $ some _ directory
Delete all hidden files / directories under $ some _ directory
Delete all hidden files / directories under $ some _ directory including $ some _ directory
Delete all in the current directory tree
Delete all non digits from index &quot; $ i &quot; in bash array &quot; depsAlastmodified &quot; and print the hex dump as characters
Delete all regular files named &apos; FILE-TO-FIND &apos; under current directory tree
Delete all regular files named &apos; FindCommandExamples.txt &apos; under current directory tree
Delete all regular files named &apos; IMAG1806.jpg &apos; under current directory tree
Delete all regular files named &apos; IMAGE1806.jpg &apos; under current directory tree
Delete all regular files that have not been modified in the last 31 days under &apos; / path / to / junk / files &apos; directory tree
Delete all regular files that have not been modified in the last 60 weeks under $ DIR directory tree
Delete all regular files that reside in directory $ OUTPUTDIR and below , and were last modified more than 7 days ago
Delete all regular files that start with &apos; sess _ &apos; in their names , are at least 1 level deep and were modified more than $ gc _ maxlifetime minutes ago under $ save _ path directory tree
Delete all regular files under $ DIR directory tree that have been modified before file $ a
Delete all regular files under current directory
Delete all regular files with &apos; .cache &apos; extension that were accessed more than 30 days ago under $ HOME / Library / Safari / Icons directory tree
Delete all regular files with &apos; .txt &apos; extension that were modified in more than 25 minutes ago in maximum 1 level down the directory &apos; / home / u20806 / public _ html &apos;
Delete all regular files with &apos; .txt &apos; extension that were modified in more than 25 minutes ago in maximum 1 level down the directory &apos; / home / u20806 / public _ html &apos;
Delete all regular files with inode number 314167125 under current directory tree
Delete all the .c files present in the current directory and below
Delete all the files found in the current directory tree whose names begin with &quot; heapdump &quot;
Delete all the files found in the current directory tree whose names begin with &quot; heapdump &quot;
Delete and count files in $ DIR _ TO _ CLEAN that are older than $ DAYS _ TO _ SAVE days
Delete characters in columns 36 through 40 from the output of &quot; finger &quot;
Delete current cron job list , and use those in yourFile.text
Delete empty directories
Delete empty files and print their names
Delete empty regular files
Delete everything in the current directory
Delete file with inode number 314167125
Delete files &quot; * doc copoy &quot; in directory tree / mnt / zip
Delete files containing whitespaces
Delete files containing whitespaces without recursion
Delete files in $ DIR _ TO _ CLEAN older than $ DAYS _ TO _ SAVE days
Delete files in / var / tmp / stuff and below that have not been modified in over 90 days
Delete files in / var / tmp / stuff and below that have not been modified in over 90 days
Delete files in / var / tmp / stuff and below that have not been modified in over 90 days
Delete files in / var / tmp / stuff and below that have not been modified in over 90 days
Delete files in / var / tmp / stuff and below that have not been modified in over 90 days
Delete files in / var / tmp / stuff and below that have not been modified in over 90 days
Delete files in the DIR directory tree whose names begin with &quot; 2015 &quot; and contain &quot; album &quot; or &quot; picture &quot;
Delete files older than 31 days
Delete files under $ LOCATION that match $ REQUIRED _ FILES in their names and were modified more than 1 day ago
Delete files under $ LOCATION that match $ REQUIRED _ FILES in their names and were modified more than 360 minutes ago
Delete files with inode number 782263 under current directory
Delete files with inode number specified by &#91; inode-number &#93; under current directory
Delete history entry at offset , defined in first argument of executed script
Delete in the background all files in / var / tmp / stuff1 and below that have not been modified in over 90 days
Delete interactively all the files / directories with inode number 782263 under current directory tree
Delete line 2 in numbered file &quot; file &quot; and renumber
Delete recursively empty files named &apos; bad &apos;
Delete the files under the current working directory with inode numbers specified on standard input
Delete the oldest file with &apos; .tgz &apos; or &apos; .gz &apos; extension under &apos; / home / backups &apos; directory tree
Deletes empty folder &apos; nonsense _ dir &apos; .
Deletes folder like / tmp / * / * or deeper , older than + 7 days if they don &apos; t contain files or other folders .
Delimit standard input with &quot; : &quot; and display as a table
Descend into every directory under / etc and print the file / directory names with relative paths
Determine if / full / path exists on a mounted file system .
Determine if user &quot; $ USER &quot; is logged in
Determine the user associated with stdin
Disables shell option &apos; compat31 &apos; .
Disables shell option &apos; dotglob &apos; .
Disables shell option &apos; nocasematch &apos; .
Disables shell option &apos; nullglob &apos; .
Discard the first letter from every line in $ line and calculate the md5 sum of the remaining
Display &quot; / tmp / file &quot; as a table of width 30 with columns filled before rows
Display &quot; infile &quot; as printable characters or backslash escapes
Display 12345 backwards
Display 798 backwards
Display a binary file as a sequence of hex codes
Display a character dump of &quot; oldfile &quot;
Display a count of regular files in each directory at the current level .
Display a dump of &quot; file &quot; as floating point values of double size
Display a dump of standard input as floating point values of double size
Display a list of files with sizes in decreasing order of size of all the regular files under $ dir directory tree that are bigger than $ size in size
Display a list of files with sizes in decreasing order of size of all the regular files under &apos; / your / dir &apos; directory tree that are bigger than 5 MB in size
Display a long list of all the files / directories named &quot; .todo &quot; under $ STORAGEFOLDER directory tree
Display a long listing of all 0777 permission directories under current directory tree
Display a long listing of all directories under &apos; / nas &apos; directory tree
Display a long listing of all files / directories named &apos; file &apos; under current directory tree
Display a long listing of all files / directories that are bigger than 10MB under &apos; / var / &apos; directory tree
Display a long listing of all regular files that are less than 50 bytes in size under &apos; / usr / bin &apos; directory tree
Display a long listing of all regular files with 0777 permission under current directory tree
Display a long listing of all the files / directories under current directory tree that are newer than the file &apos; Nov &apos; by modification time
Display a long listing of all the regular files in the file system which belong to user &apos; root &apos; and which have suid bit set
Display a long listing of all the regular files owned by the user &apos; bluher &apos; in the entire filesystem
Display a long listing of all the regular files under current directory tree that are newer than &quot; Apr 18 23 : 59 : 59 EDT 2013 &apos; and older than &quot; Apr 20 00 : 00 : 00 EDT 2013 &apos; by modification time
Display a long listing of the files / directories with human readable sizes ( 100M , 10G etc .. ) under &apos; / var &apos; directory tree which are bigger than 10MB
Display a long listing of the oldest file under &apos; / hom / backups &apos; directory tree
Display a named character dump of &quot; test.sh &quot;
Display a sorted count of all the characters in &quot; filename &quot;
Display all files in a folder
Display all files in a folder
Display all files in the current directory tree that match &quot; * foo &quot;
Display all files in the folder home which are owned by the group test .
Display all lines contiaining &apos; funcname &apos; in system map file matching current kernel .
Display all symlinks and their targets in the current directory
Display all symlinks and their targets in the current directory tree
Display all the files / directories under &apos; / home / bozo / projects &apos; directory tree that have been modified within the last day
Display an amount of processes running with a certain name
Display current system &apos; s kernel name , kernel release and version , and machine architecture
Display detailed usage help of the &apos; cp &apos; ( copy ) command .
Display difference between one.txt and two.txt side-by-side .
Display differences between / destination / dir / 1 and / destination / dir / 2 excluding XML files .
Display differences between / destination / dir / 1 and / destination / dir / 2 excluding files that match any pattern in file &quot; exclude.pats &quot; .
Display differences between / destination / dir / 1 and / destination / dir / 2 excluding files with names ending with extensions &apos; .foo &apos; , &apos; .bar &apos; and &apos; .baz &apos;
Display differences between / tmp / test1 and / tmp / test2 side-by-side .
Display differences between / tmp / test1 and / tmp / test2 .
Display differences between a and b side-by-side
Display differences between directories dir1 and dir2 , treating absent files as empty .
Display differences between directories dir1 and dir2 .
Display differences between directories dir1 and dir2 .
Display differences between directories repos1 and repos2 , ignoring changes due to tab expansion , white spaces and treating absent files as empty .
Display differences between file1 and file2 side-by-side .
Display differences between files &quot; a.txt &quot; and &quot; b.txt &quot; side-by-side and do not output common lines .
Display differences between files dir1.txt and dir2.txt .
Display differences between list of files in / bin and / usr / bin .
Display differences in &quot; / tmp / ksh-9725.log &quot; when compared to &quot; / tmp / ksh-9781.log &quot;
Display each line in file.txt backwards
Display file type description of &apos; file-name &apos; based on contents .
Display file type information for all instances of &quot; file &quot; in the current PATH .
Display hardware platform , ie. x86 _ 64 even if current kernel uses 32-bit addressing .
Display hostname .
Display human-readable file type description of ascii.txt
Display human-readable file type description of utf8.txt
Display infinite scroll of random ASCII art
Display infinite scroll of random ASCII art
Display kernel name , release , and version .
Display kernel release name .
Display list of files ending with &apos; .txt &apos; in the current folder to the terminal twice and output it to the text file &quot; txtlist.txt &quot;
Display long listing of all the files / directories owned by the user &apos; me &apos; under &apos; / tmp &apos; directory tree
Display machine architecture , ie. x86 _ 64
Display mime type of file specified by variable &quot; file &quot;
Display name and value of &apos; variable &apos; if it exists .
Display non-hidden files in the current directory with the given output format
Display only first and second dot-separated numbers of kernel version , ie . 4.4
Display only mimetype of myfile.txt , without the filename .
Display operating system type , ie . GNU / Linux
Display permissions , user , group , and full path for each file in the current directory tree
Display permissions , user , group , and full path for each file in the current directory tree as a list
Display standard input as a table with &quot; $ { tab } &quot; separators
Display standard input as octal bytes
Display standard input as printable characters or backslash escapes with no addressing radix
Display summary of each specified file in human readable form
Display system information : kernel name , hostname , kernel release and version , machine architecture , processor type , hardware platform , and operating system type .
Display the 5 largest files in the current directory and its sub-directories .
Display the 5 smallest files in the current directory and its sub-directories ignoring any empty files .
Display the 5 smallest files in the current directory and its sub-directories .
Display the biggest file sizes only
Display the content of file &quot; f &quot; in home directory if it exists and is executable
Display the contents of &quot; file &quot; formatted into a table , removing duplicate lines where the first 12 characters are duplicates , and display the number of occurrences at the beginning of each line .
Display the contents of &quot; myfile &quot; located in the current directory .
Display the contents of &quot; text &quot;
Display the count of regular files for which the owner has read and execute permission under &apos; home / magie / d2 &apos; directory tree
Display the count of regular files under &apos; home / magie / d2 &apos; directory tree which have execute permission to all the users
Display the current directory tree except files or directories starting with &quot; 3rd &quot;
Display the differences between &quot; file1.cf &quot; and &quot; file2.cf &quot; side-by-side with a width of 150 characters
Display the entire file system in a tree-like format
Display the file size of file &apos; / data / sflow _ log &apos; in bytes
Display the file type description of / bin / bash , ie. symbolic link , ELF executable , etc .
Display the files / directories under current directory tree matching the regex &apos; / $ prefix $ ypatt &apos; where $ prefix and $ ypatt expands in the current shell
Display the first 10 lines of the byte hex dump with no file offset data for &quot; / bin / ls &quot;
Display the first 32 bytes in &quot; foo &quot; as printable characters with 16 characters per line
Display the host &apos; s ECDSA fingerprint using the md5 hasing algorithm .
Display the host &apos; s ECDSA fingerprint using the sha256 hasing algorithm .
Display the last 3 characters of variable foo .
Display the last colon-separated field of variable &apos; var &apos;
Display the last dot-separated field , in this case &quot; com &quot; .
Display the last slash-separated part of each filename path in file.txt
Display the last slash-separated part of path , in this case &quot; example &quot; .
Display the last space-separated field of each line in file.txt
Display the mimetype of &quot; filename &quot;
Display the named characters in &quot; line1 \ r \ nline2 &quot;
Display the number of lines in all regular files under current directory tree and also show the total count
Display the number of regular files under current directory tree
Display the number of regular files under current directory tree
Display the output of &quot; ls &quot; for an 80 character wide display
Display the sizes and filepaths of all files / directories sorted in ascending order of size
Display the sizes and filepaths of all files / directories sorted in descending order of size
Display the sizes and filepaths of all files / directories with &apos; .undo &apos; extension under current directory tree
Display the total count of all the files / directories with &apos; .old &apos; extension under current directory tree
Display top 500 mp4 and flv files under current directory along with their timestamps in the sorted order of time
Display total apparent size of a file
Display what flags mount points are mounted with
Display who is logged on and what they are doing
Displays a tree of all process alongside their command line arguments .
Displays calendar for a previous , current and next month .
Displays calendar of a previous , current and next month for December of 2120 year .
Displays information about all network interfaces in system , including inactive ones .
Displays process tree of a process with id &apos; PID &apos; , showing parent process and processes id .
Displays status of currently active network interfaces .
Displays the count of of each unique line read from standard input
Do a dry run of renaming file extension &apos; .andnav &apos; to &apos; .tile &apos; for all files / directories under current directory tree
Download &quot; Louis Theroux &apos; s LA Stories &quot; using rsync over ssh
Dry run making directories in &quot; / TARGET _ FOLDER _ ROOT / &quot; for each &quot; .mov &quot; file in the current directory tree
Dump &quot; / dev / ttySomething &quot; in both hex and text
Dump &quot; FILENAME &quot; as 2 byte wide hexadecimal numbers
Dump &quot; file &quot; as ASCII characters
Dump &quot; filename &quot; as 2 byte wide hexadecimal and printable characters
Dump &quot; testscript.sh &quot; as 2 byte hexadecimale , printable characters , and octal values
Dump the character output of &quot; echo &apos; hi &apos; &quot;
Dump the character output of &apos; echo &apos; echo &quot; Ho ho ho &quot; &quot;
Duplicate directory tree under / mnt / usr / lib to / usr but creating symlinks to files instead of copying them .
ERROR - Probably means -pgoDt ( capital D )
ERROR - need to add -a or -r for recursive copy
ERROR - this is for DOS
ERROR - will overwrite the executable if it &apos; s not a symlink .
Edit current user &apos; s cron job list with editor specified by EDITOR environment variable , or default / usr / bin / editor if EDITOR is not set .
Edit the cron job list for user &apos; wwwrun &apos; using default editor specified by the EDITOR environment variable , or / usr / bin / editor if no default editor is specified .
Eliminates partially duplicate lines by column , keeping the last occurrence
Enables &apos; dotglob &apos; shell option .
Enables &apos; globstar &apos; ( recursive globbing ) shell option .
Enables &apos; nullglob &apos; shell option .
Enables shell option &apos; autocd &apos; .
Enables shell option &apos; cdable _ vars &apos; .
Enables shell option &apos; cmdhist &apos; .
Enables shell option &apos; compat31 &apos; .
Enables shell option &apos; direxpand &apos; .
Enables shell option &apos; expand _ aliases &apos; .
Enables shell option &apos; failglob &apos; .
Enables shell option &apos; histappend &apos; .
Enables shell option &apos; lastpipe &apos; .
Enables shell option &apos; lithist &apos; .
Enables shell option &apos; nocaseglob &apos; .
Enables shell option &apos; nocasematch &apos; .
Enables shell option &apos; nullglob &apos; .
Enables shell option &apos; progcomp &apos; .
Enables shell option &apos; promptvars &apos; .
Enables shell options &apos; expand _ aliases &apos; , &apos; extglob &apos; , &apos; xpg _ echo &apos; .
Enables shell options &apos; extglob &apos; and &apos; progcomp &apos;
Enables shell options &apos; nullglob &apos; and &apos; dotglob &apos; .
Ensure all 5 of UEDP0 { 1 .. 5 } _ 20120821.csv files exist , creating empty files for any missing ones ( updates the file &apos; s timestamps )
Erase user &apos; s cron jobs and add one cron job to run &quot; script &quot; every minute .
Evaluate the output of recursively changing the owner and group of &quot; / data / * &quot; to &quot; mongodb &quot;
Exclude directory from find . command
Exclude directory from find . command
Exclude directory from find . command
Exclude directory from find . command
Exclude directory from find . command
Exclude directory from find . command
Exclude directory from find . command
Exclude directory from find . command
Exclude directory from find . command
Execute &quot; $ { MD5 } &quot; on all files found under &quot; $ { 1 } &quot; , numerically sort the results , and save to variable &quot; DATA &quot;
Execute &quot; cat / tmp / iostat.running &quot; every 10 seconds
Execute &quot; date &quot; every second
Execute &quot; du -s path &quot; every 300 seconds
Execute &quot; ls -l data.temp &quot; every 2 seconds
Execute &quot; ls -l &quot; every 0.5 seconds
Execute &quot; ls -l &quot; every 2 seconds
Execute &quot; ls -l &quot; every 2 seconds
Execute &quot; ls -l &quot; every 2 seconds and highlight the differences in runs
Execute &quot; ls -l &quot; on host &quot; something &quot; as user &quot; root &quot;
Execute &quot; ls &quot; every 2 seconds
Execute &quot; ls &quot; every second
Execute &quot; ps -C java -o pcpu , state , cputime , etimes &quot; every second
Execute &quot; wget -qO- http : / / fake.link / file.txt &quot; every 5 seconds
Execute &apos; echo -e &quot; \ 033 &#91; 31mHello World \ 033 &#91; 0m &quot; &apos; every without color support 2 seconds
Execute &apos; echo -e &quot; \ tHello World &quot; &apos; every 2 seconds
Execute / usr / bin / find with $ * arguments
Execute / usr / bin / find with $ * arguments where current directory is the first argument
Execute &apos; echo &apos; for each file found
Execute &apos; find -type f &#124; egrep -i &quot; ( jpg &#124; bmp &#124; png &#124; gif ) $ &quot; &apos; every 300 seconds and display without title
Execute &apos; somecommand &apos; on each file from the current directory tree with the environment variable f set to the filename
Execute all arguments to a shell script and write the output to console and &quot; $ FILE &quot;
Execute all commands in &quot; commands-to-execute-remotely.sh &quot; on server &quot; blah _ server &quot;
Execute command &quot; $ cmd _ str &quot; on host &quot; $ SERVER &quot; as user &quot; $ USER &quot;
Execute md5sum command on files found by the find command
Execute python script &quot; test.py &quot; with &quot; LD _ PRELOAD = . / linebufferedstdout.so &quot; and write the output to console and append to &quot; test.out &quot;
Execute the &apos; echo &apos; command on each file from the current directory tree individually
Execute the file utility for each file found under / etc and below
Execute the file utility for each file found under / etc or below that contains &quot; test &quot; in its pathname
Execute the first instance of &quot; parallel &quot; found in the PATH , passing it all parameters received by the script / function
Execute zcat on every file matching &quot; * 20120805.gz &quot; in the current directory and subdirectories
Expand bash array &quot; myargs &quot; as arguments to &quot; mv &quot;
Extract all gzip-compressed files from tar archives beginning with &apos; myfiles _ split.tgz _ * &apos;
Extract and print hostname and protocol part from URL like &quot; http : / / www.suepearson.co.uk / product / 174 / 71 / 3816 / &quot; .
Extract any line in &quot; f1 &quot; or &quot; f2 &quot; which does not appear in the other
Extract any line in &quot; file1 &quot; or &quot; file2 &quot; which does not appear in the other
Extract any line in &quot; file1.txt &quot; which does not appear as the first &quot; ; &quot; delimited entry in &quot; file2.txt &quot;
Extract any line in &quot; fileA &quot; which does not appear as the first word of any line in &quot; fileB &quot;
Extract any line in &quot; set1 &quot; which does not appear in &quot; set2 &quot;
Extract any line in sorted file &quot; A &quot; that does not appear in &quot; B &quot; , &quot; C &quot; , or &quot; D &quot;
Extract files from archive &apos; archive.tar &apos;
Extract five digits sequence from a filename with x number of alphanumeric characters followed by the five digit sequence surrounded by a single underscore on either side then another set of x number of alphanumeric characters .
Extract host name part from URL .
Extract path and query part from URL
Extract protocol and host name from URL .
Extract protocol part from URL .
Extract the contents of &quot; Input.txt.gz &quot; , list the unique first comma separated field prefixed by the number of occurrences
Extract the second-to-last slash-separated path component , ie . &quot; 90 _ 2a5 &quot; in this case .
Extract , sort and print only group names from / etc / group .
Extracts a bz2 file .
Extracts single file &apos; filename &apos; from bzip2-compressed tarball archive.tbz .
FInd files in current directory and grep text and html files - but not index.html and report things that contain the word &apos; elevator &apos; in four or more lines
Fetch &apos; stackoverflow.com &apos; domain IP addresses from dig DNS lookup
Fiind and remove multiple files such as * .mp3 or * .txt
File &quot; files.txt &quot; contains a list of files , copy all files listed to host &quot; remote &quot; , connecting as ssh user &quot; user &quot; , and copying the files to this user &apos; s home directory - this will not work with files / directory names containing spaces .
File &apos; save _ pid.txt &apos; contains a process ID , instantly kill this process with SIGKILL signal .
Filnd all directory in root directory with 777 permission and change permision755 with chmod commad .
Filnd all files in root directory with 777 permission and change permision 644 with chmod commad .
Filter out current date in current time zone from the GMT + 30 and GMT + 20 representations of current date and show the last one
Filters only directories from long file listing of the current directory
Filters only directories from long file listing of the current directory
Filters only directories from long file listing of the current directory .
Filters out strings , using the extended regexp pattern &apos; ^ # &#124; ^ $ &#124; no crontab for &#124; cannot use this program &apos; from &quot; $ USERTAB &quot;
Filters unique lines by matching against the first column of a .csv file
Find &quot; * .dat &quot; files recursively in the current directory , print the lines starting on line 5 to the console and save to &quot; concat.txt &quot;
Find &quot; * 201512 * &quot; regular files in / home / myhome / data / ARCHIVE / and move them to / home / myhome / ARCHIVE / TempFolder /
Find &quot; * prefs copy &quot; files in the / mnt / zip directory tree and remove them
Find &quot; * prefs copy &quot; files in the / mnt / zip directory tree and remove them with prompting
Find &quot; .c &quot; and &quot; .h &quot; files in the current directory tree and print line numbers and lines containing &quot; # include &quot;
Find &quot; .c &quot; and &quot; .h &quot; files in the current directory tree and print lines containing &quot; # include &quot;
Find &quot; file.xml &quot; under the current directory and change directory to its parent
Find &quot; file.xml &quot; under the current directory and change directory to its parent
Find &amp; replace broken symbolic links
Find &apos; * prefs copy &apos; files under / mnt / zip and delete them with confirmation prompt ensuring white space safety
Find &apos; .git &apos; directories in directory tree / home / madhu / release / workspace
Find &apos; .git &apos; directories in directory tree / path / to / files and print the pathnames of their parents
Find &apos; .java &apos; files with checksum 0bee89b07a248e27c83fc3d5951213c1 in the current directory
Find * .avi and * .flv files in / path / to / your / directory and below and copy them to / path / to / specific / folder
Find * .c and * .h files under the current directory tree skipping hidden directories and files
Find * .c and * .sh files
Find * .c files under $ HOME and search for the string &apos; sprintf &apos; in those files
Find * .conf files / directories only upto 1 level down under / etc directory and show a few lines of output from the end
Find * .conf files / directories only upto 2 levels down under / etc directory and show a few lines of output from the end
Find * .css files in the current directory tree , skipping all directories that match pattern &apos; * / lang / en.css &apos;
Find * .html files in the / usr / src / linux directory tree
Find * .html files in the current directory tree that were last modified more than 7 days ago
Find * .html files in the current directory tree that were modified 7 days ago
Find * .html files in the current directory tree that were modified less than 7 days ago
Find * .java files under current directory and compress them to myfile.tar
Find * .java files under current directory and compress them to myfile.tar ( unsafe )
Find * .jpg screenshots that are bigger than 500k
Find * .o files with permissions 664 in the current directory tree
Find * .pl files / directories under / users / tom
Find * .scm files recursively in the current directory
Find * .tex files in the current directory tree that contain text &quot; documentclass &quot;
Find * .txt files in the current directory tree , ignoring paths . / Movies / * , . / Downloads / * , and . / Music / *
Find * 2011 * files and grep for the string &apos; From : Ralph &apos; in those files
Find * log files / directories within a maximum of 3 levels of directories
Find .cpp files that differs in subdirectories PATH1 and PATH2 .
Find .java files in the current directory tree that contain &apos; TODO &apos; , and print their names
Find .java files in the current directory tree that contain &apos; TODO &apos; , and print their pathnames
Find .jpg files owned by user daniel in the current directory and its sub-directories but ignore any file beginning with &quot; autumn &quot; .
Find .jpg files owned by user daniel in the current directory and its sub-directories .
Find .rmv files in the . / root directory recursively and copy them to directory / copy / to / here
Find .rmv files in the . / root directory recursively and copy them to directory / copy / to / here
Find .rmv files in the current directory recursively
Find .txt files on the system whose size is greater than 12000 bytes
Find 10 largest files in the current directory and its subdirectories
Find 10 most recently changed files in the current directory tree
Find &lt; fileName &gt; files / directories under current directory
Find CSS files omitting results containing &quot; CVS &quot;
Find PHP files containing 2 or more classes
Find PHP files with abstract classes
Find SGID files
Find SGID files
Find SQL files with text &apos; expression &apos;
Find SUID files
Find SUID files
Find StringBuffer in all * .java files
Find &apos; string &apos; in all * .java files ignoring the case of that string
Find a 400 permission file under / data directory
Find a directory named &apos; project.images &apos; case insensitively in the entire filesystem and show it in long listing format
Find a directory named &apos; project.images &apos; in the entire filesystem
Find a directory named &apos; project.images &apos; in the entire filesystem and show it in long listing format
Find a hostname that resolves to IP &apos; 173.194.33.71 &apos;
Find a more recent version of httpd.conf file than / etc / apache-perl / httpd.conf in entire file system
Find a single file called FindCommandExamples.txt under current directory and remove it
Find a single file called tecmint.txt and remove it
Find a size of only the target directory in MB format
Find a used disk space of a target directory and files inside of it
Find a.out and object files in the current directory tree
Find absolute path of command with PID &quot; $ pid &quot;
Find all &apos; custlist * &apos; files under current directory
Find all &quot; G * .html &quot; files modified more than 7 days ago in the current directory tree
Find all &quot; YourProgramName &quot; regular files in the current directory tree and print the full paths to the directories containing them
Find all $ 1 files / directories under current directory and enter into the parent directory of the first one found
Find all $ 2 files in $ 1 path and search for the regex expanded by $ 3 in those files
Find all $ 2 files in $ 1 path and search for the regex expanded by $ 3 in those files excluding the files with / proc in their paths
Find all $ 2 files in $ 1 path excluding / proc and search for the regex expanded by $ 3 in those files
Find all $ tofind * files / directories under $ parentdir
Find all &apos; * ~ &apos; files under current directory
Find all &apos; test &apos; directories in the current directory tree
Find all &apos; test &apos; directories in the current directory tree and remove them
Find all &apos; test &apos; directories in the current directory tree and remove them
Find all &apos; test &apos; directories in the current directory tree and remove them
Find all * * regular files under current directory
Find all * $ VERSION * files / directories under current directory where $ VERSION is a variable
Find all * - * files under current directory
Find all * . $ input _ file _ type files / directories under $ source _ dir
Find all * . $ input _ file _ type files / directories under $ source _ dir with the null character as the delimiter
Find all * . * directories under / home / feeds / data directory
Find all * . * files not within .git directory and run $ SED _ CMD -i &quot; s / $ 1 / $ 2 / g &quot; on each of them
Find all * . * files under current directory
Find all * . &#91; ch &#93; files under current directory
Find all * .axvw files / directories under current directory
Find all * .c files in / usr / src bigger than 100k
Find all * .c files located under / home and below
Find all * .c files on the system and feed the output to wc
Find all * .c files under / home
Find all * .c files under and below the current directory that contain &quot; hogehoge &quot;
Find all * .c files under and below the current directory that contain &quot; wait _ event _ interruptible &quot;
Find all * .c files under and below the current directory that contain &quot; wait _ event _ interruptible &quot;
Find all * .c files under and below the current directory that contain &quot; wait _ event _ interruptible &quot;
Find all * .c files under and below the current directory that contain &quot; wait _ event _ interruptible &quot;
Find all * .cgi ( case insensitive ) files / directories under current directory and change their permission to 755
Find all * .cgi files / directories under current directory and change their permission to 755
Find all * .cgi files / directories under current directory and change their permission to 775
Find all * .cls files / directories under current directory and print &apos; { if ( length ( $ 0 ) &gt; L ) { LINE = $ 0 ; L = length ( $ 0 ) } } END { print LINE &quot; L &quot; L } &apos; for each of them where $ 0 is expanded to the file / directory path
Find all * .cpp files in the current directory tree that contain &quot; sub &quot; in their names
Find all * .css files under / starting / directory and print filenames and the lines matching the regex &apos; \ .ExampleClass &apos; from those files
Find all * .csv files under / foo / bar and move them to some _ dir
Find all * .csv files under / foot / bar / and move them to some _ dir
Find all * .data files under jcho directory
Find all * .dbf files / directories in entire file system
Find all * .dbf files / directories in entire file system and print their sorted and unique parent directory paths
Find all * .epub , * .mobi , * .chm , * .rtf , * .lit and * .djvu files / directories under current directory
Find all * .err files under current directory that are larger than 5120 bytes in size
Find all * .ext files / directories under current directory and print their path and parent directory path
Find all * .foo files under current directory and print their contents
Find all * .foo files under current directory and print their contents
Find all * .foo files under current directory and print their contents
Find all * .foo files under current directory and print their contents
Find all * .foo files under current directory and search for &apos; bar &apos; in those files
Find all * .gz files in the current directory and decompress them using gunzip
Find all * .gz files / directories under asia and emea directory
Find all * .gz files / directories under asia and emea directory
Find all * .htm files under current directory
Find all * .html files under current directory
Find all * .ini files
Find all * .java files in the current directory tree
Find all * .java files under current directory
Find all * .java files under current directory and archive them to myfile.tar
Find all * .java files under current directory containing the string &apos; String &apos;
Find all * .java files under current directory containing the string &apos; String &apos;
Find all * .jpg ( case insensitive ) files under current directory
Find all * .jpg files and copy them to /
Find all * .jpg files in * / 201111 paths
Find all * .jpg files in * / 201111 / * paths and numerically sort them according to the second field in the file name with a delimiter &apos; _ &apos;
Find all * .jpg files under current directory
Find all * .jpg files under current directory and print only duplicate names
Find all * .jpg files under current directory and print only unique names
Find all * .jpg files under current directory and print only unique names
Find all * .jpg files / directories under current directory
Find all * .log files under current directory that contain the string &quot; Exception &quot;
Find all * .log files under path /
Find all * .log files under path / that do not contain &quot; string that should not occur &quot;
Find all * .m4a files under / home / family / Music directory
Find all * .m4a files / directories under / home / family / Music directory
Find all * .m4a files / directories under / home / family / Music directory
Find all * .mov ( case insensitive ) files under current directory and list their paths with their names
Find all * .mov files under current directory
Find all * .mp3 ( case insensitive ) files / directories under / tmp and remove them
Find all * .mp3 files in entire file system greater than 10MB and delete them
Find all * .mp3 files in file system with more than 10MB and delete them using rm command
Find all * .mp3 files under current directory
Find all * .mp3 , * .aif * , * .m4p , * .wav , * .flac files under $ musicdir directory
Find all * .mp4 files under / foo / bar and move them to / some / path
Find all * .mp4 files under / foo / bar and move them to / some / path
Find all * .mp4 files under / working
Find all * .mp4 files under directory named &apos; working &apos; and show the first one found
Find all * .ogg ( case insensitive ) files under your home directory that are less than 100MB in size
Find all * .ogg ( case insensitive ) files / directories in entire file system
Find all * .ogg ( case insensitive ) files / directories under your home directory
Find all * .ogg ( case insensitive ) files / directories under your home directory that are greater than 100MB in size
Find all * .ogg ( case insensitive ) files / directories under your home directory that are greater than 20MB in size
Find all * .ogg ( case insensitive ) files / directories under your home directory that are not greater than 20MB in size
Find all * .ogg and * .mp3 ( case insensitive ) files / directories under your home directory
Find all * .ogg files on the system ignoring the case
Find all * .ogg files under the home directory ignoring the case
Find all * .old files and move them to directory oldfiles
Find all * .p &#91; lm &#93; files under / users / tom directory that matches both the regex &apos; - &gt; get ( &apos; and &apos; # hyphenate &apos; in their contents
Find all * .p &#91; lm &#93; files under / users / tom directory that matches the regex &apos; - &gt; get ( \ &#124; # hyphenate &apos; in their contents
Find all * .p &#91; lm &#93; files / directories under current directory
Find all * .page ( case insensitive ) files / directories under current directory and run ~ / t.sh for each of them with the file path as argument , then sort the output
Find all * .pdf files under . / polkadots
Find all * .pdf.marker files under $ { INPUT _ LOCATION } and move them to $ { OUTPUT _ LOCATION } also move any * .pdf files with the same name under current directory to $ { OUTPUT _ LOCATION }
Find all * .php ( case insensitive ) and * .js files ( case insensitive ) under / home / jul / here excluding / home / jul / here / exclude / * paths
Find all * .php ( case insensitive ) files and * .js files / directories ( case insensitive ) under / home / jul / here excluding $ EXCLUDE / * paths
Find all * .php ( case insensitive ) files and * .js files / directories ( case insensitive ) under / home / jul / here excluding * .js files / directories under / home / jul / here / exclude / * paths
Find all * .php ( case insensitive ) files and * .js files / directories ( case insensitive ) under / home / jul / here excluding / home / jul / here / exclude / * paths
Find all * .php files under current directory and change their permission to 640
Find all * .php files under current directory and change their permission to 644
Find all * .plist files / directories under current directory
Find all * .plist files / directories under current directory
Find all * .plist files / directories under current directory
Find all * .ps files under $ STARTDIR
Find all * .py ( case insensitive ) files / directories under dir directory ignoring .git path
Find all * .py files under and below the current directory and search them for &quot; xrange &quot;
Find all * .py files under current directory
Find all * .py files under current directory and search for regular expressions taken from the search _ terms.txt file
Find all * .py files / directories under current directory
Find all * .py files / directories under current directory
Find all * .rb ( regular ) files under current directory
Find all * .rb ( regular ) files under current directory and change their mode to 600
Find all * .rb ( regular ) files under current directory and count their line numbers
Find all * .rb ( regular ) files under current directory and count their line numbers
Find all * .rb ( regular ) files under current directory and count their line numbers ensuring white space safety on file name / path .
Find all * .rb ( regular ) files under current directory and print them on stdout putting the file name / path in-between two string literals &apos; Hello , &apos; and &apos; ! &apos;
Find all * .rb ( regular ) files under current directory ensuring white space safety and print at most two file names / paths per line
Find all * .rb and * .py files / directories under current directory
Find all * .rb files / directories under current directory
Find all * .rb files / directories under current directory
Find all * .rb files / directories under current directory
Find all * .rb files / directories under current directory
Find all * .rpm files / directories under current directory
Find all * .sh files owned by user vivek
Find all * .sql file that are not newer than $ oldest _ to _ keep excluding the $ oldest _ to _ keep file
Find all * .srt files under directory named &apos; working &apos; and show the first one found
Find all * .swp files / directories under current directory
Find all * .tar.gz files / directories under / directory / whatever which were modified more than $ DAYS ago
Find all * .tex files / directories in maximum 2 levels down the current directory
Find all * .tex regular files in maximum 2 levels down the current directory
Find all * .tex regular files under current directory
Find all * .texi files in / usr / local / doc
Find all * .txt ( case insensitive ) files of user root under / directory and show a few lines of output from the beginning
Find all * .txt and * .json files
Find all * .txt and * .json files in current directory
Find all * .txt file ( case insensitive ) in the entire system and copy them to / tmp / txt
Find all * .txt files of user Tecmint under / home directory
Find all * .txt files that reside under and below / home / wsuNID /
Find all * .txt files under / and print their sizes and paths
Find all * .txt files under / foo and delete them
Find all * .txt files under / foo and print their total size
Find all * .txt files under current directory and print their timestamps and paths
Find all * .txt files under current directory that contains the regex &apos; pattern &apos; and list them with their filenames and matches
Find all * .txt files under current directory with their timestamps and paths , sort them and print the last entry only
Find all * .txt files under current directory , change their permission to 666 and copy them to / dst / directory
Find all * .txt files under the current directory whose names are not &quot; File.txt &quot;
Find all * .txt files under the current directory whose names are not &quot; File.txt &quot;
Find all * .txt files / directories in entire file system
Find all * .txt files / directories under current directory
Find all * .txt files / directories under current directory
Find all * .txt files / directories under current directory
Find all * .txt files / directories under current directory
Find all * .txt files / directories under current directory
Find all * .txt files / directories under current directory
Find all * .txt files / directories under current directory discarding &apos; Permission denied &apos; errors
Find all * .txt files / directories under current directory terminating their names / paths with null character
Find all * .txt files / directories under your home directory
Find all * .txt files / directories under your home directory
Find all * .txt , * .html files under / basedir that match the case insensitive pattern * company * in their names
Find all * .xml files under current directory
Find all * .xml.bz2 files under current directory
Find all * .xml.bz2 files under current directory
Find all * 1234.56789 * files / directories under current directory
Find all * Company * files / directories under / root / of / where / files / are directory
Find all * FooBar * files / directories under current directory and copy them to ~ / foo / bar
Find all * FooBar * files / directories under current directory and copy them to ~ / foo / bar
Find all * bar files / directories under current directory
Find all * blue * files / directories under / myfiles
Find all * company * ( case-insensitive ) files / directories under / basedir with null character as the delimiter
Find all * company * files / directories under / root / of / where / files / are directory
Find all * conf * files recursively under current directory
Find all * fink * files / directories in entire file system
Find all * fink * files / directories in entire file system
Find all * fink * files / directories under current directory
Find all * foo files / directories under current directory
Find all * foo files / directories under current directory ( error prone )
Find all * fstab * files under and below / etc
Find all * gz files under asia and emea directory
Find all * shp * directories under current directory and move &apos; * &apos; ( literal ) file / directory inside those directories to shp _ all
Find all * shp * directories under current directory and move all regular files inside those directories to .. / shp _ all /
Find all * shp * directories under current directory and move their contents to .. / shp _ all /
Find all * shp * files / directories under current directory
Find all * shp * files / directories under current directory and move them to .. / shp _ all /
Find all * stat files / directories under / usr
Find all * text files / directories under current directory
Find all * ~ files / directories under dir and print an rm command for each of them for deletion
Find all . * files excluding list _ files ( case insensitive ) under current directory
Find all .bak files starting from the current directory and delete them
Find all .c and .C files in the current directory tree that contain &quot; main ( &quot; and copy them to directory test1 /
Find all .c and .h files in the current directory tree and search them for &quot; expr &quot;
Find all .c , .h files in the current directory tree and search them for string &quot; expr &quot;
Find all .core files on the system starting from / and delete them
Find all .core files on the system starting from / and delete them
Find all .gif and .jpg files in the / var / www directory tree
Find all .gif files in the / var / www directory tree
Find all .gif files in the / var / www directory tree that are between 5 kB and 10 kB in size
Find all .gz archives in the / path / to / dir directory tree
Find all .gz archives in the current directory tree
Find all .gz archives in the current directory tree and check if they are valid
Find all .gz archives in the current directory tree and check if they are valid
Find all .gz archives in the current directory tree and check if they are valid
Find all .java files under current directory
Find all .java files starting from the current folder
Find all .java files starting from the current folder
Find all .java files under and below the current directory
Find all .java files whose name contains &quot; Message &quot;
Find all .jpg files in the current directory and below .
Find all .js files in the $ d directory tree whose pathnames do not contain whitespaces
Find all .js files in the current directory tree that do not contain a whitespace
Find all .less files in the current directory tree
Find all .mp3 files starting from the current directory
Find all .mp3 files starting from the current directory and delete them
Find all .mp3 files with more than 10MB and delete them
Find all .mp3 files with more then 10MB and delete them from root directory .
Find all .php files in all directory trees matching pattern &apos; / srv / www / * / htdocs / system / application / &apos; and search those files for string &quot; debug ( &quot;
Find all .php files in all directory trees matching pattern &apos; / srv / www / * / htdocs / system / application / &apos; and search those files for string &quot; debug ( &quot;
Find all .php files in all directory trees matching pattern &apos; / srv / www / * / htdocs / system / application / &apos; and search those files for string &quot; debug ( &quot;
Find all .php files in the current directory tree
Find all .php files starting from the root directory /
Find all .php files starting from the root directory and ignoring / media
Find all .py files in the current directory except &quot; setup.py &quot; and those beginning with &quot; test _ &quot;
Find all .rb files owned by root in the / apps / folder and below that have been accessed in the last two minutes .
Find all .rpm files and change their permissions to 755
Find all .sh files in or below the current directory and move them to folder ~ / back.scripts
Find all .sh files in or below the current directory and move them to folder ~ / back.scripts
Find all .sh files in the current directory tree and remove them
Find all .sh files in the current directory tree and remove them
Find all .sh files in the current directory tree and remove them
Find all .sql files in the current directory recursively and print their path names separated by zeroes
Find all .svn directories under current directory and delete them
Find all .tmp files under and below the / tmp / directory and remove them
Find all .txt files except README.txt
Find all .txt files in current directory and rename with .html .
Find all .txt files in the / home / user directory tree and copy them to / home / backup
Find all .txt files in the / home / user1 directory tree and copy them to / home / backup
Find all .txt files in the dir / directory tree and copy them along with times , permissions , and ownership to dir _ txt /
Find all .txt files in the user &apos; s home directory and below .
Find all .txt files of user Tecmint under / home directory
Find all .txt files under the current directory and below
Find all .txt files under the current directory and below
Find all .txt files under the current directory and below
Find all .zip files in the current directory tree
Find all .zip files starting from the current directory which are owned by user tommye
Find all / path / to / check / * regular files without descending into any directory
Find all 0644 permission files / directories under current directory tree and show only the first 10 of them
Find all 1.txt , 2.txt and 3.txt files under current directory and change the permission to 444
Find all 100MB files in file system and delete them using rm command
Find all 100MB + files and delete them
Find all 15MB files
Find all 15MB files in entire file system
Find all 1US * files / directories under current directory
Find all 2 * .data files / directories under jcho directory
Find all 400 permission files under / data directory
Find all 400 permission files under / data directory
Find all 400 permission files under / data directory and change their permission to 755
Find all 400 permission files under / data directory and print &apos; Modifying &apos; appended with file path for each of them
Find all 400 permission files under / data directory with null character as the delimiter
Find all 400 permission files under / data directory , print &apos; Modifying &apos; appended with file path for each of them and change their permission to 755
Find all 50MB files
Find all 50MB files in file system
Find all 664 permission files / drectories under current directory tree
Find all 755 permission regular files under current directory tree
Find all 777 permission directories and use chmod command to set permissions to 755
Find all 777 permission directories and use chmod command to set permissions to 755
Find all 777 permission directories under current directory and set permissions to 755
Find all 777 permission files and use chmod command to set permissions to 644
Find all 777 permission files in entire file system and set permissions to 644
Find all 777 permission files / directories under current directory tree
Find all 777 permission regular files and use chmod command to set permissions to 644
Find all C source code files from the current directory tree that contain &quot; keyword &quot; in their pathnames , ignoring the case
Find all CSS files
Find all CSS files that do something with HTML ID # content
Find all ES * and FS _ * files under current directory
Find all Executable files
Find all Executable files in the file system
Find all HTML files starting with letter &apos; a &apos; in the current directory and below
Find all HTML files starting with letter &apos; a &apos; in the current directory and below ignoring the case
Find all IP addresses in / etc directory files
Find all JPG files under the &quot; $ SOURCE &quot; directory and below
Find all MP3 files in the home directory tree that were modified in the last 24 hours
Find all MP3s in the / home directory tree
Find all Makefile &apos; s in the current directory tree
Find all Makefile &apos; s in the current directory tree and look for line 235 in each of them
Find all Name * files under .. / .. / $ name-module and rename them by replacing &apos; Name &apos; with $ Name ( will be expanded in the current shell ) in their names
Find all OGG files in the home directory larger than 20 megabytes
Find all OGG files in the home directory that are at most 20 megabytes in size
Find all PHP files in the current directory recursively
Find all PHP files in the current directory recursively and search them for string &quot; $ test &quot; with 8 simultaneous processes
Find all PHP files under current directory
Find all PHP files under current directory that contain only one line
Find all PNG and JPG files and append them to archive &apos; images.tar &apos;
Find all Perl source code files
Find all README &apos; s in / usr / share
Find all Read Only files
Find all Read Only files in entire file system and show a few lines of output from the beginning
Find all Read Only files in the file system
Find all SGID files
Find all SGID files in entire file system
Find all SGID files in entire file system
Find all SGID set files
Find all SGID set files in the file system
Find all SGID set files under current directory and show a few lines of output from the beginning
Find all SUID files .
Find all SUID files in entire file system
Find all SUID files in entire file system
Find all SUID set files
Find all SUID set files in the file system
Find all SUID set files under current directory and show a few lines of output from the beginning
Find all Subscription.java files / directories under current directory and enter into the parent directory of the first one found
Find all Subscription.java files / directories under current directory and enter into the parent directory of the first one found
Find all Subscription.java files / directories under current directory and enter into the parent directory of the first one found
Find all TXT files in the current directory and copy them to directory &quot; $ HOME / newdir &quot;
Find all TXT files in the current directory and copy them to directory &quot; $ HOME / newdir &quot;
Find all TXT files in the current directory and copy them to directory &quot; $ HOME / newdir &quot;
Find all TXT files on the system and copy them to / tmp / txt
Find all TXT files that belong to user root
Find all &apos; doc.txt &apos; files in the current directory tree printing &quot; found &quot; for each of them
Find all aliencoders . &#91; 0-9 &#93; + files under / home / jassi / directory
Find all aliencoders . &#91; 0-9 &#93; + files / directories under / home / jassi / directory
Find all broken symlinks in maximum 1 level down the $ path directory
Find all broken symlinks under / path / to / search directory
Find all broken symlinks under / path / to / search directory
Find all broken symlinks under current directory
Find all broken symlinks under current directory
Find all broken symlinks under current directory
Find all broken symlinks under current directory
Find all broken symlinks under current directory
Find all broken symlinks under current directory
Find all btree * .c files under current directory
Find all build * directories under / var / www / html / and print all but first 5 appending with the string &apos; rf &apos;
Find all build * directories under / var / www / html / and reverse sort them
Find all build * directories under current directory and reverse sort them
Find all catalina * files / directories under / path / to / search / in
Find all catalina * files / directories under current directory
Find all dir * files / directories under parent
Find all directories and for each of them , print an mv command to move it to / new / location
Find all directories at level 3 of directory tree $ from _ dir
Find all directories by the name &apos; httpdocs &apos; on the system
Find all directories by the name &apos; httpdocs &apos; on the system
Find all directories containing &apos; linux &apos; in their names under &apos; / root &apos; directory tree
Find all directories in / path / to / dir / without going into sub-directories
Find all directories in / path / to / dir / without going into sub-directories and append a null character at the end of each paths
Find all directories in / var / www / html / zip / data / * / * / * / * / * that are older than 90 days and print only unique paths
Find all directories in 1 level down the / home directory that have two consecutive vowels in their names and count them
Find all directories in 1 level down the current directory
Find all directories in current directory without going into sub-directories
Find all directories in directory tree &apos; httpdocs &apos;
Find all directories in entire file system which are larger than 50KB
Find all directories in level 1 down the $ queue directory
Find all directories in maximum 1 level down the current directory that were modified less than 1 day ago
Find all directories in maximum 2 levels down the / tmp directory
Find all directories in maximum 2 levels down the / tmp / test directory
Find all directories in the / data1 / realtime directory tree that were last modified more than 5 minutes ago but less than 60 minutes ago
Find all directories in the / data1 / realtime directory tree that were modified within the last 60 minutes
Find all directories in the / path / to / base / dir tree
Find all directories in the current directory tree
Find all directories in the current directory tree excluding hidden directories and create them in &quot; .. / demo _ bkp &quot;
Find all directories in the current directory tree that are not accessible by all
Find all directories in the current directory tree that do not have &apos; execute &apos; permissions for anyone
Find all directories in the current directory tree that were last modified more than 5 minutes ago but less than 60 minutes ago
Find all directories in the current directory tree with &quot; music _ files &quot; in their names
Find all directories in the current one recursively which have the write bit set for &quot; other &quot;
Find all directories in the current one with &quot; linkin park &quot; in their names and copy them to / Users / tommye / Desktop / LP
Find all directories matching the regex &apos; .texturedata &apos; in their names under &apos; / path / to / look / in / &apos; directory tree
Find all directories name nasa in the current directory and below .
Find all directories named &quot; 0 &quot; in the current directory tree and create a single tar archive of their RS * subdirectories
Find all directories named &quot; 0 &quot; in the current directory tree and create a tar archive of their RS * subdirectories
Find all directories named &quot; D &quot; in the &quot; A &quot; directory tree
Find all directories named &quot; D &quot; in the current directory tree
Find all directories named &quot; D &quot; in the current directory tree
Find all directories named &quot; nasa &quot;
Find all directories named $ 1 under $ HOME directory tree and remove them
Find all directories named &apos; .texturedata &apos; under &apos; / path / to / look / in / &apos; directory tree
Find all directories named &apos; files &apos; under current directory and set read-write-execute permission for owner and group and no permission for other for those directories
Find all directories named &apos; local &apos; in entire file system
Find all directories named &apos; mydir &apos; under &apos; local &apos; and &apos; / tmp &apos; directory tree
Find all directories named &apos; octave &apos; under current directory tree
Find all directories named CVS , and deletes them and their contents .
Find all directories named build under the current directory
Find all directories named essbase under / fss / fin
Find all directories named postgis-2.0.0 under / directory
Find all directories on the system whose size is greater than 50k
Find all directories recursively starting from / and count them
Find all directories recursively starting from / and skipping the contents of / proc / , and count them
Find all directories starting from / that have permissions 777
Find all directories starting from YOUR _ STARTING _ DIRECTORY that contain the string &quot; 99966 &quot; in their names
Find all directories starting from the current directory
Find all directories that have been accessed $ FTIME days ago under current directory tree
Find all directories that have been modified in the last seven days .
Find all directories that start with stat
Find all directories under $ 1 / .hg and set their SGID bit
Find all directories under $ 1 / .hg and set their SGID bit
Find all directories under $ FOLDER , take the first fields ( dot ( . ) as the delimiter ) from their timestamps and reverse sort them numerically
Find all directories under $ ROOT _ DIR and show the sub-directories of the directories before the directories themselves
Find all directories under $ d directory and set read-write-execute permission for owner and group and no permission for other for those directories
Find all directories under $ path
Find all directories under $ root and replace all newlines with : ( colon ) in the output
Find all directories under $ x directory and set read-write-execute permission for owner and group and no permission for other for those directories
Find all directories under $ { 1 : - . } directory without descending into any sub-directories
Find all directories under &apos; .cache / chromium / Default / Cache &apos; that are bigger than 100 MB in size excluding single letter directory names
Find all directories under &apos; / nas &apos; directory tree
Find all directories under &apos; / var / www &apos; directory tree excluding &apos; / var / www / web-release-data &apos; and &apos; / var / www / web-development-data &apos; directories and their sub-directories
Find all directories under &apos; A &apos; directory tree excluding paths containing the directory &apos; a &apos;
Find all directories under &apos; project &apos; directory without going into subdirectories that do not match the POSIX egrep regex $ PATTERN in their paths and are not empty
Find all directories under &apos; test &apos; directory tree that match the regex &apos; . * / course &#91; 0-9 . &#93; * &apos; in their paths
Find all directories under &apos; test &apos; directory tree that match the regex &apos; &#91; course * &#93; &apos; in their paths
Find all directories under &apos; test &apos; directory tree whose paths match the regex &apos; . * / course &#91; 0-9 &#93; \ . &#91; 0-9 &#93; \ . &#91; 0-9 &#93; \ . &#91; 0-9 &#93; $ &apos;
Find all directories under / directory-path and change their permission to 2755
Find all directories under / fss / fin
Find all directories under / home / me
Find all directories under / home / me / &quot; $ d &quot;
Find all directories under / home / me / target _ dir _ 1
Find all directories under / home / mywebsite / public _ html / sites / all / modules and set their permission to 750
Find all directories under / home / username / public _ html / modules and set their permission to 750
Find all directories under / home / username / public _ html / sites / all / modules and set their permission to 750
Find all directories under / home / username / public _ html / sites / all / themes and set their permission to 750
Find all directories under / home / username / public _ html / sites / default / files and set their permission to 770
Find all directories under / home / username / public _ html / themes and set their permission to 750
Find all directories under / home / username / tmp and set their permission to 770
Find all directories under / myfiles directory
Find all directories under / path / to / Dir and set their permission to 755
Find all directories under / path / to / base / cache , / path / to / base / tmp , / path / to / base / logs and change their permission to 755
Find all directories under / path / to / base / dir and change their permission to 755
Find all directories under / path / to / base / dir and change their permission to 755
Find all directories under / path / to / base / dir and change their permission to 755
Find all directories under / path / to / dir ( no sub-directories ) and archive them ( with relative paths ) into files with .tar.gz extension
Find all directories under / path / to / dir and change their permission to 755
Find all directories under / var / www directory and set their permission to 755
Find all directories under / var / www / some / subset and set their SGID bit
Find all directories under and below / home / admin / public _ html / , and change their permissions to 755
Find all directories under and below / root that match pattern &quot; * linux * &quot; , case insensitive
Find all directories under and below directory &quot; folder _ name &quot; , and change their permissions to 775
Find all directories under and below parent _ directory
Find all directories under current directory
Find all directories under current directory
Find all directories under current directory
Find all directories under current directory and change their permission to 500
Find all directories under current directory and change their permission to 644
Find all directories under current directory and change their permission to 700
Find all directories under current directory and change their permission to 755
Find all directories under current directory and make them read , write , and executable for owner &amp; group and remove read-write-execute permission for other
Find all directories under current directory and set read &amp; execute permission for group and other for these files
Find all directories under current directory and set read-write-execute permission for owner and group and no permission for other for those directories
Find all directories under current directory and set read-write-execute permission for owner , read-execute permission for group and execute permission for other for those directories
Find all directories under current directory and set read-write-execute permission for owner , read-execute permission for group and no permission for other for those directories
Find all directories under current directory and set read-write-execute permission for owner , read-execute permission for group and other for those directories
Find all directories under current directory and set their permission to 755
Find all directories under current directory and set their permission to 775
Find all directories under current directory and set their permission to 775
Find all directories under current directory excluding directories ( along with their contents ) that start with a . ( dot ) in their names
Find all directories under current directory excluding directories ( along with their contents ) that start with a . ( dot ) in their names
Find all directories under current directory excluding those which match the regex / \ . in their names
Find all directories under current directory having DIRNAME in their name
Find all directories under current directory tree that match the case insensitive regex &apos; ^ \ . / course \ ( &#91; 0-9 &#93; \ . \ ) * &#91; 0-9 &#93; $ &apos; in their paths
Find all directories under current directory tree that were modified $ FTIME days ago
Find all directories under current directory whose names are 33 characters long
Find all directories under current directory whose paths are 5 characters long
Find all directories under current directory with 755 permission and change their permission to 644
Find all directories under dir whose names are 33 characters long
Find all directories under foldername directory and set their permission to 755
Find all directories under htdocs directory and set their permission to 775
Find all directories under maximum 1 level down the / parent directory and set their permission to 700 recursively
Find all directories under maximum 1 level down the current directory and set their permission to 700
Find all directories under maximum 1 level down the current directory and set their permission to 700 recursively
Find all directories under media / directory and change their permission to 700
Find all directories under minimum 1 level down the $ GIVEN _ DIR directory
Find all directories under minimum 1 level down the $ GIVEN _ DIR directory with null character as the delimiter
Find all directories under minimum 1 level down the current directory and set their permission to 755
Find all directories under minimum 1 level down the current directory excluding directories ( along with their contents ) that start with a . ( dot ) in their names
Find all directories under minimum 2 levels down the mydir directory
Find all directories under mydir
Find all directories under path _ to _ dir directory
Find all directories under present working directory
Find all directories under the current directory that is on the same filesystem , execute &quot; / tmp / count _ em _ $ $ &quot; with the directory as an argument , sort the result numerically from least value to greatest value
Find all directories under var / directory and change their permission to 700
Find all directories under ~ / code without descending into hidden directories and print them appended with : ( colon )
Find all directories whose name is Tecmint in / directory
Find all directories whose name is root in / directory
Find all directories whose status were changed $ FTIME days ago
Find all directories with 755 permission and change the permission to 700
Find all directories with permissions 777 under and below / var / www / html , and change their permissions to 755
Find all directories with space in their names under current directory and rename them by replacing all spaces with _
Find all duplicate &quot; .jar &quot; files in the current directory tree
Find all empty directories in minimum 2 levels down the root directory
Find all empty directories in the current one and delete them
Find all empty directories in the current one and delete them
Find all empty directories recursively starting from the current one and delete them
Find all empty directories recursively starting from the current one and delete them
Find all empty directories under $ somedir and copy / my / configfile into those directories
Find all empty directories under / tmp
Find all empty directories under / tmp and below
Find all empty directories under a certain path
Find all empty directories under current directory
Find all empty files ( zero byte files ) in your home directory and its sub-directories .
Find all empty files in / tmp
Find all empty files in home directory
Find all empty files in the current directory and delete them
Find all empty files in the current directory and delete them
Find all empty files in the current directory and delete them
Find all empty files starting from the current directory and delete them
Find all empty files starting from the current directory and delete them
Find all empty files under / tmp
Find all empty files under / tmp and below
Find all empty files under a certain path
Find all empty folders in the current directory and below
Find all empty regular files in the current directory and below
Find all empty regular files in the current directory tree
Find all executable files
Find all executable files under current directory and reverse sort them
Find all executable files under current directory and show a few lines of output from the beginning
Find all executable files under the current directory and below
Find all executable files under { } and reverse sort them
Find all executable symlinks or upvoter- * files under maximum 1 level down the { } directory
Find all executable symlinks or upvoter- * files under maximum 1 level down the { } directory
Find all executable upvoter- * files ( following symlinks ) under maximum 1 level down the current directory
Find all executable upvoter- * files / symlinks under maximum 1 level down the { } directory
Find all executables in the current directory tree
Find all executables under / path directory
Find all fglrx-libGL * files under and below debian / fglrx /
Find all fglrx-libglx * files under and below debian / fglrx /
Find all file in current directory with have .c extenstion &amp; have 777 permission . delete then
Find all file paths under current directory , perform a reverse numerical sort and show first 10 file paths with their status change time
Find all file paths under current directory , perform a reverse sort and show first 10 file paths with their status change time
Find all file paths under current directory , sort them numerically and show last 10 lines of output with only their paths
Find all file which have more the 2 hard link
Find all file.ext files / directories under / home / kibab directory and print . for each of them
Find all file.ext files / directories under current directory with &quot; FooBar &quot; in their paths and copy them into the current directory
Find all file.ext files / directories under present working directory and print . for each of them
Find all file1 and file9 files / directories under current directory
Find all filename . * files / directories under / root / directory / to / search
Find all filenames ending with .c in the / usr directory tree
Find all filenames ending with .c in the current directory tree
Find all filenames ending with .c in the current directory tree , case insensitive
Find all files accessed on the 29th of September , 2008 , starting from the current directory
Find all files and directories and count them
Find all files and directories containing &quot; disc &quot; in their names
Find all files and directories in the current directory recursively that contain spaces in their names
Find all files and directories in the current directory tree except those whose name is &quot; dirname &quot; , case insensitive
Find all files and directories in the current directory tree with &quot; linkin park &quot; in their names and copy them to / Users / tommye / Desktop / LP
Find all files and directories last modified less than a day ago and copy to &quot; .. / changeset &quot; creating directories as needed
Find all files and directories on the system whose name is &apos; filedir &apos;
Find all files and directories starting from the current directory
Find all files and directories that do not match the pattern given as the $ controlchars variable
Find all files and directories that have been modified in the last seven days .
Find all files and directories under current directory
Find all files and directories under current directory without crossing over to other partitions
Find all files and directories whose names end in &quot; .rpm &quot; and change their permissions to 755
Find all files and directories whose names end in &quot; .rpm &quot; , ignoring removable media , such as cdrom , floppy , etc .
Find all files and directories with permissions 664
Find all files beneath the current directory that end with the extension .java and contain the characters String ignoring case . Print the name of the file where a match is found .
Find all files beneath the current directory that end with the extension .java and contain the characters StringBuffer . Print the name of the file where a match is found .
Find all files called &quot; file1.txt &quot; that reside under and below / home / wsuNID /
Find all files called wp-config.php in the / var / www directory and below
Find all files changed on the 29th of September , 2008 , starting from the current directory
Find all files except files with &apos; .gz &apos; extension in the current directory non-recursively and compress them with gzip
Find all files excluding * .gz files in the current directory tree and compress them with gzip
Find all files excluding files ending with &apos; gz &apos; , &apos; tmp &apos; and &apos; xftp &apos; in their names in the current directory tree and compress them with gzip not preserving timestamp and original name
Find all files files under the current directory except * .txt
Find all files in &quot; / home / &quot; which contain &quot; string1 &quot; , &quot; string2 &quot; or the host name in its filename
Find all files in $ dir directory ( non-recursive ) and count them
Find all files in $ dir directory without going into sub-directories
Find all files in / dir1 and print only the filenames ( not paths )
Find all files in / dir1 and print only the filenames ( not paths )
Find all files in / home / kos and below whose names end in &quot; .tmp &quot;
Find all files in / home / user / that were created or changed 10 minutes ago
Find all files in / tmp whose names begin with the current user &apos; s name followed by &quot; &quot; .
Find all files in / var / www / html / zip / data / * / * / * / * / * that are older than 90 days
Find all files in / var / www / html / zip / data / * / * / * / * / * that are older than 90 days and print only unique parent directory paths
Find all files in and below all subdirectories of the current directory
Find all files in and below the home directory that have been modified in the last 90 minutes
Find all files in current directory and search for &apos; searchName &apos; in those files
Find all files in current directory and search for &apos; searchName &apos; in those files and show errors for files that are not directly on the current directory
Find all files in current directory excluding hidden files and put the output into full _ backup _ dir variable
Find all files in current directory excluding hidden files , archive them and put the output into variable full _ backup _ dir
Find all files in current directory that were modified less than 1 day ago excluding hidden files and archive them and put the output into the variable file _ changed
Find all files in current directory that were modified less than 1 day ago excluding hidden files and put the output to full _ backup _ dir variable
Find all files in directory tree &quot; dirname &quot;
Find all files in entire file system which are larger than 20000KB
Find all files in maximum 1 level down the current directory that were modified less than 1 day ago
Find all files in maximum 1 level down the current directory that were modified less than 1 day ago from today
Find all files in maximum 2 levels down the current directory
Find all files in the / etc folder that have been modified within the last 30 days and copy them to / a / path / .
Find all files in the / home / directory tree that are owned by bob
Find all files in the / home / directory tree that were last accessed more than 7 days ago
Find all files in the / home / directory tree that were last modified less than 7 days ago
Find all files in the / home / myuser directory recursively that are older than 7 days
Find all files in the / myfiles directory tree following symbolic links
Find all files in the / usr directory tree that are owned by group &apos; staff &apos;
Find all files in the / var / tmp directory tree with uid = 1000
Find all files in the &apos; sourceDir &apos; directory
Find all files in the &apos; sourceDir &apos; directory tree
Find all files in the &apos; work &apos; directory tree , pass them to grep and search for &quot; profit &quot;
Find all files in the current directory and below with extension .php and replace &quot; php &quot; with &quot; html &quot; in their names
Find all files in the current directory and its sub-directories that have been modified sometime in the last 24 hours .
Find all files in the current directory and its sub-directories that have not been assessed in more than 30 days .
Find all files in the current directory recursively that were last modified more than 5 days ago
Find all files in the current directory recursively with &quot; linkin park &quot; in their names and copy them to / Users / tommye / Desktop / LP
Find all files in the current directory recursively with &quot; linkin park &quot; in their names and copy them to / Users / tommye / Desktop / LP , preserving path hierarchy
Find all files in the current directory tree and count them
Find all files in the current directory tree containing &quot; foo &quot; in their names
Find all files in the current directory tree except .html , ignoring .svn directories
Find all files in the current directory tree ignoring the &quot; .git &quot; directory
Find all files in the current directory tree named &apos; FILES.EXT &apos;
Find all files in the current directory tree that are newer than some _ file
Find all files in the current directory tree that are not newer than some _ file
Find all files in the current directory tree that match pattern &apos; a ( b * &apos;
Find all files in the current directory tree that were last changed $ minutes minutes ago
Find all files in the current directory tree which do not belong to any user
Find all files in the current directory tree whose names are &quot; .DS _ STORE &quot;
Find all files in the current directory tree whose names are &quot; .DS _ STORE &quot; and delete them
Find all files in the current directory tree whose names are &quot; file _ name &quot; , except for those with pathnames matching pattern &quot; . / dirt to be Excluded / * &quot;
Find all files in the current directory tree whose names begin with &apos; - &apos;
Find all files in the current directory tree whose names end with the suffix &quot; .keep. $ 1 &quot; , where $ 1 is the first command line argument , and remove that suffix
Find all files in the current directory tree whose path names match pattern &apos; . / sr * sc &apos;
Find all files in the current directory tree whose pathnames match pattern &quot; . / sr * sc &quot;
Find all files in the current directory tree whose pathnames match pattern &apos; * / 1 / lang / en.css &apos;
Find all files in the current directory tree whose size is greater than 1MB
Find all files in the current directory tree whose size is greater than 1MB , and move them to the &quot; files &quot; folder
Find all files in the current directory tree whose size is greater than 1MB , and move them to the &quot; files &quot; folder
Find all files in the current directory tree whose size is greater than 1MB , and move them to the &quot; files &quot; folder with confirmation
Find all files in the current directory tree with size bigger than 5 MB and sort them by size
Find all files in the current directory tree , except GIT files
Find all files in the current directory аргумент and its sub-directories with the optional constraints of опция _ поиска , значение and / or значение .
Find all files in the current user &apos; s home directory and its sub-directories with the optional constraints of опция _ поиска , значение and / or опция _ действия .
Find all files in the directory $ directory or below with the permissions specificed by $ permissions .
Find all files in the file system with the SUID bit
Find all files in the home directory tree that are owned by another user
Find all files in the home directory tree that are owned by another user and change their ownership to the current user
Find all files in the home directory with open permissions
Find all files in the level 6 subdirecotries of / usr / src and below , ignoring CVS files
Find all files in your home directory and below that are exactly 100M .
Find all files in your home directory and below that are larger than 100M .
Find all files in your home directory and below that are smaller than 100M .
Find all files in ~ / clang + llvm-3.3 / bin / and print &apos; basename / file / path &apos; for each file
Find all files larger than 100M and delete them
Find all files larger than 20000k
Find all files matching &quot; abc * &quot; in the current directory and append a column with &quot; OK &quot;
Find all files matching pattern &apos; . # * &apos; in the current directory tree
Find all files matching shell pattern &quot; foo / bar &quot; in the foo directory tree
Find all files matching the pattern &quot; $ { pattern } &quot; in their name and execute $ { my _ command } for each of them with the file path as argument
Find all files modified on the 7th of June , 2007 , starting from the current directory
Find all files more than 700 megabytes
Find all files name passwd in the root directory and all its sub-directories .
Find all files named &quot; MyCProgam.c &quot; ( ignoring the case ) and calculate each file &apos; s md5sum .
Find all files named &quot; file.ext &quot; in the current directory tree and print the path names of the directories they are in
Find all files named &quot; file.ext &quot; in the current directory tree and print the path names of the directories they are in
Find all files named &quot; file.ext &quot; in the current directory tree and print the path names of the directories they are in
Find all files named &quot; file.ext &quot; under the current working directory tree and print its filename
Find all files named &quot; file.ext &quot; within the current folder and print the path where each one is located
Find all files named &quot; file.ext &quot; within the current folder and print the path where each one is located
Find all files named &quot; filename &quot;
Find all files named &quot; filename &quot; in the current directory tree , not descending into &quot; FOLDER1 &quot; directories
Find all files named &quot; filename &quot; in the current directory tree , not descending into &quot; FOLDER1 &quot; directories
Find all files named &quot; foo _ bar &quot; in the current directory recursively
Find all files named &quot; something &quot; in the current folder and below and run them through the ls -l command in a one batch .
Find all files named &quot; something &quot; in the current folder and below and run them through the ls -l command , one by one .
Find all files named &quot; test2 &quot; in the current directory
Find all files named &quot; test2 &quot; in the current directory tree
Find all files named &apos; Makefile &apos; in the / usr / ports directory tree and count the number of lines in them beginning with USE _ RC _ SUBR
Find all files named &apos; Makefile &apos; in the / usr / ports directory tree and count the number of lines in them matching regular expression &apos; ^ MASTER _ SITE . * CPAN &apos;
Find all files named &apos; Makefile &apos; in the / usr / ports directory tree and count the number of lines in them matching regular expression &apos; ^ MASTER _ SITE _ SUBDIR . * \ . \ . / . * authors &apos;
Find all files named &apos; aaa.txt &apos; under current directory tree and display their contents
Find all files named &apos; file &apos; in 1 level down the current directory whose status were changed more than 1 day ago
Find all files named &apos; file &apos; in 1 level down the current directory whose status were changed more than 1 hour ago
Find all files named &apos; foo &apos; under current directory tree without descending into directories named &apos; foo &apos;
Find all files named &apos; foo &apos; under your home directory and list them with confirmation prompt
Find all files named &apos; new &apos; under current directory tree and display their contents
Find all files named &apos; new &apos; under current directory tree and display their contents
Find all files named &apos; test &apos; in the current directory tree , not descending into &quot; test &quot; directories
Find all files named &apos; text.txt &apos; under current directory tree and display their contents
Find all files named &apos; file1 &apos; on the system
Find all files named &apos; file1 &apos; starting from /
Find all files newer than httpd.conf under and below the current directory
Find all files of the user with UID = 1000
Find all files of the user with UID = 1000
Find all files on the system that are larger than 600 MB
Find all files on the system that are world writable
Find all files on the system that are world writeable
Find all files on the system that have been modified in the last 10 minutes
Find all files on the system whose names are &apos; autoload.php &apos;
Find all files on the system whose names are &apos; composer.json &apos;
Find all files on the system whose names are &apos; composer.json &apos; and search them for &quot; drush &quot;
Find all files on the system whose names are &apos; drush &apos;
Find all files on your system that are world writable
Find all files owned by group &apos; group2 &apos;
Find all files owned by group &apos; root &apos; in the current directory tree and change their user to &apos; temp &apos;
Find all files owned by the user daniel in the current directory and below .
Find all files owned by user &apos; comp &apos;
Find all files owned by user vivek
Find all files recursively starting from / that have been modified in the past 30 minutes and list them
Find all files recursively which end in &quot; .php &quot;
Find all files residing in / home / dm / Video or below that were changed less than 7 days ago
Find all files residing in / home / dm / Video or below that were last changed at least 10 days ago
Find all files starting from / that belong to user1
Find all files starting from / whose names end with &quot; .rpm &quot; and change their permissions to 755
Find all files starting from the current directory that contain &apos; .java &apos; in their pathnames
Find all files starting from the current directory that match regular expression &apos; . * Message . * \ .java &apos;
Find all files starting from the current directory which are exactly 100MB in size
Find all files starting from the current directory which are larger than 100MB
Find all files starting from the current directory which are owned by the user tommye
Find all files starting from the current directory which are smaller than 100MB
Find all files that are exactly 50 bytes
Find all files that are less than 50 bytes
Find all files that are modified in last 3 days
Find all files that are set group ID to 10
Find all files that are set group ID to staff
Find all files that are set user ID to root
Find all files that are set user ID to root
Find all files that aren &apos; t owned by user www-data
Find all files that belong to group developer
Find all files that belong to group root
Find all files that belong to user root
Find all files that belongs to group &apos; root &apos; under / directory and show a few lines of output from the beginning
Find all files that belongs to group Developer under / home directory
Find all files that belongs to user Tecmint under / home directory
Find all files that belongs to user root under / directory and show a few lines of output from the beginning
Find all files that contain the case insensitive regex &apos; stringtofind &apos; in maximum 1 level down the / directory without descending into other partitions
Find all files that contain the case insensitive regex &apos; stringtofind &apos; in maximum 1 level down the / directory without descending into other partitions
Find all files that contain the case insensitive regex &apos; stringtofind &apos; in maximum 1 level down the / directory without descending into other partitions
Find all files that have additional permissions
Find all files that have been modified in the last seven days .
Find all files that have either a .php or a .js extension
Find all files that have the SUID bit set
Find all files that have wrong permission
Find all files that were last accessed less than7 days ago under / home
Find all files that were last accessed more than 7 days ago under / home
Find all files that were last modified less than7 days ago under / home
Find all files that were modified later than ordinary _ file in the current directory and its sub-directories .
Find all files that were not accessed in the past 100 days
Find all files throughout the entire file hierarchy with the optional constraints of опция _ поиска , значение and / or опция _ действия .
Find all files under &quot; / path &quot; that do not contain a &quot; &quot; . and append &quot; .jpg &quot; to their file name
Find all files under $ 1 directory excluding hidden files and append a null character at the end of each of their paths
Find all files under $ 1 not matching the regex &apos; . * / \ .. * &apos; and execute hashmove on each of them with the file path as its argument
Find all files under $ YOUR _ DIR
Find all files under $ d directory and set read-write permission for owner and group and no permission for other for those files
Find all files under $ dir
Find all files under $ dir
Find all files under $ dir directory
Find all files under $ musicdir directory
Find all files under $ root _ dir
Find all files under $ source _ dir that match the regex . * \ . \ ( avi \ &#124; wmv \ &#124; flv \ &#124; mp4 \ ) in their paths and print them with null character as the delimiter
Find all files under $ source _ dir that match the regex expanded by $ input _ file _ type in their paths
Find all files under $ x directory and set read-write permission for owner and group and no permission for other for those files
Find all files under $ { searchpath } that match the regex $ { string1 } . * $ { string2 } . * $ { string3 } in their contents where $ { string1 } etc .. will be expanded
Find all files under $ { searchpath } that match the regex $ { string1 } . * $ { string2 } . * $ { string3 } in their contents where $ { string1 } etc .. will be expanded
Find all files under $ { searchpath } that match the regex &apos; &quot; $ { string1 } &quot; . * &quot; $ { string2 } &quot; . * &quot; $ { string3 } &quot; &apos; ( $ { string1 } ... won &apos; t be expanded ) in their contents
Find all files under . / lib / app and redirect their sorted list to myFile
Find all files under . / lib / app and sort them
Find all files under / home that belong to user tecmint
Find all files under / home / feeds / data without descending into * def / incoming * and * 456 / incoming * paths
Find all files under / home / myfolder that match the regex &apos; abc . * def . * ghi &apos; in their contents
Find all files under / home / mywebsite / public _ html / sites / all / modules and set their permission to 640
Find all files under / home / username / public _ html / modules and set their permission to 640
Find all files under / home / username / public _ html / sites / all / modules and set their permission to 640
Find all files under / home / username / public _ html / sites / all / themes and set their permission to 640
Find all files under / home / username / public _ html / sites / default / files and set their permission to 660
Find all files under / home / username / public _ html / themes and set their permission to 640
Find all files under / mnt / naspath directory without descending into .snapshot directory that were modified in last 24 hours with null character as the delimiter
Find all files under / mnt / naspath directory without descending into .snapshot directory that were modified in last 24 hours with null character as the delimiter
Find all files under / mountpoint and below which have hard links
Find all files under / myfiles with 647 permission
Find all files under / myfiles with read-write access for others
Find all files under / path and below executable by &apos; group &apos; or &apos; other &apos;
Find all files under / path and below writable by &apos; group &apos; and &apos; other &apos;
Find all files under / path and below writable by &apos; group &apos; and &apos; other &apos;
Find all files under / path and below writable by &apos; group &apos; and &apos; other &apos;
Find all files under / path and below writable by &apos; group &apos; or &apos; other &apos;
Find all files under / path and calculate their md5sum
Find all files under / path / to / Dir and set their permission to 644
Find all files under / path / to / base / dir and change their permission to 644
Find all files under / path / to / base / dir and change their permission to 644
Find all files under / path / to / base / dir and change their permission to 644
Find all files under / path / to / dir and change their permission to 644
Find all files under / path / to / dir that were modified less than 7 days ago and show only first several lines of output
Find all files under / path / to / dir that were modified less than 7 days ago with null character as the delimiter
Find all files under / path / to / input / that match the case insensitive string literal &apos; spammer @ spammy.com &apos; in their contents
Find all files under / somefolder matching the case insensitive regex &apos; \ ( . * error . * \ ) \ &#124; \ ( ^ second . * \ log $ \ ) \ &#124; \ ( . * FFPC \ .log $ \ ) &apos; in their paths
Find all files under / somefolder matching the extended case insensitive regex &apos; \ . / ( . * \ .error. * &#124; second . * log &#124; . * FFPC \ .log ) $ &apos; in their paths
Find all files under / somefolder matching the extended regex &apos; \ . / ( . * \ .error. * &#124; second . * log &#124; . * FFPC \ .log ) $ &apos; in their paths
Find all files under / somefolder matching the pattern expanded by $ FILE _ PATTERN in thier names
Find all files under / var / www directory and set their permission to 644
Find all files under and below / dir that were accessed less than 60 minutes ago
Find all files under and below / dir that were changed or created less than 60 minutes ago
Find all files under and below / dir that were modified less than 60 minutes ago
Find all files under and below the current working directory with the word California in the file
Find all files under and below the current working directory with the word California in the file ( case insensitive ) , and count the number of lines in the output
Find all files under and below the current working directory with the word California in the file , and count the number of lines in the output
Find all files under and below the current working directory with the word California in the file , and count the number of lines in the output
Find all files under current directory
Find all files under current directory
Find all files under current directory
Find all files under current directory
Find all files under current directory and append a null character at the end of each of their paths
Find all files under current directory and change their permission to 400
Find all files under current directory and change their permission to 600
Find all files under current directory and change their permission to 644
Find all files under current directory and count the output line number
Find all files under current directory and make them read-only for owner , read &amp; writable by group and remove read-write-execute permission
Find all files under current directory and print only the filenames ( not paths )
Find all files under current directory and print only the filenames ( not paths )
Find all files under current directory and print them appending a null character at the end of each file paths
Find all files under current directory and search for &apos; something &apos; in those files
Find all files under current directory and search for &apos; something &apos; in those files
Find all files under current directory and set read permission for group and other for these files
Find all files under current directory and set read-write permission for owner and group and no permission for other for those directories
Find all files under current directory and set read-write permission for owner , read permission for group and no permission for other for those files
Find all files under current directory and set their permission to 775
Find all files under current directory and set their permission to 775
Find all files under current directory and show their file information
Find all files under current directory and show their file information
Find all files under current directory and show their file information
Find all files under current directory excluding hidden directories
Find all files under current directory excluding hidden files
Find all files under current directory matching either of the patterns &apos; error . &#91; 0-9 &#93; * &apos; , &apos; access . &#91; 0-9 &#93; * &apos; , &apos; error _ log . &#91; 0-9 &#93; * &apos; , &apos; access _ log . &#91; 0-9 &#93; * &apos; , &apos; mod _ jk.log. &#91; 0-9 &#93; * &apos; in their names
Find all files under current directory matching the pattern &apos; &#91; error , access , error _ log , access _ log , mod _ jk.log &#93; * . &#91; 0-9 &#93; * &apos; in their names
Find all files under current directory matching the posix-egrep type regex &apos; ^ . * / &#91; a-z &#93; &#91; ^ / &#93; * $ &apos; in their names
Find all files under current directory matching the regex &apos; . * \ ( \ ( error \ &#124; access \ ) \ ( _ log \ ) ? \ &#124; mod _ jk \ .log \ ) \ . &#91; 0-9 &#93; + &apos; in their paths
Find all files under current directory that are larger than 10KB in size
Find all files under current directory that are read less than 1 minute ago
Find all files under current directory that were modified in the last 24 hours
Find all files under current directory that were modified in the last 24 hours and also include the files that were modified in less than 1 day ago
Find all files under current directory that were modified in the last 24 hours and also include the files that were modified in less than 1 day ago
Find all files under current directory that were modified less than 1 day ago
Find all files under current directory that were modified more than 1 day ago
Find all files under current directory that were modified more than 7 days ago and delete them
Find all files under current directory tree named &apos; filename _ regex &apos; excluding &apos; .svn &apos; and &apos; .pdv &apos; directories and files then search for the case insensitive pattern &apos; your search string &apos; in those files
Find all files under current directory whose file type description contains &quot; image &quot; , display only path to each file .
Find all files under current directory whose file type description contains &quot; image &quot; , display the paths to files and file type descriptions .
Find all files under current directory whose status was changed less than 3 days ago and show last 5 lines of output
Find all files under current directory with 755 permission and change their permission to 644
Find all files under current directory with their size and paths , reverse sort them numerically , then print first 4 entries
Find all files under current directory with their size and paths , reverse sort them numerically , then print the 2nd field ( with space as the delimiter ) of the first 4 entries
Find all files under current directory without descending into .snapshot directory that were modified in last 24 hours with null character as the delimiter
Find all files under directory tree / path / to / dir whose permissions are not 644
Find all files under directory tree / path / to / dir whose permissions are not 644
Find all files under foldername directory and set their permission to 644
Find all files under images directory
Find all files under maximum 1 level down the . / subfolder and . / subfolder / * / paths
Find all files under media / directory and change their permission to 600
Find all files under minimum 1 level down the current directory
Find all files under path _ to _ dir
Find all files under the current directory and copy their permissions to the same file in &quot; .. / version1 &quot;
Find all files under the current directory that are not the same file as &quot; / home / nez / file.txt &quot;
Find all files under the current directory whose filenames are not &quot; file.txt &quot; , ignoring the case
Find all files under the current directory whose pathnames do not end with &quot; Video &quot; , ignoring the case
Find all files under var / directory and change their permission to 600
Find all files which are accessed after modifying / etc / passwd files .
Find all files which begin with &apos; a &apos; or &apos; b &apos; from current directory downwards and print them .
Find all files which belong to user lal and change their ownership to ravi
Find all files which have 211028 inode number in current directory then Locating and renaming unprintable directories
Find all files whose filename does not end with * .html .
Find all files whose name or type description includes &quot; text &quot; , display only paths to files .
Find all files whose names begin with &apos; Makefile &apos; at the / usr / ports directory tree &apos; s level 3 and count the number of lines with NOPORTDOCS or NOPORTEXAMPLES in them .
Find all files whose names begin with &apos; Makefile &apos; in the / usr / ports directory tree and count how many of them contain &apos; QMAKESPEC &apos;
Find all files whose names begin with &apos; Makefile &apos; in the / usr / ports directory tree and count how many of them contain &apos; QTDIR &apos;
Find all files whose names contain the string &apos; xpilot &apos; which exist within &apos; / usr / local / games &apos;
Find all files whose names do not begin with &quot; zsh &quot; on ext3 file systems
Find all files whose names end with &quot; macs &quot; in and below the current directory
Find all files whose names end with &quot; ~ &quot; in the / home / peter directory tree , following symlinks , and delete them
Find all files whose names end with &quot; ~ &quot; in the / home / peter directory tree , following symlinks , and delete them
Find all files whose names end with &quot; ~ &quot; in the / home / peter directory tree , following symlinks , and delete them
Find all files whose names end with &quot; ~ &quot; in the / home / peter directory tree , following symlinks , and delete them
Find all files whose names end with &quot; ~ &quot; in the / home / peter directory tree , following symlinks , and delete them
Find all files whose owner is &apos; user1 &apos;
Find all files whose permission are 777
Find all files with &apos; .conf &apos; extension under &apos; / etc &apos; directory going into at most 2 level deep and show the last 10 of them
Find all files with &apos; .conf &apos; extension under &apos; / etc &apos; directory tree that have been modified in the last 30 minutes
Find all files with &apos; .db &apos; extension ( case insensitive ) that belong to user &apos; exampleuser &apos; and were modified exactly 7 days ago under &apos; / home &apos; directory tree
Find all files with &apos; .jpg &apos; extension in the current directory ignoring sub-directories and archive them to a file named jpeg.tgz
Find all files with &apos; .txt &apos; ( case insensitive ) extension under $ dir directory non-recursively and sort them numerically
Find all files with &apos; .txt &apos; extension under &apos; / home / my _ dir &apos; dirctory tree and display the number of lines in these files
Find all files with 644 permission and change the permission to 664
Find all files with extension .aac in the / home directory tree
Find all files with name &quot; file.ext &quot; under the current working directory tree and print each full path directory name
Find all files with name ending with .txt and display only the filenames without full paths
Find all files with space in their names under current directory
Find all files with the SUID bit set
Find all files with the SUID bit set beginning with the root directory
Find all files with the SUID bit set , starting from /
Find all files with the extension jpg regardless of case
Find all files with the name &quot; MyProgram.c &quot; in the current directory and all of it &apos; s sub-directories .
Find all files with the name &quot; MyProgram.c &quot; in the current directory and its sub-directories while ignoring the case of the file name .
Find all files you have modified in the last two days
Find all files , folders , symlinks , etc in the current directory recursively
Find all files , folders , symlinks , etc matching pattern &quot; * .php &quot; in the current directory recursively
Find all files , starting from / but ignoring removable media , whose names end with &quot; .rpm &quot;
Find all files / directoires that were modified more than 3 days ago under $ dir directory tree
Find all files / directores that are newer than / etc / motd and conain the string &apos; top &apos; at the beginning of their names under user &apos; s home directory tree
Find all files / directores under &apos; / usr / local &apos; directory tree that case insensitively contain the word &apos; blast &apos; in their names
Find all files / directores under &apos; / usr / local &apos; directory tree that contain the word &apos; blast &apos; in their names
Find all files / directores under / etc and run the file command on each of them
Find all files / directores under / etc filter them by searching for &apos; test &apos; in their name and run the file command on each of them
Find all files / directories under / eserver6 directory and follow symlinks if needed
Find all files / directories case insensitively containing &apos; xt &apos; in their names under &apos; / etc &apos; directory tree
Find all files / directories containing &apos; blah &apos; ( case insensitive ) in their names that were modified in less than 2 days ago uder current directory tree
Find all files / directories containing &apos; farm &apos; in their names under &apos; / usr / share &apos; directory tree
Find all files / directories containing &apos; foo &apos; in their names under current directory tree
Find all files / directories containing the case insensitive string something &apos; in their names under current directory tree
Find all files / directories excluding paths that match &apos; .git &apos; or &apos; .gitignore &apos;
Find all files / directories following symbolic links under current directory tree that are owned by &apos; root &apos; user
Find all files / directories following symlinks under / path / to / dir / * paths and print the timestamp in YmdHMS format along with their paths
Find all files / directories greater than 100MB and print their list along with their size in / root / big.txt file
Find all files / directories ignoring * ~ files / directories without descending into .snapshot directory with null character as the delimiter
Find all files / directories in 1 level down the current directory
Find all files / directories in all paths expanded by the glob pattern *
Find all files / directories in current directory and execute the script itself with minimal invocation for those files / directories
Find all files / directories in directories / files taken from the glob pattern &apos; / folder / path / * &apos; recursively that have not been modified in the last 2 hours and delete them
Find all files / directories in directories / files taken from the glob pattern &apos; / tmp / test / * &apos; recursively that have not been modified from the start of the day
Find all files / directories in directories / files taken from the glob pattern &apos; / tmp / test / * &apos; that were modified within the last day ( day counted from today )
Find all files / directories in entire file system for which owner has at least read / write permissions , or the group has at least read permission , or others have at least read permission
Find all files / directories in entire file system for which owner has read / write / execute permissions , or the group has at least execute permission , or others have at least execute permission
Find all files / directories in entire file system less than 50 bytes
Find all files / directories in entire file system more than 700 Megabytes
Find all files / directories in entire file system that are exactly 50 bytes
Find all files / directories in entire file system that are owned by &quot; shadow &quot; group
Find all files / directories in entire file system that are owned by &quot; syslog &quot; user
Find all files / directories in entire file system that have &quot; write &quot; bit set for either the owner , the group , or others
Find all files / directories in entire file system that have &quot; write &quot; bit set for either the owner , the group , or others
Find all files / directories in entire file system that have &quot; write &quot; bit set for either the owner , the group , or others
Find all files / directories in entire file system with 644 permission
Find all files / directories in level $ i down the current directory with all positional parameters appended with the find command
Find all files / directories in level 1 down the $ queue directory with all positional parameters appended with the find command
Find all files / directories in level 2 down the current directory
Find all files / directories in maximum 1 level down the current directory which do not have only read permission for &apos; other &apos;
Find all files / directories in the paths expanded by the glob pattern &apos; . * &apos;
Find all files / directories matching the regex . * sql . *
Find all files / directories matching the regex pattern &quot; . * \ \ .rb $ &quot; under current directory
Find all files / directories named $ something under current directory
Find all files / directories named &apos; .todo &apos; under $ STORAGEFOLDER directory tree and print the parent directory names
Find all files / directories named &apos; .todo &apos; under $ STORAGEFOLDER directory tree and print the parent directory names
Find all files / directories named &apos; .todo &apos; under $ STORAGEFOLDER directory tree and print their parent paths
Find all files / directories named &apos; Desktop &apos; under current directory
Find all files / directories named &apos; FindCommandExamples.txt &apos; that belong to the user &apos; root &apos; in the entire filesystem
Find all files / directories named &apos; FindCommandExamples.txt &apos; under &apos; / root &apos; directory tree
Find all files / directories named &apos; Waldo &apos; under &apos; Books &apos; directory tree that is located in user &apos; s home directory
Find all files / directories named &apos; apt &apos; in the entrie filesystem
Find all files / directories named &apos; articles.jpg &apos; under &apos; / home / username / public _ html / images &apos; directory tree
Find all files / directories named &apos; articles.jpg &apos; under &apos; images &apos; directory tree
Find all files / directories named &apos; articles.jpg &apos; under current directory tree
Find all files / directories named &apos; com.apple.syncedpreferences.plist &apos; ( case insensitive ) under ~ / Library directory tree
Find all files / directories named &apos; date &apos; under / usr
Find all files / directories named &apos; document &apos; in maximum 4 levels down the &apos; / usr &apos; directory
Find all files / directories named &apos; document &apos; in the entire filesystem
Find all files / directories named &apos; document &apos; in the root filesystem partition
Find all files / directories named &apos; file &apos; and print them with null character as the delimiter instead of newline
Find all files / directories named &apos; file &apos; without descending into directories with the same name under current directory tree
Find all files / directories named &apos; file1 &apos; under current directory tree
Find all files / directories named &apos; file _ name &apos; under current directory tree
Find all files / directories named &apos; filename &apos; that belong to user &apos; username &apos; and group &apos; groupname &apos; in the entire filesystem
Find all files / directories named &apos; findcommandexamples.txt &apos; ( case insensitive ) in the entire filesystem
Find all files / directories named &apos; foo &apos; in the entire filesystem
Find all files / directories named &apos; foo &apos; under current directory tree without descending into directories named &apos; foo &apos;
Find all files / directories named &apos; foo.bar &apos; in the entire filesystem
Find all files / directories named &apos; foo.bar &apos; under &apos; . / dir1 &apos; and &apos; . / dir2 &apos; directory trees
Find all files / directories named &apos; foo.rb &apos; under current directory tree
Find all files / directories named &apos; fprintf.c &apos; under &apos; / usr / src &apos; directory tree
Find all files / directories named &apos; game &apos; under current directory tree
Find all files / directories named &apos; java &apos; under / usr directory
Find all files / directories named &apos; javac &apos; under current directory
Find all files / directories named &apos; my.txt &apos; in the entire filesystem
Find all files / directories named &apos; myfile &apos; under your home directory
Find all files / directories named &apos; pattern &apos; under current directory tree
Find all files / directories named &apos; photo.jpg &apos; ( case insensitive ) under current directory tree
Find all files / directories named &apos; photo.jpg &apos; under current directory tree
Find all files / directories named &apos; photo ? .jpg &apos; under current directory tree
Find all files / directories named &apos; photoA.jpg &apos; under current directory tree
Find all files / directories named &apos; query &apos; ( case insensitive ) under current directory
Find all files / directories named &apos; query &apos; ( case insensitive ) under current directory tree
Find all files / directories named &apos; query &apos; under current directory
Find all files / directories named &apos; query &apos; under current directory tree
Find all files / directories named &apos; test &apos; under current directory tree
Find all files / directories named &apos; testfile.txt &apos; under current directory tree
Find all files / directories named &apos; text &apos; under current directory
Find all files / directories named &apos; top &apos; ( case insensitive ) in the entire filesystem
Find all files / directories named &apos; top &apos; in the entire filesystem
Find all files / directories named &apos; vimrc &apos; in the entire filesystem
Find all files / directories named &apos; имя _ файла &apos; in the entire filesystem
Find all files / directories named Root under current directory and copy them to newRoot
Find all files / directories named file in 2 and 3 levels down the current directory
Find all files / directories named file in minimum 4 levels down the current directory
Find all files / directories named file1 in maximum 2 levels down the current directory
Find all files / directories named file1 under current directory
Find all files / directories named modules under current directory
Find all files / directories named modules under current directory and list them twice
Find all files / directories named orm.properties in entire file system
Find all files / directories named orm.properties under / eserver6 directory
Find all files / directories named orm.properties under / eserver6 / share / system / config / cluster directory
Find all files / directories named orm.properties under current directory
Find all files / directories newer than ttt or owned by user &apos; wn &apos; in entire file system
Find all files / directories not with the name &apos; query _ to _ avoid &apos; under current directory
Find all files / directories not with the name &apos; query _ to _ avoid &apos; under current directory
Find all files / directories owned by the user &apos; bob &apos; under &apos; / home &apos; directory tree
Find all files / directories owned by user &apos; joebob &apos; under &apos; / some / directory &apos; directory tree
Find all files / directories owned by user &apos; michel &apos; under current directory
Find all files / directories starting with &apos; app- &apos; and ending with &apos; .log &apos; in their names and have been modified in the last 5 minutes
Find all files / directories starting with &apos; onlyme &apos; in their names under current directory tree in minimum 1 level deep
Find all files / directories starting with &apos; readme &apos; ( case insensitive ) under &apos; / usr / share / doc &apos; directory tree
Find all files / directories startring with &apos; onlyme &apos; in their names under current directory without going into sub-directories
Find all files / directories that are bigger than 100 bytes under &apos; / home / apache &apos; directory tree
Find all files / directories that are newer than &apos; backup.tar.gz &apos; by modification time
Find all files / directories that are newer than &apos; ttt &apos; by modification time or owned by the user &apos; wnj &apos; in the entire filesystem
Find all files / directories that are not newer than Jul 01 by modification time
Find all files / directories that are owned by user &apos; dave &apos; under current user &apos; s home directory tree
Find all files / directories that are owned by user &apos; eric &apos; under current directory tree
Find all files / directories that are owned by user &apos; takuya &apos; under current directory tree
Find all files / directories that are owned by user &apos; wnj &apos; and are newer than &apos; ttt &apos; by modification time in the entire filesystem
Find all files / directories that belong to the group &apos; accts &apos; under &apos; / apps &apos; directory tree
Find all files / directories that belong to the group &apos; audio &apos; under &apos; / dev &apos; directory tree
Find all files / directories that belong to the group &apos; staff &apos; under &apos; / usr &apos; directory tree
Find all files / directories that contain &apos; packet &apos; ( case insensitive ) in their names excluding directories that are bigger than 1500 bytes in size
Find all files / directories that contain &apos; target &apos; ( case insensitive ) in their names under current directory no-recursively
Find all files / directories that contain the string literal &apos; $ VERSION &apos; in their names under current directory tree
Find all files / directories that contain the string literal &quot; $ VERSION &quot; in their names under current directory tree
Find all files / directories that do not belong to any user under &apos; / home &apos; directory tree
Find all files / directories that do not contain &apos; photo &apos; in their names under current directory tree
Find all files / directories that have read , write , execution permission for user and belong to the user &apos; my _ user &apos; under current directory tree
Find all files / directories that start with &apos; a1a2 &apos; and end with &apos; txt &apos; in their names and move their parent directories to &apos; / home / spenx / dst / &apos; directory
Find all files / directories that start with &apos; onlyme &apos; in their names under maximum 2 levels down the current directory
Find all files / directories that start with &apos; readme &apos; ( case insensitive ) in their names under &apos; / usr / share / doc &apos; directory tree
Find all files / directories that start with &apos; screen &apos; ( case insensitive ) in their names under user &apos; s home directory tree
Find all files / directories that start with &apos; test &apos; in their names under current directory tree
Find all files / directories that were modified after February 1st under &apos; / usr &apos; directory tree
Find all files / directories under $ 1 which have at least execute permission for their owner and set execute permission for group for these files / directories
Find all files / directories under $ 1 which have at least execute permission for their owner and set execute permission for group for these files / directories
Find all files / directories under $ 1 which have at least read permission for their owner and set read permission for group for these files / directories
Find all files / directories under $ 1 which have at least read permission for their owner and set read permission for group for these files / directories
Find all files / directories under $ 1 which have at least write permission for their owner and set write permission for group for these files / directories
Find all files / directories under $ 1 which have at least write permission for their owner and set write permission for group for these files / directories
Find all files / directories under $ TARGET _ DIR directory tree matching the posix extended regular expression \ &quot; . * / $ now . * \ &quot; ( where $ now is a variable ) and save the output in file $ FILE _ LIST
Find all files / directories under $ dir directory
Find all files / directories under $ dir directory tree which have been modified in the last 3 days
Find all files / directories under $ something directory
Find all files / directories under &apos; / abs / path / to / directory &apos; directory non-recursively that match the pattern &apos; . * invalidTemplateName . * &apos; in their names
Find all files / directories under &apos; / directory _ path &apos; directory tree that have been modified within the last day
Find all files / directories under &apos; / etc &apos; directory tree that are greater than 5MB and print their sizes and names
Find all files / directories under &apos; / etc &apos; directory tree that have been modified after &apos; / etc / motd &apos;
Find all files / directories under &apos; / home / exampleuser / &apos; directory tree whose names end with &apos; conf &apos; and were modified exactly 3 days ago
Find all files / directories under &apos; / home / user / &apos; directory tree whose status was changed exactly 10 minitues ago
Find all files / directories under &apos; / home / user / &apos; directory tree whose status were changed 10 minutes ago
Find all files / directories under &apos; / usr &apos; directory tree that have been modified exactly 5 minutes ago
Find all files / directories under &apos; / usr &apos; directory tree that have not been modified in the last 356 days counting days from today
Find all files / directories under &apos; / usr / local &apos; containing &apos; blast &apos; ( case insensitive ) in their names
Find all files / directories under &apos; / usr / local / games &apos; directory tree that contain the string &apos; xpilot &apos; in their names
Find all files / directories under &apos; / usr / share / data &apos; directory tree that match the posix extended regex &quot; . * / 20140624 . * &quot; in their paths and save the list to &apos; / home / user / txt-files / data-as-of-20140624.txt &apos;
Find all files / directories under &apos; / usr / share / doc &apos; directory tree that contain &apos; readme &apos; ( case insensitive ) at the beginning of their names
Find all files / directories under &apos; / usr / share / doc &apos; directory tree whose name start with &apos; README &apos;
Find all files / directories under &apos; / var / log &apos; directory tree that bave been modified today ( from the start of the day )
Find all files / directories under &apos; / var / tmp &apos; directory tree that belong to a user with user id 1000
Find all files / directories under &apos; A &apos; directory tree excluding directory &apos; A / a &apos; and all of it &apos; s contents
Find all files / directories under &apos; A &apos; directory tree excluding the paths containing the directory &apos; a &apos;
Find all files / directories under &apos; my key phrase &apos; directory
Find all files / directories under .. directory and copy them to ~ / foo / bar
Find all files / directories under . / var / log directory
Find all files / directories under / home / baumerf / public _ html / that were modified less than 60 minutes ago excluding * .log files / directories
Find all files / directories under / home / baumerf / public _ html / that were modified less than 60 minutes ago excluding error _ log files / directories
Find all files / directories under / home / bozo / projects directory that were modified 1 day ago
Find all files / directories under / home / feeds / data directory
Find all files / directories under / home / foo / public _ html / that were modified less than 60 minutes ago
Find all files / directories under / myfiles following symlinks if needed
Find all files / directories under / myfiles that are 2560 bytes in size
Find all files / directories under / myfiles that were accessed more than 30 days ago
Find all files / directories under / myfiles that were modified 2 days ago
Find all files / directories under / non-existent / directory directory with ~ / bin / find
Find all files / directories under / path directory that were modified more than 30 minutes ago
Find all files / directories under / path / to / dir and set directory permission to 0755 and file permission to 0644
Find all files / directories under / path / to / dir / * paths and print the timestamp in YmdHMS format along with their paths and object of symlinks
Find all files / directories under / proc and run ls command on each .
Find all files / directories under / usr / tom which matches the extended regex &apos; * .pl &#124; * .pm &apos; in their names
Find all files / directories under / var / log directory
Find all files / directories under / var / www / some / subset and change their owner and group to www-data
Find all files / directories under _ CACHE _ * directories
Find all files / directories under current / export / home / someone directory and upload them to ftp : / / somehost / tmp /
Find all files / directories under current directory
Find all files / directories under current directory
Find all files / directories under current directory
Find all files / directories under current directory
Find all files / directories under current directory
Find all files / directories under current directory and append a null character at the end of each path
Find all files / directories under current directory and count the number of lines for the output
Find all files / directories under current directory and print their paths
Find all files / directories under current directory and print their paths
Find all files / directories under current directory and print their paths
Find all files / directories under current directory and print their paths
Find all files / directories under current directory and print their paths
Find all files / directories under current directory and print them
Find all files / directories under current directory and print them twice in each line
Find all files / directories under current directory and print them with newline as the delimiter
Find all files / directories under current directory and put the output into full _ backup _ dir variable
Find all files / directories under current directory and set their permission to 775
Find all files / directories under current directory and sort them
Find all files / directories under current directory appending a null character at the end of each file name / path
Find all files / directories under current directory bypassing file hierarchies in lexicographical order
Find all files / directories under current directory excluding the paths that match the POSIX extended regex &quot; . * def / incoming . * &#124; . * 456 / incoming . * &quot;
Find all files / directories under current directory following symlinks if needed
Find all files / directories under current directory in maximum 3 levels deep
Find all files / directories under current directory matching the case insensitive pattern &apos; pattern &apos;
Find all files / directories under current directory that are 10MB in size
Find all files / directories under current directory that are greater than 10MB in size
Find all files / directories under current directory that match the case insensitive extended regex . * / ( EA &#124; FS ) _ . *
Find all files / directories under current directory that match the case insensitive glob pattern { EA , FS } _ *
Find all files / directories under current directory that match the case insensitive regex . * / \ ( EA \ &#124; FS \ ) _ . *
Find all files / directories under current directory that match the case insensitive regex . / \ ( EA \ &#124; FS \ ) _ . *
Find all files / directories under current directory that match the case insensitive regex . / \ ( RT \ &#124; ED \ ) . * and show several lines of output from the beginning
Find all files / directories under current directory that were accessed 30 minutes ago
Find all files / directories under current directory that were accessed less than 1 day ago
Find all files / directories under current directory that were accessed more than 25 but less than 35 minutes ago
Find all files / directories under current directory that were modified exactly 30 minutes ago
Find all files / directories under current directory that were modified later than / reference / file
Find all files / directories under current directory tree
Find all files / directories under current directory tree excluding files / directories with name &apos; query _ to _ avoid &apos;
Find all files / directories under current directory tree excluding files / directories with name &apos; query _ to _ avoid &apos;
Find all files / directories under current directory tree excluding hidden files / directories
Find all files / directories under current directory tree that are newer than backup.tar.gz by modification time
Find all files / directories under current directory tree that are owned by &apos; root &apos;
Find all files / directories under current directory tree that belong to the group &apos; compta &apos;
Find all files / directories under current directory tree that belong to the user &apos; tom &apos;
Find all files / directories under current directory tree that belong to user &apos; john &apos;
Find all files / directories under current directory tree that contain &apos; 1 &apos; or &apos; k &apos; in their names
Find all files / directories under current directory tree that contain &apos; pattern &apos; in their names
Find all files / directories under current directory tree that have modified in the last 2 days and contain &apos; blah &apos; ( case insensitive ) in their names
Find all files / directories under current directory tree that start with &apos; R &apos; and end with &apos; VER &apos; in their names and were modified more than 1 day ago
Find all files / directories under current directory tree that start with &apos; test &apos; in their names without descending into directories with the same name pattern
Find all files / directories under current directory tree whose names start with &apos; ( test ) &apos; followed by two digits and end with &apos; .txt &apos; extension
Find all files / directories under current directory tree whose names start with &apos; some _ text _ 2014.08.19 &apos;
Find all files / directories under current directory tree whose names start with &apos; test &apos; followed by two digits and end with &apos; .txt &apos; extension
Find all files / directories under current directory tree whose paths match the pattern &apos; * ACK * 1 &apos; ( case insensitive )
Find all files / directories under current directory tree whose paths match the regex &apos; filename-regex . \ * \ .html &apos;
Find all files / directories under current directory tree whose paths start with &apos; . / sr &apos; and end with &apos; sc &apos;
Find all files / directories under current directory tree wihout descending into &apos; . / src / emacs &apos; directory
Find all files / directories under current directory tree with &apos; .old &apos; extension
Find all files / directories under current directory tree with inode number 211028 and move them to &apos; newname.dir &apos;
Find all files / directories under current directory which have read-write permission for owner and only read permission for group and others
Find all files / directories under current directory with &apos; FooBar &apos; in their paths and copy them to ~ / foo / bar
Find all files / directories under current directory with &apos; FooBar &apos; in their paths and copy them to ~ / foo / bar
Find all files / directories under current directory with &apos; FooBar &apos; in their paths and copy them to ~ / foo / bar
Find all files / directories under current directory with &apos; foobar &apos; ( case insensitive ) in their names and copy them to ~ / foo / bar
Find all files / directories under current directory with a Depth-First search
Find all files / directories under current directory with null character as the delimiter
Find all files / directories under current directory with null character as the delimiter
Find all files / directories under current directory with null character as the delimiter and then replace the null characters with :
Find all files / directories under current directory with the null character as the delimiter
Find all files / directories under directory &apos; .cache / chromium / Default / Cache / &apos; which are bigger than 100MB and which are atleast 1 level deep and delete them
Find all files / directories under minimum 1 level down the $ FOLDER directory and sort them
Find all files / directories under minimum 2 level down the current directory and set their permission to 700
Find all files / directories under test directory
Find all files / directories under whatever and ... directory and copy them to / var / tmp
Find all files / directories which have been modified from the start of the day in directories / files taken from the glob pattern &apos; / tmp / test / * &apos;
Find all files / directories which have been modified within the last day in the drectories / files taken from the glob pattern &apos; / tmp / test / * &apos;
Find all files / directories whose names start with &apos; readme &apos; ( case insensitive ) under &apos; / usr / share / doc &apos; directory tree
Find all files / directories with &apos; .bar &apos; extension in maximum 2 levels down the current directory
Find all files / directories with &apos; .err &apos; extension under &apos; / home / username &apos; directory tree
Find all files / directories with &apos; .js &apos; extension under current directory tree excluding paths that contain the directory &apos; . / directory &apos;
Find all files / directories with &apos; .js &apos; extension under current directory tree without descending into and ignoring &apos; . / directory &apos; completely
Find all files / directories with &apos; .js &apos; extension under current directory tree without descending into &apos; . / directory &apos;
Find all files / directories with &apos; .log &apos; extension that belong to the group &apos; adm &apos; under &apos; / var / log &apos; directory tree
Find all files / directories with &apos; .log &apos; extension whose names start with &apos; app- &apos; , have been modified in the last 5 minutes and show the first one found
Find all files / directories with &apos; .mp4 &apos; extension and all regular files with &apos; .flv &apos; extension , sort them according to their names and display the first 500 of them
Find all files / directories with &apos; .o &apos; extension under &apos; / lib / modules &apos; directory tree
Find all files / directories with &apos; .pdf &apos; extension excluding &apos; pdfs &apos; directory and all of its contents
Find all files / directories with &apos; .tar.gz &apos; extension under $ DIR / tmp / daily / directory tree , sort them numerically and show the last 3 of them
Find all files / directories with &apos; .txt &apos; extension that are less than 100 KB in size under &apos; / home &apos; directory tree
Find all files / directories with &apos; .txt &apos; extension under &apos; / home &apos; directory tree that are exactly 100KB in size
Find all files / directories with &apos; .txt &apos; extension under &apos; / home &apos; directory tree that are greater than 100KB in size
Find all files / directories with &apos; .what _ to _ find &apos; extension under current directory tree and show the list by excluding paths that contain &apos; excludeddir1 &apos; and &apos; excludeddir2 &apos;
Find all files / directories with &apos; .xml &apos; extension that start with &apos; log4j &apos; in their names under &apos; / cygdrive / e / MyDocs / Downloads / work / OATS Domain related / &apos; directory tree , search for files that contain the string &apos; CONSOLE &apos; in their contents , then search for the string &apos; ASYNC &apos; in the matched files and display the matched lines along with their filenames
Find all files / directories with &apos; my key phrase &apos; in their names under current directory
Find all files / directories with 644 permission in entire file system
Find all files / directories with 664 permission under current directory tree
Find all files / directories with 755 permission under current directory tree
Find all files / directories with 777 permission under &apos; / apps / audit &apos; and strip write permission for &apos; other &apos; from them
Find all files / directories with 777 permission under current directory tree
Find all files / directories with case insensitive name pattern $ TARGET that are located in minimum 10 level down the current directory
Find all files / directories with execute permission by group or others
Find all files / directories with inode number 16187430 and move them to &apos; new-test-file-name &apos;
Find all files / directories with name pattern $ nombre that are at most 2 levels down the $ DIR _ TEMPORAL and $ DIR _ DESCARGA directories and show only the file names ( without parent path ) appended with &apos; .torrent &apos;
Find all files / directories with permission $ permissions under $ directory directory tree
Find all files / directories with space in their names under / tmp / directory and rename them by replacing all spaces with _
Find all files / directories with space in their names under / tmp / directory and rename them by replacing all spaces with _
Find all files / directories with space in their names under $ 1 directory
Find all files / directories with space in their names under current directory
Find all files / directories with space in their names under current directory and rename them by replacing all spaces with _
Find all files / directories with spaces in their names under ~ / Library directory
Find all files / directories with user id 120 under current directory tree
Find all files / drectories under &apos; / u / bill &apos; directory tree that have been accessed in the last 2 to 6 minutes
Find all first occurrences of directories named &apos; .texturedata &apos; under &apos; / path / to / look / in &apos; directory tree
Find all flies under current directory excluding * .png files and print the file paths ( with match count ) that match the case insensitive regex &apos; foo = &apos; in their contents
Find all fonts ( in &apos; / usr / local / fonts &apos; ) that belong to the user &apos; warwick &apos;
Find all foo.mp4 files in the current directory tree
Find all foo.mp4 files in the current directory tree and print the pathnames of their parent directories
Find all foo.mp4 files in the current directory tree and print the pathnames of their parent directories
Find all foo.mp4 files in the current directory tree and print the pathnames of their parent directories
Find all hard links to file / path / to / file that exist under the current directory tree
Find all hard links to file1 under / home directory
Find all hidden ( regular ) files under / tmp
Find all hidden directories starting from the current directory
Find all hidden files
Find all hidden files in the current directory
Find all hidden files starting from the directory given as variable $ FOLDER
Find all hidden files under / tmp
Find all hidden regular files starting from the current directory
Find all hidden regular files under / tmp and below
Find all httpd.conf files in entire file system
Find all image.pdf files under . / polkadots
Find all image.pdf files / directories under . / polkadots
Find all image.pdf files / directories under . / polkadots with null character as the delimiter
Find all index . * files / directories under current directory
Find all instances of first column with unique rest of line , and output a count for each first column that found in unique lines .
Find all l files in the &apos; foo &apos; folder but ones with name like &apos; * Music * &apos; to the &apos; bar &apos; folder .
Find all leaf directories that include only one occurrence of &quot; modules &quot;
Find all level 1 subdirectories of the current directory
Find all lines matching &quot; $ USER &quot; in &quot; file &quot; and number the output
Find all links pointing to / path / to / foo.txt
Find all links to path / to / file
Find all mysong.ogg files / directories under your home directory
Find all of jzb &apos; s files
Find all of the character devices on the system
Find all or single file called FindCommandExamples.txt under / directory of owner root
Find all or single file called tecmint.txt under the / directory of owner root
Find all orm * files / directories under current directory
Find all orm . * files / directories under current directory
Find all pdf files excluding * _ signed.pdf files under / some / dir with null character as the delimiter
Find all pdf files under / dir / containing / unsigned with null character as the delimiter
Find all php files in a directory
Find all php files in the current directory
Find all php files that belong to user &apos; takuya &apos; and have been modified in the last 1 day
Find all php files under current directory
Find all php files whose name is tecmint.php in a current working directory
Find all php files whose name is tecmint.php in the current directory
Find all python files ( .py files ) in $ topdir directory tree and search for &apos; Makefile &apos; in all these folders and display all distinct folders having &apos; Makefile &apos;
Find all python files under current directory tree , save the list to &apos; output.txt &apos; and search for &apos; something &apos; in those files
Find all read only files in / home directory
Find all read-only files
Find all readme.txt files / directories under your home directory
Find all regular * .css files
Find all regular .abc files under and below / the / path and rename them prefixing their names with &quot; version _ 1 &quot;
Find all regular .html files in the / var / www directory tree
Find all regular .mp3 files larger than 10M and delete them
Find all regular files 1 level down the $ dir directory
Find all regular files in / usr / bin accessed more than 20 days ago
Find all regular files in / usr / bin modified less than within the last 10 days
Find all regular files in and below the home directory that have been modified in the last 90 minutes
Find all regular files in current directory and / home / www directory
Find all regular files in minimum 1 level down the $ dir directory
Find all regular files in the &quot; $ dir &quot; directory
Find all regular files in the &quot; aaa &quot; directory
Find all regular files in the / path / to / base / dir tree
Find all regular files in the current director and set their permissions to &apos; 644 &apos; .
Find all regular files in the current directory and its subdirectories .
Find all regular files in the current directory and search them for &quot; example &quot;
Find all regular files in the current directory tree and count them
Find all regular files in the current directory tree and count them
Find all regular files in the current directory tree and print a command to move them to the current directory
Find all regular files in the current directory tree and search them for &quot; example &quot;
Find all regular files in the current directory tree ignoring GIT and SVN directories
Find all regular files in the current directory tree ignoring directory . / source / script
Find all regular files in the current directory tree last modified between 1 and 3 days ago and list them using find &apos; s -ls option
Find all regular files in the current directory tree last modified between 1 and 3 days ago and list them using format &apos; % TY % p \ n &apos;
Find all regular files in the current directory tree last modified between 1 and 3 days ago and list them using format &apos; % Tc % p \ n &apos;
Find all regular files in the current directory tree last modified between 1 and 3 days ago and list them using format &apos; % Tm % p \ n &apos;
Find all regular files in the current directory tree that are not readable by all
Find all regular files in the current directory tree that are not readable by anyone
Find all regular files in the current directory tree that do not contain a whitespace
Find all regular files in the current directory tree that have been modified within the last 10 minutes
Find all regular files in the current directory tree that match pattern &apos; btree * .c &apos;
Find all regular files in the current directory tree whose names end with &quot; .DS _ Store &quot; and delete them
Find all regular files in the current directory tree , except GIT files
Find all regular files in the entire filesystem that belong to the group &apos; users &apos;
Find all regular files in the home directory tree that were modified in the last 24 hours
Find all regular files in the the user &apos; s home / mail directory and search for the word &quot; Linux &quot; .
Find all regular files matching the name pattern &apos; * . ? htm * &apos; under &apos; / srv / www &apos; and &apos; / var / html &apos; directory tree
Find all regular files named &apos; Chapter1 &apos; under current directory tree
Find all regular files named &apos; Waldo &apos; under &apos; Books &apos; directory tree that is located in user &apos; s home directory
Find all regular files named &apos; Waldo &apos; under ~ / Books directory tree
Find all regular files named &apos; whatever &apos; under current directory tree excluding all paths that contain any hidden directory
Find all regular files named postgis-2.0.0 under current directory
Find all regular files named postgis-2.0.0 under your home directory
Find all regular files newer than &apos; / tmp / $ $ &apos; ( where $ $ expands to current process id ) under &apos; / tmefndr / oravl01 &apos; directory tree
Find all regular files on the system whose names are &apos; myfile &apos;
Find all regular files on the system whose size is greater than 20000k
Find all regular files or symlinks in the entire file system
Find all regular files recursively in the current directory
Find all regular files residing in the current directory tree and search them for string &quot; / bin / ksh &quot;
Find all regular files starting from / that have permissions 777
Find all regular files starting from level 3 of directory tree ~ / container and move them one level up
Find all regular files starting from level 3 of directory tree ~ / container and move them one level up
Find all regular files starting from level 3 of directory tree ~ / container and move them to the current directory
Find all regular files starting from level 3 of directory tree ~ / container and move them to the current directory &apos; s parent
Find all regular files starting from the current directory
Find all regular files that contain &apos; linux &apos; ( case insensitive ) in their names under &apos; / root &apos; directory tree
Find all regular files that reside in the current directory tree and were last modified 1 day ago
Find all regular files that reside in the current directory tree and were last modified at least 1 day ago
Find all regular files that reside in the current directory tree and were last modified more than 1 day ago
Find all regular files that reside in the current directory tree and were last modified more than 2 days ago
Find all regular files that reside in the current directory tree and were last modified more than 3 days ago
Find all regular files that reside in the current directory tree and were last modified more than 4 days ago
Find all regular files that reside in the current directory tree and were last modified more than 5 days ago
Find all regular files that reside in the current directory tree and were last modified more than 7 days ago
Find all regular files that start with stat
Find all regular files that were modified $ FTIME days ago under current directory tree
Find all regular files that were modified more than 60 days ago under &apos; / path-to-directory &apos; directory tree , sort them according to timestamp and print the filenames preceded with the timestamps
Find all regular files undee &apos; / usr / bin &apos; directoryt tree that are less than 50 bytes in size
Find all regular files under $ somedir directory and print each of their paths after a string literal &apos; Found unexpected file &apos;
Find all regular files under $ DIR directory tree whose paths match the regex &quot; . * \ . $ { TYPES _ RE } &quot; where $ { TYPES _ RE } expands as a variable
Find all regular files under $ DIR directory tree with &quot; . $ TYPE &quot; extension ( case insensitive ) where $ TYPE expands in the current shell
Find all regular files under $ DIR / tmp / daily / , sort them in reverse numerical order and copy the first two files to $ DIR / tmp / weekly /
Find all regular files under $ DIRECTORY _ TO _ PROCESS matching the case insensitive regex &quot; . * \ . $ FILES _ TO _ PROCES &quot; where $ FILES _ TO _ PROCES is a variable and not matching the name pattern &apos; $ find _ excludes &apos; where $ find _ excludes is another variable , then print the files with null delimiter instead of newline
Find all regular files under $ FILES _ PATH directory tree and save the output to &apos; FILES &apos; variable
Find all regular files under $ FOLDER directory tree that start with &apos; &quot; . &apos; and end with &apos; &quot; &apos; in their names and were modified in less than $ RETENTION days excluding the files whose contents match one of the regular expressions defined per line in file $ SKIP _ FILE
Find all regular files under $ d directory tree and change their permissions to 777
Find all regular files under $ dir
Find all regular files under $ dir directory tree that are bigger than $ size MB in size and print them along with their sizes in decreasing order of size
Find all regular files under $ { S } directory
Find all regular files under $ { path } without following symlinks
Find all regular files under &apos; / directory _ path &apos; directory tree that have been modified within the last day
Find all regular files under &apos; / home / john &apos; directory tree that start with &apos; landof &apos; in their names
Find all regular files under &apos; / home / john / scripts &apos; directory tree excluding files with &apos; .ksh &apos; extension
Find all regular files under &apos; / usr / bin &apos; directory tree that are less than 50 bytes in size
Find all regular files under . / Desktop directory
Find all regular files under and below / home / admin / public _ html / , and change their permissions to 644
Find all regular files under and below / home / user / demo /
Find all regular files under and below / root that match pattern &quot; * linux * &quot; , case insensitive
Find all regular files under and below / somepath that have extensions PDF , TIF , TIFF , PNG , JPG , JPEG , BMP , PCX , or DCX , ignoring the case and excluding &quot; * _ ocr.pdf &quot; files
Find all regular files under current directory
Find all regular files under current directory
Find all regular files under current directory non-recursively that have execute permission set for all ( user , group and other )
Find all regular files under current directory tree containing &apos; some text &apos; in their names without descending into hidden directories and excluding hidden files
Find all regular files under current directory tree excluding files from &apos; . / dir1 &apos; ( except &apos; . / dir1 / subdir1 / ) and &apos; . / dir2 &apos; directories
Find all regular files under current directory tree that contain &apos; some text &apos; in their names excluding paths that contain dot files / directories
Find all regular files under current directory tree that match the regex &apos; tgt / etc / * &apos; in their paths
Find all regular files under current directory tree that were accessed $ FTIME days ago
Find all regular files under current directory tree whose names end with &apos; cache &apos; or &apos; xml &apos; or &apos; html &apos;
Find all regular files under current directory tree without descending into &apos; . / dir1 &apos; ( except &apos; . / dir1 / subdir1 * &apos; pattern ) and &apos; . / dir2 &apos; directories
Find all regular files under test directory
Find all regular files whose names contain &quot; @ &quot; in directory tree ~ / $ folder
Find all regular files whose names contain &quot; @ &quot; in directory tree ~ / $ folder
Find all regular files whose names contain a case insensitive pattern composed of space separated positional arguments and display a long listing of them
Find all regular files whose names do not end in &quot; * .html &quot;
Find all regular files with &apos; .jpg &apos; ( case insensitive ) extension , sort them by name , print the output and also save the list to file &apos; file _ list.txt &apos;
Find all regular files with &apos; .r &apos; and &apos; .c &apos; in their names under current directory tree
Find all regular files with &apos; .txt &apos; extension excluding &apos; README.txt &apos; files under current directory tree
Find all regular files with &apos; .what _ to _ find &apos; extension in the entire filesystem and move them to directory &apos; / new _ directory &apos;
Find all regular files with 400 permission under &apos; / data &apos; directory tree
Find all regular files with 755 permission under current directory tree and change their permission to 644
Find all regular files with name pattern $ filename under $ fileloc directory tree
Find all regular files with permissions 777 under and below / home / user / demo /
Find all regular files with permissions 777 under and below / home / user / demo / , and change their permissions to 755
Find all regular files with space in their names under current directory and rename them by replacing all spaces with _
Find all regular files with the group read permission set in your home directory and below and output detailed information about each file .
Find all regular non-hidden files in the current directory and its subdirectories
Find all sample * files / directories under current directory and print &apos; program { } -out { } &apos; where { } will expand to file paths
Find all sample * _ 1.txt files / directories under current directory
Find all socket files in the current directory and its sub-directories .
Find all strings matching pattern &quot; ^ $ { KEY } $ { DELIMITER } &quot; in $ FILE file and print rest of string after $ DELIMITER
Find all subdirectories of the current directory except hidden ones
Find all symbolic links containg &apos; vim &apos; in their names under &apos; / usr / bin &apos; directory tree
Find all symbolic links containing &apos; javaplugin &apos; in their names under &apos; / usr &apos; directory tree
Find all symbolic links containing &apos; vim &apos; in their names uder &apos; / usr / bin &apos; directory tree
Find all symbolic links in the current directory tree
Find all symbolic links starting from the current directory and list them
Find all symbolic links under &apos; / proc / $ pid / fd &apos; directory tree with name pattern &apos; $ save _ path / sess _ \ * &apos; and update their timestamps
Find all symbolic links under &apos; / some / directory &apos; driectory tree
Find all symbolic links under &apos; / some / directory &apos; tree
Find all symbolic links under current directory that are not hard links
Find all symbolic links under the current folder and below
Find all symlinks in the / myfiles directory tree
Find all symlinks under / myfiles directory
Find all symlinks under current directory
Find all symlinks under current directory
Find all syslog directories under / var / log directory
Find all target files outside the current working directory with symbolic links in the current working directory
Find all test.txt files / directories under current directory
Find all test1.h files under current directory
Find all test2.h files under current directory
Find all text files in the home directory
Find all the * .c files at any level of directory Programming under any &apos; src &apos; directory
Find all the * .pl files ( Perl files ) beneath the current directory .
Find all the * .txt files in the current directory older than 48 hours
Find all the .c files in the current directory tree that contain the string &quot; stdlib.h &apos;
Find all the .c files in the current directory tree that contain the string &quot; stdlib.h &apos;
Find all the .mp3 files in the music folder and pass to the ls command , -print0 is required if any filenames contain whitespace
Find all the .mp3 files in the music folder recursively and pass them to the ls command
Find all the SGID bit files under current directory whose permissions set to 644 and show a few lines of output from the beginning
Find all the SGID bit files whose permissions set to 644
Find all the SGID bit files whose permissions set to 644 in the file system
Find all the SGID files in the current directory tree
Find all the SUID files in the current directory tree
Find all the Sticky Bit files whose permission are 551
Find all the Sticky Bit set files in entire file system whose permission are 551
Find all the Sticky Bit set files whose permission are 551
Find all the Sticky Bit set files whose permission are 551 in the file system
Find all the files called FindCommandExamples.txt of owner root
Find all the files in entire file system which are accessed 50 days back
Find all the files in entire file system which are modified 50 days back .
Find all the files in entire file system which are modified more than 50 days back and less than 100 days and show a few lines of output from the beginning
Find all the files in entire file system which are greater than 50MB and less than 100MB .
Find all the files in entire file system with the extensions txt or doc , as well as any file larger than 5MB in size
Find all the files in file system which are accessed 50 days back
Find all the files in file system which are accessed in last 1 hour
Find all the files in file system which are changed in last 1 hour
Find all the files in file system which are greater than 50MB and less than 100MB
Find all the files in file system which are modified 50 days back
Find all the files in file system which are modified in last 1 hour
Find all the files in file system which are modified more than 50 days back and less than 100 days
Find all the files in the current directory
Find all the files in the current directory recursively whose permissions are 644 and show the first 10 of them
Find all the files in the current directory recursively whose permissions are 777
Find all the files in the current directory recursively whose permissions are not 777
Find all the files in the current directory with &quot; linkin park &quot; in their names
Find all the files named &apos; vimrc &apos; anywhere on the system
Find all the files on the system that have been accessed within the last hour
Find all the files on the system that have been changed within the last hour
Find all the files on the system that have been modified within the last hour
Find all the files recursively in directories or files taken from the glob pattern / tmp / test / * that have been modified today
Find all the files that are not named &quot; MyCProgram.c &quot; in the current directory only and without regards to case .
Find all the files that end with the extension &quot; .java &quot; in the current directoy tree
Find all the files that were modified exactly one day ago
Find all the files that were modified more than one day ago
Find all the files that were modified within the last day
Find all the files under / etc directory which are larger than 100k
Find all the files under / home directory with name tecmint.txt
Find all the files under / tmp directory and show a few lines of output from the beginning
Find all the files which are accessed 50 days back
Find all the files which are accessed in last 1 hour
Find all the files which are accessed in last 1 hour in entire file system
Find all the files which are changed in last 1 hour
Find all the files which are changed in last 1 hour in entire file system and show a few lines of output from the beginning
Find all the files which are greater than 50MB and less than 100MB
Find all the files which are greater than 50MB but less than 100MB in size
Find all the files which are modified 50 days back
Find all the files which are modified in last 1 hour
Find all the files which are modified in last 1 hour in entire file system
Find all the files which are modified more than 50 days back and less than 100 days
Find all the files which were accessed 50 days ago
Find all the files which were modified 50 days ago
Find all the files which were modified more than 50 days but less than 100 days ago
Find all the files whose name is FindCommandExamples.txt and contains both capital and small letters in / directory
Find all the files whose name is FindCommandExamples.txt in the current working directory
Find all the files whose name is tecmint.txt
Find all the files whose name is tecmint.txt and contains both capital and small letters in / home directory
Find all the files whose name is tecmint.txt in the current directory
Find all the files whose permissions are 777
Find all the files whose permissions are 777 in the current directory
Find all the files whose permissions are 777 under current directory
Find all the files without permission 777
Find all the files without permission 777 in the file system
Find all the files without permission 777 under current directory and show a few lines of output from the beginning
Find all the files / directories in &apos; / path / to / files &apos; directory tree which have not been modified in the last 2 hours
Find all the files / directories in the current directory tree which have been modified between 2014-08-25 and 2014-08-26
Find all the files / directories in the entire filesystem that do not belong to user &apos; wnj &apos; and are not newer than the file / directory &apos; ttt &apos; by modification time
Find all the files / directories under &apos; / usr / local &apos; directory tree which have been modified within the last day
Find all the files / directories under &apos; / var / adm &apos; directory tree that have not been modified in the last 3 days
Find all the files / directories under user &apos; s home directory that do not belong to the user $ USER
Find all the files / directories with &apos; .conf &apos; extension under &apos; / etc &apos; directory non-recursively and display the last ten files
Find all the regular files in $ DIR directory tree which have not been modified in the last 15 days and delete them
Find all the regular files in $ DIR directory tree which have not been modified in the last 450 days and delete them
Find all the regular files under $ DIR directory tree which have been modified before the file $ a excluding the file $ a and delete them
Find all the regular files under $ DIR directory tree which have been modified before the file $ a excluding the file $ a and delete them
Find all the regular files under &apos; / your / dir &apos; directory tree which are bigger than 5 MB and display them in decreasing order of their sizes
Find all the regular files under current directory tree that have not been modified in the last 31 days and delete them
Find all the regular files under directory &apos; dir1 &apos; that are at least N levels deep
Find all the regular files with &apos; .tgz &apos; and &apos; .gz &apos; extensions and delete the oldest file under &apos; / home / backups &apos; directory tree
Find all thumb.png files in the temps / directory tree
Find all top-level files in the current folder but ones with name like &apos; * Music * &apos; to the &apos; dest / &apos; folder .
Find all xml files under current directory
Find all xml files under current directory and archive them to .bz2 archives
Find all xx * files / directories excluding &apos; xxx &apos; files / directories under your home directory
Find all your text files
Find an inode and remove
Find and compress all .pl files in the current directory tree
Find and copy all log files in the current directory tree to / tmp / log-files
Find and delete all .zip files in the current directory tree
Find and delete all core files in the user &apos; s home directory and below .
Find and delete all hard links in the / home directory to file1
Find and delete all hard links in the / home directory to file1
Find and delete all hard links in the / home directory tree to file1
Find and delete the file with inode number 1316256
Find and list all files on your current directory and show a few lines of output from the beginning
Find and list all regular files
Find and print all PDF files in the current directory and its sub-directories except for any found in the . / pdfs directory .
Find and print detailed information about all regular files in your home directory and below that have only the group permission set
Find and print the full pathname of all PDF files in the current directory and its sub-directories .
Find and print the names of all files found in the current directory and all of its sub-directories
Find and print the names of all files found in the current directory and all of its sub-directories .
Find and print the names of all files found in the current directory and all of its sub-directories .
Find and remove all .core files
Find and remove all .core files
Find and remove all .mp3 regular files under the current directory and below
Find and remove all .txt regular files under the current directory and below
Find and remove multiple * .mp3 files
Find and remove multiple * .txt files
Find and remove multiple files such as * .mp3 or * .txt
Find and remove multiple files such as * .mp3 or * .txt under current directory
Find and remove multiple files such as * .mp3 or * .txt under current directory
Find and remove the .rhosts file in the / home directory tree
Find and remove the file with inode number 782263 in the current directory tree
Find and remove zero bytes files from user &apos; s directories .
Find and show all files in the current directory tree that are exactly 2000 kB
Find and show all files in the current directory tree that are smaller than 500 kB
Find and show all files on the system that are larger than 900 MB
Find and the 5 largest regular files in the Downloads folder of tecmint &apos; s home directory and output the file sizes in bytes .
Find and uncompress all files in the current directory tree ending in &quot; .csv.gz &quot;
Find and uncompress all files in the current directory tree ending in &quot; .csv.gz &quot;
Find any file that has &quot; disc &quot; somewhere in its name in the current directory and all of its sub-directories .
Find any files in the current directory and its sub-directories that were last accessed more than 7 days and are larger than 20480 blocks in size .
Find any files in the current directory and its sub-directories that were last accessed more than 7 days or are larger than 20480 blocks in size .
Find any hidden regular files in the current directory and its sub-directories that were modified after .cshrc was last modified .
Find apparent size of a target directory
Find blabla * files under current directory
Find broken links
Find broken links using the file command on each symlinks in the system and searching for the keword &apos; broken &apos; with grep
Find broken symlinks
Find broken symlinks in current directory
Find broken symlinks in current directory
Find command will display top 10 Big files from current directory .
Find command will display top 5 small files from curent directory . most probably you will get ZERO bytes files .
Find command will list of all files &amp; directories from current directory , before listing echo command will display &apos; List of files &amp; Directory &apos;
Find deb packages in the current directory recursively
Find directories and regular files containing &apos; blah &apos; in their names modified less than 2 days ago , case insensitive
Find directories in the current directory ( no sub-directories ) and print them appended with a string literal &apos; Directory : &apos;
Find directories in the current directory recursively that are not &quot; executable &quot; by all
Find directories in the current directory tree that were modified within the last 24 hours and move them to / path / to / target-dir
Find directories in the current directory tree that were modified within the last 24 hours and move them to / path / to / target-dir
Find directories in the current directory tree that were modified within the last 24 hours and move them to / path / to / target-dir
Find directories in the current directory tree that were modified within the last 24 hours and move them to / path / to / target-dir
Find directories in the current directory tree whose names are 33 characters in length
Find directories modified in last 7 days
Find directories modified within the last 7 days
Find directories named &apos; work &apos; under &apos; / usr / ports / &apos; directory tree and remove them
Find directories named &apos; build &apos;
Find directories named &apos; doc &apos; in / usr and below
Find directories named &apos; doc &apos; in / usr and below
Find directories owned by user news with permissions 775
Find directories starting from / TBD that were modified more than 1 day ago
Find directories that are directly under $ workspace _ ts directory ( no-subdirectories ) and were modified less than 30 days ago
Find directories that are directly under $ workspace _ ts directory ( no-subdirectories ) and were modified more than 30 days ago
Find directories that are directly under / home / user / workspace directory ( no-subdirectories ) and were modified more than 30 days ago and print a message saying that the directory wasn &apos; t modified during last 30 days
Find directories that are directly under / home / user / workspace directory ( no-subdirectories ) and were modified more than 30 days ago and print a message saying that the directory wasn &apos; t modified during last 30 days
Find directories that have &quot; 755 &quot; permissions and modify them to have &quot; 700 &quot; permissions
Find directories under maximum 1 level down the directory $ dir with 100 permission that are owned by the user $ username
Find directories with permissions 777 and change them to 755 recursively
Find directory &quot; / some / dir &quot; if it is empty
Find directory &quot; your / dir &quot; if it is empty
Find directory &quot; your / dir &quot; if it is empty
Find disk usage of all files inside the directory
Find disk used space of only the target directory
Find empty files and directories
Find empty files in the test directory
Find empty files under test directory
Find empty files / directories under test directory
Find empty regular files in / dir and its subdirectories
Find every JavaScript file in the wordpress directory
Find every JavaScript file in the wordpress directory tree
Find every file under the directory / home owned by the user joe .
Find every file under the directory / usr ending in &quot; .stat &quot; .
Find every file under the directory / var / spool that was modified more than 60 days ago .
Find every file / directory under / var / spool that was modified more than 60 days ago .
Find every file / directory under the directory / home owned by the user joe
Find every vim undo file in the current directory tree
Find every vim undo file under current directory
Find executable files
Find file &apos; Chapter1 &apos; on the system
Find file &apos; foo.bar &apos; and delete it
Find file &apos; hosts &apos;
Find file names * blast * in specfied directory
Find file names * blast * in specfied directory , case insensitive
Find file size in bytes
Find file1 in the level 1 directories and above
Find files accessed at 23 : 59
Find files and directories in the / tmp / tree that contain spaces in their names and replace those spaces with underscores
Find files and directories modified in last 24 hours
Find files and directories modified in last 7 days
Find files and directories modified within the last 7 days
Find files and directories newer than CompareFile under current directory
Find files and directories owned by xuser1 and change their ownership to user2
Find files and directories that are at least seven levels of nesting in the directory / usr / src
Find files and directories that are at least seven levels of nesting in the directory / usr / src excluding CVS directory
Find files and directories whose owner is daniel
Find files and directories with group id 1003
Find files and directories with the name RAID but don &apos; t traverse a particular directory
Find files associated with an inode
Find files associated with an inode
Find files belonging to the given owner
Find files bigger than 20 megabytes in the home directory tree
Find files by type
Find files changed in the last 1 day
Find files containing &apos; blah &apos; in their names modified less than 2 days ago , case insensitive
Find files containing string &quot; # ! / bin / ksh &quot; and append their names and matching strings to / tmp / allfiles
Find files containing string &quot; # ! / bin / ksh &quot; and append their names and matching strings to / tmp / allfiles
Find files created in the last minute ; works on Mac OS X
Find files ending in &quot; * macs &quot;
Find files ending in &quot; config &quot;
Find files ending in &quot; f &quot;
Find files in $ DIR _ TO _ CLEAN that are older than $ DAYS _ TO _ SAVE days and print them with null character appended to their paths
Find files in / var / tmp / stuff and below that have not been modified in over 90 days
Find files in and below the current directory whose names begin with &quot; not &quot; and remove one of them
Find files in entire file system that are writable by group or other
Find files in entire file system that are writable by group or other
Find files in entire file system with at least 644 permissions
Find files in the &quot; dir &quot; directory tree whose names are 33 characters in length
Find files in the / home / user directory tree changed exactly 10 minutes ago
Find files in the / travelphotos that are greater than 200k in size but do not have &quot; 2015 &quot; anywhere in the file name
Find files in the / var / log folder which were modified an hour or more ago
Find files in the / var / log folder which were modified between 60 minutes and 10 minutes ago
Find files in the / var / log folder which were modified modified 2 weeks ago
Find files in the current directory and below that are 2000 kB in size
Find files in the current directory and below that are less than 500 kB in size
Find files in the current directory and below that are newer than / bin / sh
Find files in the current directory and its sub-directories that begin with &apos; f &apos; .
Find files in the current directory excluding CVS , SVN , GIT repository files and all binary files .
Find files in the current directory recursively that are not readable by all
Find files in the current directory tree of size between 700k and 1000k
Find files in the current directory tree that are named &quot; some _ pattern &quot; and move them to directory &quot; target _ location &quot;
Find files in the current directory tree that have one link
Find files in the current directory tree that match pattern &quot; * sub * &quot;
Find files in the current directory tree that were accessed within the last 60 minutes
Find files in the current directory tree which are larger than 5 MB in size
Find files in the current directory tree which have permissions rwx for user and rw for group and others
Find files in the current directory tree whose content was changed within the last 60 minutes
Find files in the current directory tree whose names are of the form &quot; cxx _ data.txt &quot; where xx is a number from 30 to 70
Find files in the current directory tree whose names are of the form &quot; cxx _ data.txt &quot; where xx is a number from 40 to 70
Find files in the current directory tree whose names begin with &quot; file &quot; and whose size is 0 , and remove them
Find files in the current directory tree whose names begin with &quot; file &quot; and whose size is 0 , and remove them
Find files in the current directory tree whose names match regular expression &quot; ^ . * ~ $ \ &#124; ^ . * # $ &quot;
Find files in the current directory tree whose pathnames contain &quot; sub &quot;
Find files in the current directory tree whose permissions are 775
Find files in the current directory tree whose size is 24000 bytes
Find files in the current directory tree whose size is greater than 24000 bytes
Find files in the current directory tree whose size is less than 24000 bytes
Find files in the current directory tree whose status was changed within the last 60 minutes
Find files in the current directory whose names begin with &quot; file &quot; and remove them
Find files in two different directories ( esofthub and esoft ) having the &quot; test &quot; string and list them
Find files larger than 100MB in / var / www and exclude files with / download / in their path from the output
Find files larger than 50k
Find files matching &apos; .ssh * &apos; and append their anmes to file &apos; ssh-stuff &apos;
Find files matching an exact set of permissions
Find files matching pattern $ 2 in the $ 1 directory recursively and search them for text $ 3 , where $ 1 , $ 2 , $ 3 are the command line arguments to the Bash script
Find files matching pattern $ 2 in the $ 1 directory recursively and search them for text $ 3 , where $ 1 , $ 2 , $ 3 are the command line arguments to the Bash script
Find files matching pattern $ 2 in the $ 1 directory recursively and search them for text $ 3 , where $ 1 , $ 2 , $ 3 are the command line arguments to the Bash script
Find files matching regular expression regexp
Find files matching the pattern &quot; . / sr * sc &quot; in their paths under current directory
Find files modified at least 5 days in the future
Find files modified between 6 and 9 minutes ago
Find files modified in last 7 days
Find files modified in the last 5 minutes starting from the current directory
Find files modified more recently than file poop
Find files modified within the past 24 hours
Find files named &quot; blabla &quot; in the current directory tree and print the number of lines in each of them
Find files named &quot; needle &quot; ignoring the case
Find files named &quot; ppp.conf &quot; in the / etc directory tree
Find files named &apos; core &apos; in or below the directory / tmp and delete them
Find files named &apos; core &apos; in or below the directory / tmp and delete them
Find files named &apos; fileName.txt &apos; under &apos; / path / to / folder &apos; directory tree ignoring &apos; ignored _ directory &apos;
Find files named core in or below the directory / tmp and delete them , processing filenames in such a way that file or directory names containing single or double quotes , spaces or newlines are correctly handled .
Find files named core in or below the directory / tmp and delete them . Note that this will work incorrectly if there are any filenames containing newlines , single or double quotes , or spaces .
Find files named tecmint.txt of owner root in the entire file system
Find files newer than &apos; tmpfile &apos; starting from the current directory
Find files newer than main.css in ~ / src
Find files newer than start.txt but not newer than end.txt
Find files not matching the patterns &apos; Image * -70x70 * &apos; and &apos; Image * -100x100 * &apos; in their names under Folder1 and copy them to Folder2
Find files not matching the posix extended regex &apos; . + \ - &#91; 0-9 &#93; { 2,4 } x &#91; 0-9 &#93; { 2,4 } \ .jpg &apos; in their paths under Folder1 and copy them to Folder2
Find files on the system accessed during the last 24 hours but not within the last hour
Find files on the system bigger than 50MB but smaller than 100MB
Find files on the system created during the last 50 days
Find files on the system modified more than 90 minutes ago
Find files on the system whose names begin with either x or X
Find files owned by no group
Find files owned by no user
Find files owned by nonexistent groups
Find files owned by nonexistent users
Find files owned by the &quot; shadow &quot; group
Find files patching &quot; pattern &quot;
Find files readable only by the group
Find files recursively with extension &quot; ext &quot;
Find files smaller than 40 blocks skipping directories on other file systems
Find files starting with the word &quot; file &quot; in the current directory tree
Find files starting with the word &quot; file &quot; in the current directory tree , ignoring the case
Find files that are 0 bytes in size in the current directory and remove them
Find files that are 0 bytes in size in the current directory tree and remove them
Find files that are 100k
Find files that are empty
Find files that are orphaned
Find files that do not have a listing in the / etc / passwd or / etc / group in the file system
Find files that don &apos; t have 644 permissions
Find files that have a modification time of a day ago
Find files that have been modified within the last month and copy them somewhere
Find files that match the executable bit for owner or group
Find files that were accessed in less than a day ago
Find files that were modified 7 days ago and archive them
Find files that were modified in less than 1 minute ago
Find files that were modified less than 7 days ago and archive them
Find files that were modified more than 7 days ago and archive them
Find files that were modified more than 7 days ago but less than 14 days ago and archive them
Find files that were modified second last week and archive them
Find files under &apos; / travelphotos &apos; directory tree which are bigger than 200KB and do not have 2015 in their names
Find files under / etc / apache-perl that are modified more recently than / etc / apache-perl / httpd.conf
Find files under / some / path that are not executable
Find files under / some / path that are not executable by the owner
Find files under / tmp that are larger than 10KB and smaller than 20KB
Find files under / usr that are newer than the first file &apos; FirstFile &apos;
Find files under / usr that are the same age or older than file &apos; FirstFile &apos;
Find files under &#91; directory &#93; that match &apos; pattern _ to _ INCLUDE &apos; in their names without descending into directories that match &apos; pattern _ to _ exclude &apos; and &apos; another _ pattern _ to _ exclude &apos; , then search for &apos; pattern &apos; in those files
Find files under current directory that are newer than $ date _ time in regards of modification time
Find files under current directory that are not newer than $ date _ time in regards of modification time
Find files under current directory that contains the string &apos; / bin / ksh &apos;
Find files under current directory that contains the string &apos; / bin / ksh &apos;
Find files under current directory without descending into other file systems and append a null character at the end of each paths
Find files using file-name
Find files which are more than 2 days old under $ { userdir } / $ { i } / incoming directory
Find files which are more than 2 days old under $ { userdir } / $ { i } / incoming directory and remove them
Find files which were changed in the past 1 hour
Find files whose content was modified at least 1 minute ago
Find files whose data was modified within the given days of the month
Find files whose name starts with &quot; MyFile &quot; , ignoring the case
Find files whose pathnames end in &quot; config &quot;
Find files whose pathnames end in &quot; f &quot;
Find files with 002 permission in entire file system
Find files with 002 permission in entire file system and print them with the string &apos; has world write permissions &apos; appended after every path
Find files with 002 permission in entire file system and print them with the string &apos; has world write permissions &apos; printed at last
Find files with 002 permission in entire file system with the null character as the delimiter
Find files with 777 permissions and change them to 755
Find files with SGID ( 2000 ) and SUID ( 4000 ) permssions set in the file system
Find files with a question mark in their names
Find files with extension .conf in the / etc directory tree
Find files with group write permission and remove the permission
Find files with group write permission and remove the permission
Find files with inode number 199053
Find files with name &apos; aaa.txt &apos; under the current directory
Find files with size more than 200557600B and which are more than 2 days old under $ { userdir } / $ { i } / incoming directory
Find files with size more than 200557600B and which are more than 2 days old under $ { userdir } / $ { i } / incoming directory and remove them
Find files with the extension .conf in the / etc directory
Find files / directories containing &apos; test &apos; in their names and display the directory contents before the directories themselves
Find files / directories greater than 10MB in your home directory
Find files / directories in entire file system newer than myfile
Find files / directories in entire file system that had their meta information changed more than 3 days ago
Find files / directories in entire file system that have been modified in the last minute
Find files / directories in entire file system that were accessed in less than a day ago
Find files / directories in entire file system that were modified a day ago
Find files / directories in entire file system with at least 644 permission
Find files / directories modified within the last day under / etc
Find files / directories modified within the last hour under current directory
Find files / directories named &apos; TEST _ 3 &apos; under current directory tree
Find files / directories named &apos; aaa.txt &apos; under current directory tree
Find files / directories named &apos; articles.jpg &apos; under current directory tree and change their permission to 644
Find files / directories named &apos; document &apos; in &apos; ext2 &apos; partitions in entire filesystem
Find files / directories named &apos; document &apos; in the entire filesystem and in the directory tree &apos; / usr &apos; even if it &apos; s in a different partition without traversing to other devices / partitions
Find files / directories named &apos; file.txt &apos; in the path &apos; / usr / lib / important / &apos;
Find files / directories named &apos; file.txt &apos; that belong to user &apos; tutonics &apos; in the entire filesystem
Find files / directories named &apos; filename &apos; in the entire filesystem
Find files / directories named &apos; foo &apos; in the current partition of the root filesystem
Find files / directories named &apos; foo &apos; under current directory tree without descending into directories named &apos; foo &apos;
Find files / directories named &apos; foo.bar &apos; in the root filesystem partition
Find files / directories named &apos; foo.bar &apos; under &apos; . / dir1 &apos; and &apos; . / dir2 &apos; directory tree
Find files / directories named &apos; photo.jpg &apos; in the entire filesystem
Find files / directories named &apos; sar &apos; under &apos; / usr &apos; , &apos; / bin &apos; , &apos; / sbin &apos; and &apos; / opt &apos; directory tree
Find files / directories named &apos; sar &apos; under directory trees whose path starts with &apos; / u &apos; or &apos; / b &apos; or &apos; / s &apos; or &apos; / o &apos;
Find files / directories named &apos; somename.txt &apos; under current directory tree
Find files / directories named blah ( case insensitive ) under current directory
Find files / directories named blah under current directory
Find files / directories named &lt; filetype &gt; under current directory which were accessed less than 5 days ago
Find files / directories not changed in two weeks under / dev / shm
Find files / directories that are bigger than 10000 KB in size uder &apos; / usr / local &apos; directory tree
Find files / directories that are newer than &apos; foo.txt &apos; under current directory tree
Find files / directories that are owned by the user &apos; syslog &apos; in entire filesystem
Find files / directories that belong to user &apos; ian &apos; under &apos; / tmp &apos; directory tree
Find files / directories that does not have write permssion for group
Find files / directories that does not have write permssion for group
Find files / directories that does not have write permssion for group and others
Find files / directories that does not have write permssion for group or others
Find files / directories that have no owner or group under / path
Find files / directories that have not been modified in the last one day in directories or files taken from the glob pattern &apos; / tmp / test / * &apos;
Find files / directories that is under group &apos; root &apos; or have no group and set their group to &apos; apache &apos;
Find files / directories that isn &apos; t owned by the user &apos; apache &apos; under / var / www
Find files / directories under &apos; / dir &apos; directory tree that are newer than &apos; yesterday.ref &apos; file and older than &apos; today.ref &apos; file by modification time
Find files / directories under &apos; / usr &apos; directory tree that are newer than / tmp / stamp $ $ by modification time
Find files / directories under / tmp smaller than 100 bytes
Find files / directories under / users / tom that matches both the pattern &quot; * .pl &quot; and &quot; * .pm &quot;
Find files / directories under current directory and force xargs to print them one by one
Find files / directories under current directory and print them
Find files / directories under current directory and print them as null terminated strings .
Find files / directories under current directory excluding the path . / src / emacs
Find files / directories under current directory matching the posix-egrep type regex &quot; . + \ . ( c &#124; cpp &#124; h ) $ &quot; in their names
Find files / directories under current directory that are modified exactly one hour ago
Find files / directories under current directory that matches &apos; . / projects / insanewebproject &apos; in their paths
Find files / directories under current directory that matches &apos; . / projects / insanewebproject &apos; in their paths and show the first one
Find files / directories under current directory that matches &apos; projects / insanewebproject &apos; in their paths
Find files / directories under current directory that matches the regex / path / to / something &#91; ^ / &#93; * $ in their paths
Find files / directories under current directory without descending into it
Find files / directories under current directory without descending into it
Find files / directories with exactly read , write and execute permission for all ( owner , group and others ) under / path
Find files / directories with exactly read , write and execute permission for all ( owner , group and others ) under / path
Find files / directories with inode number &apos; 212042 &apos; under &apos; / var &apos; directory tree without traversing other devices / partitions
Find files / directories writable by group and others under the / path directory
Find files / directories writable by group and others under the / path directory
Find files / directories writable by group and others under the / path directory
Find files / directories writable by group or others under the / path directory
Find find symlinks pointing to / mnt / oldname * in the entire file system
Find grub.conf files in entire file system
Find hard links to the same file lpi104-6 / file1 in the directory tree lpi104-6
Find how many directories are in a path ( counts current directory )
Find how many files are in a path
Find image files and move them to the pictures directory
Find in the current direcoty whose suffix is .tmp , find will not serach recursively limit of find is 2 subdirectory .
Find largest file in linux with find command
Find links to any file that happens to be named &apos; foo.txt &apos;
Find links to any file that happens to be named &apos; foo.txt &apos;
Find links to file path / to / foo.txt
Find movies over a gigabyte in size
Find mysong.ogg anywhere under the home directory
Find not-executable files under / home / www
Find one file or directory in the current directory whose name matches the pattern given as a variable $ a
Find only directories
Find only files under / etc with the size of 100k-150k
Find out all * .sh owned by user vivek
Find out all files owned by user vivek
Find out all hard links in the / home directory to file1
Find out if there are any files on the system owned by user &apos; account &apos;
Find recursively all Emacs backup files in the current directory and remove them
Find recursively all Python files in the current directory and search them for the word &quot; import &apos;
Find recursively all Python files in the current directory tree and count the number of lines in them
Find recursively all empty directories in the current directory
Find recursively all empty directories in the current directory
Find recursively all files changed within the last 5 minutes starting from directory b
Find recursively all files in / path that end in &quot; txt &quot; and copy them to / tmp /
Find recursively all files in the &quot; &quot; . directory tree whose names end with &quot; .class &quot; and delete them
Find recursively all files matching pattern &apos; file ? ? &apos; in the xargstest / directory and print a sorted list of them
Find recursively all files under current directory tree that contain a colon in the filename
Find recursively all files whose names begin with &quot; foo &quot;
Find recursively all files whose names ends with &quot; foo &quot;
Find recursively all regular .txt files in the current directory tree except README.txt
Find recursively all regular files changed within the last 5 minutes starting from directory b
Find recursively all regular files in directory tree b that were changed within the last 5 minutes and copy them to directory c
Find recursively all regular files in the current directory skipping hidden files and directories matching pattern &apos; . ? * &apos;
Find recursively all regular files in the current directory tree ending in .dll or .exe
Find recursively all regular files in the current directory tree not ending in .dll or .exe
Find recursively all regular files in the current directory whose names contain &quot; &quot; .
Find recursively regular files in the current directory tree
Find recursively regular files in the current directory tree
Find recursively regular files in the directory given as the script &apos; s command line argument # 1 , skipping hidden files and directories
Find recursively the files named &quot; file &quot; in the current directory ignoring all .git directories
Find recursively the files named &quot; file &quot; in the current directory ignoring the .git subdirectory
Find recursively the latest modified .zip file in the current directory
Find recursively the latest modified file in the current directory
Find recursively the latest modified file in the current directory
Find recursively the latest modified file in the current directory
Find recursively the latest modified file in the current directory
Find recursively the latest modified file in the current directory
Find regular files in the current directory that are writable by at least somebody
Find regular files in the current directory that are writable by their owner
Find regular files in the current directory tree that are called FindCommandExamples.txt and remove them
Find regular files in the current directory tree that have all executable bits set
Find regular files in the current directory tree that have any executable bits set
Find regular files in the current directory tree that have executable bits set for the user and group but not for the other
Find regular files in the current directory tree that have the user executable bit set
Find regular files larger than 500MB in the current directory tree
Find regular files matching pattern &quot; * oraenv * &quot; and excecute the &quot; file &quot; utility for each of them
Find regular files modified within the last 7 days
Find regular files modified within the last ten minutes under / etc
Find regular files named &quot; expression -and expression &quot; under and below / dir / to / search /
Find regular files named &quot; expression -or expression &quot; under and below / dir / to / search /
Find regular files named &quot; regex &quot; under and below / dir / to / search /
Find regular files named &apos; findme.txt &apos; under &apos; / usr &apos; and &apos; / home &apos; directory tree
Find regular files named core under / tmp and delete them
Find regular files readable by the world
Find regular files that are bigger than 500 MB in size under current directoryt tree
Find regular files that are larger than 2GB
Find regular files that have SUID or SGID set
Find regular files under &apos; / somefolder &apos; directory tree satisfying the options / conditions / operations provided in $ { ARGS &#91; @ &#93; } array with find command
Find regular files under / that contain &quot; stringtofind &quot;
Find regular files under and below / path that match pattern &quot; ? ? ? - ? ? ? _ &#91; a-zA-Z &#93; * _ &#91; 0-9 &#93; * _ * . ? ? ? &quot;
Find regular files which have 644 permission
Find regular files whose names end in .JPG
Find regular files with permissions less than 111
Find regular non-hidden files containing &apos; some text &apos; in their names
Find regular non-hidden files containing &apos; some text &apos; in their names with hidden directories optimization
Find root &apos; s Ruby files accessed in the last two minutes
Find root &apos; s files in the current directory tree
Find smallest file in the current directory with find commad
Find string &quot; STRING &quot; in files residing in the current directory tree , case insensitive
Find strings with &apos; Features &apos; in / var / run / dmesg.boot &apos; file
Find suspicious PHP files
Find symbolic links in / usr / lib and / usr / lib64 to files whose pathnames contain &quot; libstdc + + &quot;
Find symbolic links in / usr / sbin and / usr / bin to files whose pathnames end in &quot; * / systemctl &quot;
Find symbolic links in directory / etc and below
Find symbolic links in lpi104-6 and research / lpi104-6 to files whose pathnames end in &quot; file1 &quot;
Find symbolic links under / etc /
Find symlinks in the current directory tree
Find symlinks under and below the &quot; test &quot; directory and replace them with the content of the linked files
Find text files modified less than 5 days ago
Find text in whole directory tree
Find the &quot; * .foo &quot; files in the current directory tree that are not under &quot; .snapshot &quot; directories
Find the &quot; param1 &quot; string in regular files under and below / var
Find the &quot; param1 &quot; string in regular files under and below / var
Find the .groovy files outside the &quot; . / target &quot; directory path
Find the 5 largest regular files in the Downloads folder of tecmint &apos; s home directory .
Find the 5 largest regular files in the current directory and below .
Find the core files and remove them
Find the current directory and all its subdirectories .
Find the directories whose names contain &quot; New Parts &quot; at level 3 of the current directory tree and create symlinks to them in / cygdrive / c / Views
Find the directories whose pathnames contain &quot; New Parts &quot; at level 3 of the current directory tree and create symlinks to them in / cygdrive / c / Views
Find the directory with least modification time under current directory
Find the empty directories and files under current directory
Find the file in the current directory tree with inode number $ inum and delete it
Find the file whose inode number is 1316256
Find the file with inode number 211028 in the current dirrectory tree and move it to newname.dir
Find the files in the current directory that match pattern &apos; * .ISOLATE. * .txt &apos; and move them to folder . / ISOLATE
Find the files in the current directory that match pattern &apos; * .ISOLATE.quantifier.txt &apos; and move them to folder ISOLATE /
Find the files in the current directory that match pattern &apos; * .JUKEBOX. * .txt &apos; and move them to folder . / JUKEBOX
Find the files that have &quot; 644 &quot; permissions and modify them to have &quot; 664 &quot; permissions
Find the first file / directory in ... directory and quit
Find the first file / directory named &apos; something &apos; under current directory and quit
Find the first file / directory under $ DIR which matches the $ TMP _ DIR in its path
Find the first file / directory under current directory and quit
Find the largest 10 directories under current directory
Find the largest 10 files ( regular files ) under current directory
Find the largest files in a particular location
Find the largest files in a particular location
Find the most recently changed files in a subtree
Find the passwd file in the current directory and one level down
Find the passwd file under root and one level down .
Find the passwd file under root and two levels down
Find the passwd file under the root directory and two levels down
Find the password file between sub-directory level 2 and 4
Find the password file between sub-directory level 2 and 4 .
Find the process id of mysql
Find the string &apos; joomla &apos; case insensitively in all the php and html files under current directory tree and display the matched lines along with the file names and line numbers
Find the top 25 files according to their size in the current directory and its subdirectories
Find the top 5 big files
Find the top 5 biggest files
Find the top 5 small files
Find the total size of * .jpg files within the current directory tree
Find the total size of * .jpg files within the directory tree . / photos / john _ doe
Find things changed today
Find user daniel &apos; s files of type jpeg
Find user daniel &apos; s files of type jpeg without &apos; autumn &apos; in the name
Find users whose names begin with &quot; ab &quot; and ends with &quot; 1 &quot;
Find users whose names begin with &quot; ab &quot; or whose terminal from which they are logged in ends with &quot; 1 &quot;
Find which ruby files under current directory contain the string &apos; jump &apos;
Find with combine multiple search criterias , in this command serach files that begin with abc in there name and dont have .py extension .
Find writable files in the current directory tree
Find writable regular files in the current directory
Find writable regular files in the current directory
Find writable regular files omitting those that contain sites / default / files in their names
Find x * files / directories under / tmp directory whose status was changed less than 1 day ago
Find x * files / directories under / tmp directory whose status was changed less than 1 day ago and move them to ~ / play
Find x * files / directories under / tmp directory whose status was changed less than 1 day ago and move them to ~ / play
Find x * files / directories under / tmp directory whose status was changed less than 1 day ago and move them to ~ / play
Finds $ a pattern in a $ b string , and returns exit code 0 if found , suppressing any visible output .
Finds PIDs of all running processes , gets executable binary of each process , and prints containing folder of each binary .
Finds all files having text &quot; texthere &quot; recursively in a current folder , and precedes found string with string number in file and file name .
Finds all files in $ LOCATION , prints file names , overwrite files with random content $ TIMES times , and finally remove them .
Finds all files in a &apos; / path &apos; folder and prints long listing for them .
Finds all files like &quot; mylog * .log &quot; newer than $ 2 and archives them with bzip2 .
Finds all folders that contain &apos; ssh &apos; file and have &apos; bin &apos; in path .
Finds all folders that contain &apos; ssh &apos; file and have &apos; bin &apos; in path .
Finds all php processes running in system .
Finds all strings with parent folder of path &apos; $ path &apos; in &apos; file &apos; , and saves result in &apos; x &apos; variable .
Finds all the log * files in / myDir recursively that are more than 7 days older , skipping already created .bz2 archives and compresses them .
Finds all the log * files recursively in / myDir that are more than 7 days older and compresses them .
Finds all users logged in via ssh .
Finds every folder with file &apos; header.php &apos; within , and copies file &apos; topscripts.php &apos; to every one of them .
Finds file &apos; Subscription.java &apos; and changes to containing folder .
Finds file &apos; Subscription.java &apos; and changes to containing folder .
Finds files in &apos; directory &apos; folder with the same name and location but different content than files in &apos; directory.original &apos; folder and prints location of such files .
Finds files in &apos; directory &apos; folder with the same name and location but different content than files in &apos; directory.original &apos; folder and saves location of such files to &apos; directories &apos; variable .
Finds if environment variable like &apos; DUALCASE &apos; exists in environment .
Finds matched text in defined path recursively , but not follows symlinks .
Finds more than 5 days old files in two directories and compresses them .
Finds name of a current month and saves it in a &apos; month &apos; variable .
Finds only parts of echoed string that match with regex &apos; run-parts ( - { 1,2 } \ S + ) * \ S + &apos; , and saves them in $ match variable , each matched part on a separate line .
Finds out what groups a current user has .
Finds out what groups a given user has .
Finds pattern text ignoring letter case in all .js files , prints matched strings and name of file with that strings .
Finds recursion-related options of a &apos; grep &apos; utility .
Finds recursively all files having extension .c , .h in &apos; / path / &apos; that contain &apos; pattern &apos; , and prints matched strings with string number and file name .
Finds recursively all files in &apos; / path / &apos; excluding folders dir1 , dir2 and all like * .dst , that contain &apos; pattern &apos; , and prints matched strings with string number and file name .
Finds recursively all files in &apos; / path / &apos; that contain &apos; pattern &apos; , and prints matched strings with string number and file name .
Finds recursively all files not having extension .o in &apos; / path / &apos; that contain &apos; pattern &apos; , and prints matched strings with string number and file name .
Finds recursively all folders in current folder which path not contains &quot; NameToExclude &quot; string and removes only ones without files and another folders within .
Finds recursively all folders named &apos; a &apos; within current folder and removes only ones without files and another folders within .
Finds recursively all folders named &apos; a &apos; within current folder and removes only ones without files and another folders within .
Finds recursively and following symlinks from root folder all files that contain &quot; text-to-find-here &quot; and prints files names .
Finds shell options like &apos; checkjobs &apos; with their state .
Finds shell options with &apos; login &apos; in name .
Finds string with text &quot; string to be searched &quot; in any cased files like &quot; * .cs &quot; recursively in a current folder .
Finds strings having text &quot; searched-string &quot; in all files recursively in a current folder .
Finds strings like &quot; texthere &quot; recursively in all files of a current folder regarding all symlinks .
Finds strings with &apos; TEXT &apos; from * .log files and prints all but first field from any space-delimited string .
Finds strings with dot-separated sequence of numbers , and prints part of that sequence before the first dot .
Finds strings with dot-separated sequence of numbers , and prints part of that sequence before the second and third dot .
Finds strings with dot-separated sequence of numbers , and prints part of that sequence between the first and second dot .
Finds strings with text &quot; searched-string &quot; recursively in all files of current folder and prints names of files with matched strings .
Finds strings with text &quot; searched-string &quot; recursively in all files of current folder .
Finds strings with text &quot; text &quot; in all files named &quot; string to be searched &quot; recursively in a current folder .
Finds the folder where temporary files would be written to , and save path to it in a &apos; TMPDIR &apos; variable .
Finds the folder where temporary files would be written to .
Findx all files having text &quot; texthere &quot; recursively in a current folder , and prints only file names with matching strings .
Fix files to default permissions 644
Fix files to default permissions 755
Fix permissions for a group of files with given extension
Follow symbolic links for the full path of &quot; lshw &quot;
Follows symbolic link $ BASH _ SOURCE , and prints path to its target .
For each item in array &quot; alpha &quot; , display the basename , that is the part following the last slash , or the whole item if no slash is present .
For each line in file2 whose first field appears as a first field in file1 , print an output line constructed following the specified -o format .
For each line of colon-separated information in files &apos; empsal &apos; and &apos; empname &apos; whose first field matches in both files , output : first field of empname , second field of empname , fourth field of empname , and third field of empsal .
For each line of the sorted output of both file1 and file2 , print lines whose first field of file2 does not appear as first field of file1 .
For each line which has a common first field in file1.csv and file2.txt , output the first 4 fields of file1.csv
For each line which has a common first field in file1.csv and file2.txt , output the first 4 fields of file1.csv - both files must be sorted first .
For each line which has a common first field in test.1 and test.2 , output the first 2 fields of test.2 and the field 2 and 3 of test.1
For each line whose first field is the same in file1 and file2 , output the common first field followed by all other fields in file1 and file2 .
Force create a hard link in &quot; / usr / local / bin &quot; to &quot; findpdftext &quot;
Force create a hard link named &quot; non _ secret _ file.txt &quot; to &quot; secret _ file.txt &quot;
Force create a hard link named &apos; / home / user / Musik / youtube converted / aesthesys ~ I Am Free , That Is Why I &apos; &quot; &apos; &quot; &apos; m Lost .. mp3 &apos; with target &apos; / home / user / Musik / mix-2012-13 / aesthesys ~ I Am Free , That Is Why I &apos; &quot; &apos; &quot; &apos; m Lost .. mp3 &apos;
Force create a symbolc link named &quot; / usr / local / bin / fpdf &quot; to &quot; / usr / local / bin / findpdftext &quot;
Force create a symbolc link named &quot; / usr / local / bin / fpt &quot; to &quot; / usr / local / bin / findpdftext &quot;
Force create a symbolc link named &quot; new _ dir &quot; to &quot; / other / dir &quot; without dereferencing &quot; new _ dir &quot;
Force create a symbolc link named &quot; softlink _ name &quot; to &quot; source _ file _ or _ directory _ name &quot; without dereferencing &quot; softlink _ name &quot;
Force create a symbolic link as a file named &quot; / usr / lib / jvm / default-java &quot; to &quot; $ default _ java _ dir &quot; with verbose output
Force create a symbolic link in &quot; / usr / bin / &quot; for each file matching &quot; $ javaUsrLib / jdk1 * / bin / * &quot;
Force create a symbolic link named &quot; $ * &quot; to the canonical absolute path of &quot; $ 1 &quot;
Force create a symbolic link named &quot; $ lines &quot; to &quot; $ c &quot; without dereferencing &quot; $ lines &quot;
Force create a symbolic link named &quot; $ pdir &quot; to &quot; $ pluginpath &quot; with verbose output
Force create a symbolic link named &quot; currentDir &quot; to &quot; newDir &quot; without dereferencing &quot; currentDir &quot;
Force create a symbolic link named &quot; id _ rsa &quot; to &quot; $ keyname &quot;
Force create a symbolic link named &quot; mylink &quot; with target &quot; / apps / myapps / new / link / target &quot;
Force create a symbolic link to &quot; $ f &quot; in &quot; ~ / my-existing-links / &quot; with name the basename of &quot; $ f &quot;
Force create a symbolic link without dereferencing named &quot; $ SYMLINK _ PATH &quot; to &quot; $ lastModified &quot;
Force create a symbolic link without dereferencing named &quot; alpha &quot; to &quot; alpha _ 2 &quot;
Force create a symbolic link without dereferencing named &quot; mylink &quot; to &quot; dir2 &quot;
Force decompress all files into &apos; / etc &apos;
Force delete all files in the current folder
Force delete all files in the temp folder which have not been accesses in the last 240 hours
Force delete all jpg files in current directory which are less than 50KB and do not search in the sub directories
Force delete all jpg files in current directory which are less than 50KB and do not search in the sub directories
Force delete all the regular / normal files in the current folder and do not search in the sub folders
Force delete all the regular / normal files in the current folder and do not search in the sub folders ( print0 is used to handle files which have newlines in their names or files with the name only as spaces )
Force pseudo tty allocation on connection to &quot; somehost &quot; and execute &quot; ~ / bashplay / f &quot;
Force remove all files and folders in the physical current working directory
Force the group stickiness for directories under / var / www
Forcefully delete all files in the current directory
Forcefully delete all files in the current directory that begin with spam-
Forcefully remove files * ~ important-file
Forcibly create symbolic links in target directory &quot; ~ / staging &quot; for all files located in directory &quot; ~ / mirror &quot;
Forcibly create symlink named as &apos; / cygdrive / c / Users / Mic / mypics &apos; to the directory &apos; / cygdrive / c / Users / Mic / Desktop / PENDING - Pics / &apos;
Forcibly removes $ { temp } file .
Forcibly removes all files like &apos; * .bak &apos; and &apos; * ~ &apos;
Forcibly removes files &apos; / tmp / stored _ exception &apos; , &apos; / tmp / stored _ exception _ line &apos; , &apos; / tmp / stored _ exception _ source &apos;
Format &quot; $ line &quot; as a table
Format &quot; file.txt &quot; as space separated columns 28 characters in width
Format and print the time string @ 133986838 according to the default time format
Format bash array &quot; $ { arr } &quot; in columns
Format file &quot; list-of-entries.txt &quot; as new-line separated columns
Format file &quot; list-of-entries.txt &quot; with no column delimiter
Format output of &quot; mount &quot; as a table
Format output of &apos; file &apos; content to columns with wide not less than 80 pixels
Format space separated fields in &quot; filename &quot; as a table
Format tab delimited file &quot; list-of-entries.txt &quot; as a table
Format tab separated fields in &quot; FILE &quot; as a table
Format the contents of &quot; &#91; file &#93; &quot; in a neat table
Format the contents of &quot; &#91; file &#93; &quot; in a neat table
Format the date represented by time string @ 1267619929 according to default format and print it
Format the time string $ timestamp according to the format string &quot; % Y- % m- % d % H : % M : % S &quot; and save the output to variable &apos; CDATE &apos;
Format the time string @ 133986838 according to the default time format and save it to variable &apos; VARIABLENAME &apos;
Format time string @ $ TIMESTAMP according to default time format
Format time string @ 1267619929 according to default time format
Forward all connections to client localhost 3307 via the SSH tunnel to gateway and then connect to host 1.2.3.4 to port 3306
Forward all connections to client localhost 3309 via the SSH tunnel to &quot; mysql _ access _ server &quot; and then connect to host &quot; sqlmaster.example.com &quot; on port 3306
Forward port 12345 bound on &apos; localhost &apos; to port 12345 on &apos; otherHost &apos; as user &apos; otherUser &apos;
Forward port 16186 on hello.com to 8888 on localhost using private key &quot; privatekeystuffdis88s8dsf8h8hsd8fh8d &quot; for login
Forward port 3307 on localhost to port 3306 on 1.2.3.4 via &apos; user @ gateway &apos; on port 24222
Forward port 8000 bound on localhost to port 22 in &apos; clusternode &apos; via &apos; user @ bridge &apos;
From a script , output the name of the script itself , without containing directories - from a shell , output the name of the shell .
From a script , output the name of the script itself , without containing directories .
From the list of words ( one per line ) in list1.txt , display the number of occurrences of this word in list2.txt and sort the results from highest to lowest count .
Generate a random 32 ASCII character password from / dev / urandom and save it to variable &apos; pass &apos;
Generate the Spanish alphabet and number each character
Generate the obsolete 29 character Spanish alphabet and number each character
Generates a randomly sorted list of numbers from 1 to 10 .
Generates default-formatted file name of temporary file in a / dev / mapper folder , and saves path to it in a variable &apos; MAPPER &apos; .
Generates name for temporary file with 6-letter suffix , and saves path to that new file in &apos; fn &apos; variable .
Generates temporary file in a &apos; / dev / shm &apos; folder and saves path to it in a &apos; tFile &apos; variable .
Generates temporary file name with full path by template &apos; fifo.XXXXXX &apos; and saves it to variable &apos; fifo _ name &apos;
Get A record for domain $ domain
Get A record for domain $ domain
Get a detailed list of all files on the system larger than 10MB
Get a detailed listing of all symbolic links in / usr / bin starting with &quot; z &quot;
Get a list of all files in the / home directory tree and their coressponding inode numbers
Get a list of all hidden files from the current directory tree
Get a list of directories owned by group ID 100
Get a list of files and directories in the current directory tree
Get a recursive file list of directory $ dir
Get a recursive file list of directory $ dir
Get a two column list of all regular .rb files residing in the current directory tree
Get current directory name without full path , ie. the part after the last /
Get directory listing of URL $ 1 and save them to variable &apos; header &apos; by deleting &apos; \ r &apos; characters
Get domain &quot; $ domain &quot; IP address
Get domain name from dig reverse lookup .
Get domain name of $ ip and save it to the variable &apos; reverse &apos;
Get domain name with &apos; google &apos; from address $ 1
Get domain name with &apos; google &apos; from address $ IP
Get domain names from file &apos; 1.txt &apos; and request TXT DNS record for each one
Get files that last had their meta information changed more than 3 days ago
Get from file &apos; File1.txt &apos; strings starting with &apos; Q &apos; , extract only part of them following after &apos; = &apos; sign , and print which ones are not found in &apos; File2.txt &apos;
Get only the latest version of the file &apos; filename &apos; under current directory
Get second line from text contained in variable $ data .
Get the actual find exectuable path
Get the base filename from variable &apos; path &apos; , similar to using the basename command .
Get the directory with least access time under current directory
Get the disk space used by all * .txt ( case insensitive ) files / directories under current directory
Get the disk space used by all * .txt ( case insensitive ) files / directories under folder 1 and folder2
Get the grandparent directory of each found &apos; pattern &apos; file in $ SEARCH _ PATH
Get the list of regular files in the current directory
Get the number of &quot; use &quot; statements in all PHP files , ordered
Get the number of regular files in the directory given as the bash script argument $ 1
Get the path of running Apache
Get the sizes ( and total size ) of all files under dir1 directory
Get the sizes ( and total size ) of all files under dir2 directory
Get the total size of all files under dir1 directory
Gets IP address of $ { NET _ IF } network interface .
Gets IP address of &apos; eth0 &apos; network interface .
Gets IP address of &apos; eth0 &apos; network interface .
Gets IP address of first listed network interface in system .
Gets IP addresses of all active network interfaces and saves to &apos; ip &apos; variable .
Gets IP addresses of all active network interfaces .
Gets IP addresses of all active network interfaces .
Gets MAC address of &apos; eth0 &apos; network interface .
Gets MAC address of &apos; eth0 &apos; network interface .
Gets MAC address of &apos; eth0 &apos; network interface .
Gets MAC address of en0 network interface .
Gets MAC address of en0 network interface .
Gets MAC address of eth0 network interface .
Gets MAC address of eth0 network interface .
Gets MAC address of eth0 network interface .
Gets MAC address of p2p0 network interface .
Gets a current job back to the foreground .
Gets a job with defined number back to the foreground .
Gets all IP addresses from host network configuration and prints first one .
Gets back to the foreground a job with number 2 .
Gets domain name from dig reverse lookup .
Gets domain name from dig reverse lookup .
Gets list of IP addresses of all network interfaces .
Gets state of shell option &apos; dotglob &apos; and saves it in &apos; rest _ cmd &apos; variable .
Gets string with IP4 address of en0 network interface .
Gets string with MAC addess of network interface eth0 .
Gets string with MAC address of eth0 network interface .
Gets the groups these users belong to .
Getting a detailed list of files / dirs
Give a long listing of all the * .pl files ( Perl files ) beneath the current directory .
Give all directories in the / path / to / base / dir tree read and execute privileges
Give all directories in the / path / to / base / dir tree read and execute privileges
Give all files in the / path / to / base / dir tree read privileges
Give all files in the / path / to / base / dir tree read privileges
Give rwx permissions to the user and group of the directory named &quot; files &quot; leaving others without any privileges
Give the location of every hard link to file1 in the / home directory tree
Gives the primary group of $ USERNAME .
Go back to last directory .
Go into the first directory whose name contains 1670
Go into the first directory whose name contains 1670
Go into the first directory whose name contains 1670
Go to / the / project / root / / data , which in most filesystems / operating systems will be the same as cd / the / project / root / data
Go to / tmp directory .
Go to directory / cygdrive / c / Program Files ( x86 ) using backslashes to escape special characters
Go to directory / cygdrive / c / Program Files ( x86 ) using quotes to escape special characters
Go to directory / cygdrive / c / Program Files ( x86 ) / $ dollarsign using single quotes to escape special characters , including dollar signs
Go to directory / some / where / long
Go to directory named &quot; ~ &quot; ( not home directory )
Go to directory named &quot; ~ &quot; ( not home directory )
Go to directory pointed by last element of array &quot; dirs &quot; in bash version 4.2
Go to first directory specified in PATH which contains the command &apos; oracle &apos;
Go to first directory specified in PATH which contains the command &apos; oracle &apos;
Go to last directory with name starting with a number , useful for timestamped directory names .
Go to previous working directory .
Grab the output of &quot; basename &quot; ( in this case &quot; stuff &quot; ) and echo it to stdout , which basename would do by default anyway .
Grab the output of &quot; basename &quot; ( the last slash-separated section of variable &quot; filename &quot; ) and echo it to stdout , which basename would do by default anyway .
Gunzip all files matching &quot; file * .gz &quot; and answer &quot; n &quot; to any prompts
Handles shell option &apos; nullglob &apos; according with flags stored in $ NGV variable .
Hash hostnames in user &apos; s known hosts file .
Hunting down files with at least one banana
Identify CMS version / releases accross all your Drupal websites
Identify CMS version / releases accross all your Drupal websites
Identify CMS version / releases accross all your PHPBB installations
Identify CMS version / releases accross all your PHPBB installations
Identify CMS version / releases accross all your Wordpress websites
Identify CMS version / releases accross all your Wordpress websites
Identify files that do not have a listing in the / etc / passwd or / etc / group file
If variable &quot; c &quot; is a syntactically correct cron job , erase user &apos; s cron jobs and add &quot; c &quot; as the only cron job for user .
Infinitely ping every host listed in &quot; file-of-ips &quot; with at most 50 processes at once
Infinitely print &quot; no &quot; to the screen
Infinitely write &quot; 1 &quot; with line numbers to the console and &quot; / tmp / to &quot;
Instantly kill all processes whose command is &apos; myprocess &apos; .
Interactively create a symbolic link in the current directory for &quot; $ SCRIPT _ DIR / $ FILE &quot;
Interpret backslash sequences and delete whitespace characters in variable $ FOO and save the result to variable &apos; FOO _ NO _ WHITESPACE &apos;
Invoke a trusted X11 forwarding SSH connection with server &quot; 192.168.0.14 &quot; on port 222 as user &quot; phil &quot;
Invoke a trusted X11 forwarding SSH connection with the server $ ssh _ server as user $ ssh _ user
Isolate first comma-delimited field of each line in &quot; file &quot; , discard consecutive duplicates , and search &quot; file &quot; for first matching occurrence of that field .
Join colon-separated information in 3 files LN.txt PH.txt and AD.txt in a cascade fashion : join LN.txt and PH.txt , then join the result with AD.txt
Join columns in &quot; file1 &quot; and &quot; file2 &quot; if their first field matches and format the output as a table
Join comma-separated data in file1 and file2 , including extra non-matching information in both files .
Join comma-separated information in 4 files
Join comma-separated information in 4 files - files must be sorted .
Join data in &quot; file1 &quot; sorted by the second word of each line with data in &quot; file2 &quot; sorted by the first word of each line , keeping the same order as it is found in &quot; file1 &quot;
Join data in file1 containing one number per line with data in file2 containing a number and other information per line , keeping the same order as it is found in file1 .
Join lines in file &quot; A &quot; with lines in file &quot; B &quot; if the lines share a common first word
Join lines in file &quot; aa &quot; with lines in file &quot; bb &quot; if the lines share a common first word
Join lines in file &quot; aa &quot; with lines in file &quot; bb &quot; if the lines share a common first word and sort the result numerically
Join lines of &apos; file &apos; : fields 1 and 2 of lines discarding adjascent lines ignoring first 3 fields , with fields 3 to end of line discarding adjascent lines ignoring 3 last fields .
Join strings from &apos; file1 &apos; and &apos; file2 &apos; , discarding excessive strings from largest file , and printing first , second and third space-separated field from first file , and third and fourth field from second file as a join result
Just find directories and skip file names
Keep only the last two hyphen-separated sections of &quot; abc-def-ghi-jkl &quot;
Keep the last 3 components ( directories ) of $ path
Keep the last 4 ASCII characters ( bytes ) of a string .
Kill all processes which were executed in background by the current shell .
Kill the processes of user &apos; myuser &apos; that have been working more than 7 days
Limits the number of results from grep to 2 lines
List &quot; .java &quot; files that have the same contents
List &quot; .java &quot; files that have the same filename and contents
List ( in long list format with inode number ) the file under the current directory that has the oldest modification time
List * .pl directories in the current directory tree
List * .txt files residing in the current directory tree
List * .txt files under current directory that have &apos; mystring &apos; in their name
List .c files in the current directory
List .conf files residing in the / etc / nginx / directory tree
List .html files in the current directory tree that contain string &quot; base \ -maps &quot; but do NOT contain string &quot; base \ -maps \ -bot &quot;
List .log files from the current directory tree
List absolute path of files in the current directory
List all * .bak files in the current directory tree
List all * .c files in entire file system
List all * .c , * .h and * .cpp files under current directory
List all * .gif files found in the current directory tree
List all * .jar files / directories under / usr , / home and / tmp directory
List all * .java files / directories under / home / bluher with their full paths
List all * .jpg files / directories in entire file system
List all * .ogg files under your home directory along with their size
List all * .png files / directories under / home / kibab directory
List all * .txt files under current directory that contains the regex &apos; pattern &apos;
List all * .txt files under current directory that match &apos; foo = &apos; in their file information
List all * .txt files / directories under / etc
List all * .txt files / directories under / etc
List all * .txt files / directories under / etc
List all * .txt files / directories under / etc
List all * .txt files / directories under / etc
List all * .txt files / directories under current directory
List all * .txt files / directories under current directory
List all * .txt files / directories under current directory
List all * .txt files / directories under current directory
List all * .txt files / directories under current directory ensuring white space safety
List all * fink * files / directories in entire file system
List all * fink * files / directories under current directory
List all * jsp and * java regular files found in the current directory tree
List all .c and .h files in the current directory tree that contain &quot; thing &quot;
List all .c and .h files in the current directory tree that contain &quot; thing &quot;
List all .gif files in the current directory tree
List all .jpg files in the home directory tree
List all .jpg files in the home directory tree
List all .jpg files in the home directory tree in a fast way
List all .svn files / directories under current directory
List all .svn files / directories under current directory
List all IPV4 addresses found in all files under / etc directory
List all SGID and SUID files in entire file system
List all available commands in Mac OS
List all broken symlinks excluding cyclic links under current directory
List all cron jobs for current user .
List all cron jobs which contain &quot; word &quot; .
List all cron jobs which contain &quot; word &quot; .
List all directories and subdirectories
List all directories found in the current directory and below .
List all directories in maximum 1 level down the current directory
List all directories in maximum 1 level down the current directory
List all directories of the $ topdir directory tree that contain a Makefile and at least one .py file
List all directories under current directory
List all empty files in the current directory tree
List all empty files in the current directory tree
List all empty files under the current directory
List all environment variables ( name and value ) whose name either equals HOME or PATH , or starts with GO
List all environment variables ( name and value ) whose name either equals PATH or starts with GOBIN
List all environment variables ( name and value ) whose name starts with GOROOT
List all environment variables containing &apos; USER &apos; in their name or value that would result in running a command with &apos; sudo env &apos; .
List all environment variables whose name starts with PATH , showing the name and value of each one .
List all file paths under the current directory with case insensitive name &quot; .note &quot; in reverse alphabetic order
List all files 2 levels deep in the current directory tree
List all files and directories ( including hidden ) in the current working directory in a long list format sorted by the oldest modification time
List all files and directories from the current directory tree
List all files and directories in long list format with a time style of &quot; long-iso &quot; and sort from oldest modifed to newest modified
List all files and directories in the / home directory tree whose names are &quot; Trash &quot;
List all files and directories residing in the current directory and below
List all files and directories residing in the current directory and below
List all files and folders in the current working directory
List all files and sub directories including hidden files in the current directory tree
List all files bigger than 10000 blocks
List all files except for those in directory SCCS
List all files from the current directory tree that were modified less than 60 minutes ago
List all files from the current directory tree that were modified less than 60 minutes ago
List all files from the current directory tree that were modified less than 60 minutes ago
List all files from the current directory tree that were modified less than 60 minutes ago , omitting &quot; &quot; .
List all files in / home / bozo / projects directory tree that were modified exactly one day ago
List all files in / home / bozo / projects directory tree that were modified exactly one day ago .
List all files in / home / bozo / projects directory tree that were modified within the last day
List all files in / home / bozo / projects directory tree that were modified within the last day .
List all files in / var / www and below that have changed in the last 10 minutes
List all files in a current folder , separating names with comma
List all files in a current folder , separating names with semicolon
List all files in a current folder , separating names with semicolon
List all files in current directory whose name or file type description contains the word &quot; ASCII &quot; .
List all files in entire file system owned by the user wnj and are newer than the file ttt
List all files in entire file system that are newer than the file $ newerthan and older than the file $ olderthan in regards of modification time
List all files in entire file system that are not newer than the ttt file and do not belong to the user wnj
List all files in entire file system that belong to the user wnj or modified later than the ttt file
List all files in maximum 2 levels down the current directory
List all files in maximum 2 levels down the current directory
List all files in the &quot; test &quot; directory tree except those with &apos; / invalid _ dir / &apos; in the pathnames
List all files in the / hometest directory tree whose names are &quot; Trash &quot; , and their sizes
List all files in the / myfiles directory tree
List all files in the / var directory tree whose size is greater than 10 megabytes
List all files in the / var directory tree whose size is greater than 10 megabytes
List all files in the current directory tree except for those in the . / src / emacs directory
List all files in the current directory tree including those that may contain spaces in their names
List all files in the current directory tree invoking xargs only once
List all files in the current directory tree larger than 1000 kb
List all files in the current directory tree that were last modified between &quot; mar 03 , 2010 09 : 00 &quot; and &quot; mar 11 , 2010 &quot;
List all files in the current directory tree that were last modified in March 2007
List all files in the current directory tree that were last modified more than 60 minutes ago
List all files in the current directory tree that were last modified on the 3rd of March , 2010 or later
List all files in the current directory tree that were last modified yesterday or later
List all files in the current directory tree that were modified 60 minutes ago
List all files in the current directory tree that were modified 60 minutes ago
List all files in the current directory tree that were modified 60 minutes ago
List all files in the current directory tree that were modified less than 60 minutes ago
List all files matching regular expression &apos; * foo * &apos; in a human-readable form
List all files named &quot; filename &quot; from the current directory tree , ignoring directory &quot; FOLDER1 &quot;
List all files that are between 10000 and 32000 bytes in size
List all files that have not been read in thirty days or more
List all files that matches both the case insensitive patterns * $ 1 * and * $ 2 * under / home / musicuser / Music / directory
List all files under and below the directory given as variable $ ARCH1
List all files under and below the directory given as variable $ FULFILLMENT
List all files under current directory
List all files under current directory matching the regex &apos; . * ( c &#124; h &#124; cpp ) $ &apos;
List all files under current directory matching the regex &apos; . * \ ( c \ &#124; h \ &#124; cpp \ ) &apos;
List all files under current directory matching the regex &apos; . * \ . \ ( c \ &#124; h \ &#124; cpp \ ) &apos;
List all files under current directory that are greater than 10MB in size
List all files under current directory with their sizes and paths
List all files under current directory with white space safety in their paths
List all files under the current working directory last modified less than a day ago
List all files under the current working directory tree
List all files under the current working directory with name &quot; .htaccess &quot;
List all files with name &quot; someFile &quot; and their modification time under the current directory sorted by oldest modified to newest modified
List all files with their modification time in entire file system that are newer than the file $ newerthan and older than the file $ olderthan in regards of modification time and sort them according to file modification time
List all files with their paths that have identical content .
List all files without descending into subdirectories
List all files / directories in entire file system
List all files / directories under $ dir _ name with size $ sizeFile and print them according to the format string &apos; % M % n % u % g % s % Tb % Td % Tk : % TM % p \ n &apos;
List all files / directories under / data1 / Marcel which are greater than 524288 bytes and were modified or accessed more than 1 year ago
List all files / directories under / data1 / Marcel with their file information which are greater than 524288 bytes and were modified or accessed more than 1 year ago
List all files / directories under / myfiles directory
List all files / directories under current directory
List all files / directories under current directory
List all files / directories under current directory
List all files / directories under current directory
List all files / directories under current directory by replacing all spaces with commas ( , )
List all files / directories under current directory ensuring white space safety
List all files / directories under current directory matching the posix-egrep type regex &quot; . + \ . ( c &#124; cpp &#124; h ) $ &quot; in their names
List all files / directories under current directory matching the posix-egrep type regex &quot; . + \ . ( c &#124; cpp &#124; h ) $ &quot; in their names
List all files / directories under current directory matching the posix-egrep type regex &quot; . + \ . ( c &#124; cpp &#124; h ) $ &quot; in their names excluding the files that contain &apos; generated &apos; or &apos; deploy &apos; in their paths
List all files / directories under current directory matching the posix-egrep type regex &quot; . + \ . ( c &#124; cpp &#124; h ) $ &quot; in their names excluding the paths * / generated / * and * / deploy / *
List all files / directories under current directory with &apos; FooBar &apos; in their names ensuring white space safety
List all files / directories under current directory with &apos; FooBar &apos; in their paths ensuring white space safety
List all files / directories under current directory with their inode numbers , disk space , permission , number of hard links , user name , group name , size , status change time in Y-m-d format and name filed , then write the outptut to / tmp / files.txt
List all files / directories with spaces in their names under ~ / Library directory
List all files / folders in current directory by separating them with spaces
List all hidden regular files from the current directory separating them with zeroes
List all leaf directories ( directories which don &apos; t contain any sub-directory ) under current directory
List all leaf directories of the current directory tree
List all mounted filesystems
List all nfs mounts
List all non-empty files under under current directory
List all non-hidden files in ~ / junk
List all of the subdirectories in the current directory with no trailing slash .
List all paths to files or directories under &quot; / data / &quot; that start with &quot; command- &quot; and end with &quot; -setup &quot; , sort the result by the version number specified between &quot; command- &quot; and &quot; -setup &quot; ( least to greatest )
List all processes with detailed information
List all regular file owned by root with permissions 4000
List all regular files from the current directory tree that were modified less than 60 days ago
List all regular files from the current directory tree that were modified less than 60 minutes ago
List all regular files from the current directory tree that were modified less than 60 minutes ago
List all regular files from the current directory tree that were modified less than 60 minutes ago
List all regular files from the current directory tree that were modified less than 60 minutes ago
List all regular files from the current directory tree that were modified less than 60 minutes ago
List all regular files in / var / www and below that have changed in the last 10 minutes
List all regular files in and below the home directory that have been modified in the last 90 minutes
List all regular files in and below the home directory that were modified more than 5 years ago
List all regular files in and below the home directory that were modified more than 5 years ago
List all regular files in entire file system
List all regular files in the current directory tree
List all regular files in the current directory tree
List all regular files in the current directory tree
List all regular files in the current directory tree modified within the last 24 hours
List all regular files in the current directory tree that were modified less than 60 minutes ago
List all regular files matching the name pattern &quot; $ 1 * &quot; ( where $ 1 is a positional parameter ) under &apos; / usr &apos; , &apos; / bin &apos; , &apos; / sbin &apos; and &apos; / opt &apos; directory tree
List all regular files modified more than 61 days
List all regular files residing in the current directory tree and containing string &quot; / bin / ksh &quot;
List all regular files residing in the current directory tree and containing string &quot; / bin / ksh &quot;
List all regular files under current directory ( not white space sage )
List all regular files under current directory ensuring white space safety
List all regular files under the current directory and below it
List all regular files under the current directory and below it
List all symlinks under current directory and search for targetfile.txt in this list
List all the .c files under the current directory and below in a 3 column format
List all the .c files under the current directory and below in a 3 column format
List all the emptry files in thecurrent directory only .
List all the file links
List all unique parent directories of .class files found under the current directory
List all variables ( names and values ) whose name or value contains X .
List all your files including everything in sub-directories
List all zero-length files
List all ~ / bin / FilesDvorak / . * ( non-recursive ) and ~ / .PAST _ RC _ files / . * ( recursive ) files / directories and take common entries between these two lists
List an empty environment ( prints nothing )
List and remove all regular files named &quot; core &quot; that are larger than 500KB
List and remove all regular files named &quot; core &quot; under / prog that are larger than 500k
List any line in &quot; f1 &quot; or &quot; f2 &quot; which does not appear in the other and delete all tab characters in the output
List characters from standard input showing backslash escapes for non-displayables
List common files in directories &quot; 1 &quot; and &quot; 2 &quot;
List content of &apos; myfile &apos; in a subshell and returns output to parent shell
List current user &apos; s crontab .
List directories under current directory
List each directory in the current directory prefixed with its disk usage in human readable format and sorted from smallest to largest
List each file or directory in the current directory prefixed by its filesize in bytes and sorted from smallest to largest
List each file or directory in the current directory prefixed by its human readable filesize and sorted from largest to smallest
List each file or directory in the current directory prefixed with its filesize in MB and sorted from smallest to largest
List each file or directory in the current directory prefixed with its filesize in bytes and sorted from smallest to largest
List each subdirectory name composing the current working directory
List each subdirectory name composing the current working directory
List each unique case insensitive character in &quot; file &quot; prefixed by number of occurrences
List each unique case insensitive character in &quot; file &quot; prefixed by number of occurrences and sorted from most frequent to least frequent
List each unique character in &quot; file &quot; prefixed by number of occurrences
List each unique character in &quot; file &quot; prefixed by number of occurrences and sorted from most frequent to least frequent
List empty directories in the current directory tree
List every symbolic link in every home directory &apos; s subdirectory owned by group &apos; staff &apos;
List file contents of compressed file $ i
List file contents of compressed file &apos; compressed.tar.gz &apos;
List file information of the full path of command &quot; c + + &quot;
List files and directories one level deep in the current directory tree
List files and directories recursively
List files ending in .html and residing in the current directory tree
List files in &quot; dir1 &quot; that are not in &quot; dir2 &quot;
List files in directory &quot; one &quot; and &quot; two &quot; that do not exist in the other
List files in directory &quot; one &quot; that exist in directory &quot; two &quot;
List files in the current directory
List files in the current directory
List files in the current directory and below
List files in the current directory and below except for GIT files
List files in the current directory and below that are exactly 1234 bytes in size
List files in the current directory tree using echo
List files in the current directory tree which have permissions rwx for user and rw for group and others
List files larger than 10MB in the / var directory recursively
List files larger than 10MB in the / var directory recursively
List files larger than 10MB under / var / log
List files larger than 10MB under / var / log / tmp that haven &apos; t changed in a month
List files larger than 10MB under / var / log / tmp that haven &apos; t changed in a month
List files larger than 9MB residing in the current directory and below
List files named &quot; accepted _ hits.bam &quot; in the current directory tree prefixing their names with &quot; somecommand &quot;
List files smaller than 9kB residing in the current directory and below
List files under $ CURR _ DIR which were modified , accessed or whose status were changed $ FTIME ago replacing the $ CURR _ DIR path string to &apos; . / &apos;
List files under current directory according to their size in descending order
List files with C-style escape sequences for non-alphanumeric characters
List files / directories at least three levels down the directory tree
List first 20 files under current directory
List first 5 files named &apos; something &apos; that are found under current directory
List in detail all * .txt files in the current directory tree , omitting paths . / Movies / * , . / Downloads / * , and . / Music / *
List in detail the regular files from the / somelocation / log _ output directory tree that were last changed more than 40 days ago
List jobs and their process ids and print them by replacing newline with &apos; ^ &apos;
List level 2 subdirectories of the current directory
List level 2 subdirectories of the current directory
List non-hidden regular files in the current directory tree that were last modified more than 500 days ago
List only the non-hidden empty files only in the current directory .
List path / filename of all PHP files under current directory whose file type description or path / name contains &quot; CRLF &quot;
List recursively all files and directories in / var / www
List regular files in current directory with read , write and execute permission for all users and also show the permissions
List regular files in current directory with read , write and execute permission for all users and also show the permissions
List root &apos; s regular files with permissions 4000
List subdirectories in the current directory
List subdirectories in the current directory
List the 10 largest files or directories and their sizes under ( and including ) &quot; / var &quot;
List the MD5 digest of all files under &quot; teste1 &quot; and &quot; teste2 &quot; sorted alphabetically
List the combined path of the current working directory and &quot; file.txt &quot;
List the current directory recursively ignoring . / src / emacs / and all its contents
List the current directory recursively ignoring the &quot; dir1 &quot; subdirectory
List the current directory recursively ignoring the &quot; dir1 &quot; subdirectory
List the current directory recursively ignoring the &quot; dir1 &quot; subdirectory
List the current directory recursively ignoring the &quot; dir1 &quot; subdirectory &apos; s content
List the directory contents of the current working directory
List the directory paths of all * .ext ( case insensitive ) files under / path directory
List the directory paths of all file.ext files under present working directory
List the directory paths of all file.ext files under present working directory
List the directory paths of all file.ext files under present working directory
List the entire cron job list of user &quot; apache &quot; .
List the files from the current directory tree that contain lines matching regular expression &apos; ^ Subject : . * unique subject &apos;
List the files from the current directory tree that contain lines matching regular expression &apos; ^ Subject : . * unique subject &apos;
List the files from the current directory tree that contain lines matching regular expression &apos; ^ From : . * unique sender &apos; , ignoring ~ / src and ~ / bin
List the files in &quot; archive.tar.gz &quot;
List the files in the / etc directory tree containing text &quot; old1.old2.co.com &quot;
List the files in the / etc directory tree containing text &apos; 128.200.34 . &apos;
List the full path of each directory in the current working directory
List the full path of each directory under the current working directory
List the largest file in long list format of all the files under the current directory
List the largest file prefixed by its size in bytes of all files under the current directory
List the last entry of the numerically sorted list of all files and folders under &quot; / foldername &quot;
List the last modified file under &quot; $ DIR &quot;
List the names of all file.ext files / directories under present working directory
List the names of all files under current directory
List the names of the directories in current directory without going into sub-directories
List the names of the directories in current directory without going into sub-directories
List the number of occurrences of each unique character in &quot; The quick brown fox jumps over the lazy dog &quot; sorted from most frequent to least frequent
List the regular files of the current directory tree that contain string &quot; texthere &quot;
List the unique file extensions of all files under the current directory
List the unique parent directories of all .class files found in the entire filesystem
List the unique parent directories of all .class files found under &quot; / root _ path &quot;
List the unique second &quot; / &quot; delimited field of every line from standard input prefixed by the number of occurrences
List the unique tab delimited field number &quot; $ FIELD &quot; in all files , prefix with the number of occurrences , sort from most frequent to least frequent
List the z * links in the / usr / bin directory and the file to which it points to
List the z * links in the / usr / bin directory with inode information and the file to which it points to
List unique MD5 digests of all files in the current directory ending in .txt
List unique series of 3 characters in file &quot; $ 1 &quot; prefixed by the number of occurrences and sorted from most frequent to least frequent
Lists &apos; / tmp / hashmap . $ 1 &apos; file or folder &apos; / tmp / hashmap . $ 1 &apos; content one file per line .
Lists all directories in &apos; / home / alice / Documents / &apos; .
Lists all directories in a current folder .
Lists all directories in the current folder .
Lists all files in a &apos; / home / dreftymac / &apos; folder and subfolders without recursion .
Lists all files in a current folder , separating names with comma .
Lists all files in a current folder , separating names with comma .
Lists all files in a current folder , separating names with comma .
Lists all files that matches path pattern with wildcards .
Lists all manual pages .
Lists all subdirectories in a current folder , removing trailing slash .
Lists all subdirectories in current directory with a trailing slash
Lists all subdirectories in the current directory
Lists all subdirectories in the current directory with the trailing slash removed
Lists all top-level files in a &apos; / home / dreftymac / &apos; folder .
Lists content of all subfolder ( without recursion ) in a current folder .
Lists content of compressed text file .
Lists content of the current folder .
Lists file descriptors of a current process .
Lists long format information about file &apos; / bin / echo &apos; .
Load keybindings from a file ~ / .inputrc
Locate OGG files under the home directory larger than 100 megabytes
Locate OGG files under the home directory smaller than 100 megabytes
Locate all &quot; copyright &quot; files under and below / usr / share / doc
Locate all * .csv files under the current directory tree
Locate all * .csv files under the current directory tree
Locate all * .csv files under the current directory tree separating the file names with zeroes
Locate all * .csv regular files under the current directory tree
Locate all * .mov files in the current directory tree
Locate all * .txt files in the current directory tree
Locate all .txt files in and below the current directory
Locate all OGG files that reside in the home directory and have not been accessed in the past 30 days
Locate all &apos; readme.txt &apos; files under the home directory
Locate all files &quot; needle.txt &quot;
Locate all files in the current directory and below that do not have &quot; testfileasdf &quot; in their names
Locate all files in the current directory and below that have &quot; testfile &quot; in their names
Locate all files in the current directory and below that have &quot; testfile &quot; in their names regardless of the case
Locate all files named &apos; restore.php &apos; in the current directory and 3 levels below
Locate all passwd files on the system
Locate all the hard links of file &apos; passwd &apos;
Locate and rename unprintable directories using inode numbers
Locate file &quot; file1 &quot;
Locate files not owned by any user or group
Locate files that reside in the / u / bill directory tree and were last accessed between 2 and 6 minutes ago
Locate files that reside in the home directory and have not been accessed in the past 30 days
Locate files whose status was changed less than 1 day ago
Locate files with user permissions rwx owned by my _ user
Locate logo.gif in the / var / www directory tree
Locate symbolic links in / usr and below
Locate symlinks in directory trees lpi104-6 and research / lpi104-6
Locate the httpd.conf file on the system
Locate world-writable files and directories on the system
Locates &apos; gcc &apos; executable file , strips last two parts of the full path , adds &apos; / lib &apos; to the end and saves result in &apos; libdir &apos; variable .
Locates bzip2 command in a system .
Locating large files ( &gt; 100 MB ) in / home / for &apos; cleaning &apos;
Log in as &quot; middleuser &quot; with key &quot; . / middle _ id.pem &quot; and forward port 22 on host &quot; middle.example.org &quot; to port 2222 on localhost
Log in using key file &quot; . / device _ id.pem &quot; as user &quot; deviceuser &quot; on host &quot; middle.example.org &quot; and port 2222
Log into &quot; ubuntu @ ec2-XX-XXX-XXX-XXX.us-west-2.compute.amazonaws.com &quot; using identity file &quot; ~ / path / mykeypair.pem &quot;
Login in &apos; whatever.com &apos; as user &apos; whoever &apos; with X11 forwarding to enable GUI programs on remote to be run
Login to &quot; $ HOST &quot; and create file &quot; $ FILE _ PATH &quot; if it does not exist
Login to &quot; host &quot; using identity file &quot; id _ rsa &quot;
Look for &quot; filename &quot; in the current directory and below
Look for &quot; testfile.txt &quot; in the &quot; / &quot; directory and 1 level below
Look for * .jpg files
Look for * .jpg files on the system
Look for * log files in directories at least three levels down the directory tree
Look for * log files in directories at most three levels down the directory tree
Look for SGID files and directories
Look for SUID files and directories
Look for &apos; regexp &apos; in binary files
Look for all files whose names match pattern &apos; my * &apos;
Look for any files that have not been modified in the last two days
Look for any files that were modified 2-5 days ago
Look for directory &apos; Cookbook &apos;
Look for file &apos; Chapter1 &apos; under / usr and / home
Look for files in the current directory tree to which the group users have full access
Look for files that have SUID or SGID set
Look for files whose names begin with letters a-j
Look for files with the name &apos; search &apos; under current directory
Look for files with wide open permissions
Look for files with wide open permissions
Look for regular files in the directory trees &apos; deferred &apos; , &apos; active &apos; , &apos; maildrop &apos; , &apos; incoming &apos; under / var / spool / postfix /
Look in / home / dm and below for files with &apos; uniform &apos; in their names
Look in the current directory and below for all files whose names begin with either &quot; my &quot; or &quot; qu &quot;
Look up for &apos; myip.opendns.com &apos; in server &apos; resolver1.opendns.com &apos; and save the terse output in &apos; IP &apos; variable
Lookup information for user &quot; vivek &quot;
Lookup information of the current user
Make &quot; bar &quot; executable
Make &quot; file.sh &quot; executable
Make $ WEEKS _ TO _ SAVE + 1 directories named &quot; weekly.N &quot; where N ranges from 0 to &quot; $ WEEKS _ TO _ SAVE &quot;
Make 3 directories named &quot; $ HOME / Labs / lab4a / folder &quot; followed by a 3 width zero padded number from 1 to 3
Make 3 directories named &quot; ~ / Labs / lab4a / folder &quot; followed by the number 1 , 2 , or 3
Make 3 directories named &quot; ~ / Labs / lab4a / folder &quot; followed by the number 1 , 2 , or 3
Make 999 folders one inside another where first 998 of them is named as &quot; folderX &quot; where X goes from 1 to 998 and the last folder named as &quot; folder9991000 &quot;
Make DNS lookup for hostname stackoverflow.com
Make DNS lookup requests for domain list in file &apos; / path / to / host-list.txt &apos;
Make a POST request to &quot; http : / / dweet.io / dweet / for / cycy42 &quot; with data &quot; PiIP &quot; set to the IP address of the system
Make a copy of file.txt in all directories in current directory - names may not contain spaces .
Make a copy of file1 in dir1 , dir2 , and dir3 .
Make a copy of the entire contents of SRCFOLDER called &quot; DESTFOLDER &quot; , if DESTFOLDER exists , the copy will be placed within it .
Make a copy of the entire contents of dir1 in the Pictures directory located in the user &apos; s home directory .
Make a directory in the current working directory with a random 32 alphanumeric character name
Make a directory in the current working directory with a random 32 alphanumeric character name
Make a new directory &quot; new-dir &quot; in every directory in the current directory tree
Make a new directory &quot; new-dir &quot; in every directory in the current working directory non-recursively
Make all directories in the current directory tree accessible to anybody
Make all regular files in the current directory tree world-readable
Make all the bugzilla subdirectories permission 775
Make directorie ( s ) &apos; es / LC _ MESSAGES &apos; as needed in the current directory
Make directorie ( s ) &apos; es _ MX.utf8 / LC _ MESSAGES &apos; as needed in the current directory
Make directories &quot; . / es / es _ MX.utf8 / LC _ MESSAGES &quot; as needed and do not error if it exists
Make directories &quot; / tmp / A &quot; , &quot; / tmp / B &quot; , &quot; / tmp / C &quot; , and &quot; / tmp / dir with spaces &quot;
Make directories &quot; 3 / foo &quot; , &quot; 3 / bar &quot; , and &quot; 3 / baz &quot;
Make directories &quot; Labs / lab4a / folder1 &quot; , &quot; Labs / lab4a / myfolder &quot; , and &quot; Labs / lab4a / foofolder &quot;
Make directories &quot; a &quot; , &quot; b &quot; , &quot; c &quot; , &quot; d &quot; , and &quot; e &quot;
Make directories &quot; a / b / c &quot; as needed without causing an error if it exists
Make directories &quot; bravo _ dir &quot; and &quot; alpha _ dir &quot;
Make directories &quot; es / LC _ MESSAGES &quot; as needed and do not error if it exists
Make directories &quot; foo &quot; and &quot; bar &quot;
Make directories &quot; foo / bar / baz &quot; as needed and do not cause an error if it exists
Make directories &quot; mnt &quot; and &quot; point &quot;
Make directories &quot; project / { lib / ext , bin , src , doc / { html , info , pdf } , demo / stat / a } &quot; as needed and do not cause an error if it exists
Make directories &quot; tmp / real _ dir1 &quot; and &quot; tmp / real _ dir2 &quot; as needed
Make directories &quot; ~ / foo / bar / baz &quot; , &quot; ~ / foo / bar / bif &quot; , and &quot; ~ / foo / boo / bang &quot; as needed
Make directories a , b , c , ... , z under path2 as needed .
Make directories and parents as needed to &quot; $ { raw _ folder } &quot; and &quot; $ { split _ folder } &quot;
Make directories as needed in &quot; dest &quot; for every directory found under &quot; src / &quot;
Make directories for each line in &quot; folder _ list.txt &quot;
Make directories for each unique file path in &quot; file1 &quot;
Make directories in &quot; / TARGET _ FOLDER _ ROOT / &quot; for each &quot; .mov &quot; file in the current directory tree
Make directories to &quot; $ 2 &quot; as needed
Make directories to &quot; $ TARGET _ PATH &quot; as needed without causing an error if it exists
Make directories to &quot; / my / other / path / here &quot; as needed
Make directories to &quot; / my / other / path / here / &quot; as needed
Make directories to &quot; / some / path &quot; as needed
Make directories to &quot; / tmp / boostinst &quot; as needed and print a message for each created directory
Make directories to &quot; / tmp / test / blah / oops / something &quot; as needed
Make directories to &quot; directory { 1 .. 3 } / subdirectory { 1 .. 3 } / subsubdirectory { 1 .. 2 } &quot; as needed
Make directories to &quot; x / p / q &quot; as needed
Make directories to file &quot; / full / path / to / file.txt &quot; as needed
Make directory &quot; / cpuset &quot;
Make directory &quot; / data / db &quot;
Make directory &quot; / etc / cron.15sec &quot;
Make directory &quot; / etc / cron.5minute &quot;
Make directory &quot; / etc / cron.minute &quot;
Make directory &quot; / path / to / destination &quot;
Make directory &quot; / tmp / foo &quot;
Make directory &quot; / tmp / googleTestMock &quot;
Make directory &quot; / tmp / imaginary / &quot; on remote host before archiving &quot; file &quot; to &quot; user @ remote : / tmp / imaginary / &quot;
Make directory &quot; / tmp / new &quot;
Make directory &quot; / var / svn &quot;
Make directory &quot; TestProject &quot;
Make directory &quot; aaa &quot;
Make directory &quot; aaa / bbb &quot;
Make directory &quot; alpha _ real &quot;
Make directory &quot; backup &quot;
Make directory &quot; certs &quot;
Make directory &quot; destdir &quot;
Make directory &quot; dir &quot; and do not cause an error if it exists
Make directory &quot; dir1 &quot;
Make directory &quot; dirname &quot; with permissions set to 777
Make directory &quot; foo &quot;
Make directory &quot; foo &quot; and do not cause an error if it exists
Make directory &quot; mybuild &quot;
Make directory &quot; new _ dir &quot;
Make directory &quot; saxon _ docs &quot;
Make directory &quot; subdirectory &quot;
Make directory &quot; tata &quot;
Make directory &quot; temp &quot;
Make directory &quot; testExpress &quot;
Make directory &quot; ~ / log &quot;
Make directory &quot; ~ / practice &quot;
Make directory &quot; ~ / public _ html &quot;
Make directory &quot; ~ / temp &quot;
Make directory and parents as needed for each unique mime type in the current directory
Make directory and parents as needed for the directory name of file &quot; $ f &quot;
Make directory and parents as needed to &quot; $ FINALPATH &quot;
Make directory and parents as needed to &quot; ~ / temp / bluecove / target / &quot;
Make directory expanded by $ dir variable
Make directory named in variable &quot; archive &quot; with &quot; .tar * &quot; stripped from the end
Make hidden directory &quot; .hiddendir &quot;
Make regular files from debian / fglrx-amdcccle / usr / lib / fglrx / bin / executable for all
Make sure the file &quot; .bash _ profile &quot; exists in current directory , update its timestamp to current date / time .
Md5sum the last 5 files in / directory1 / directory2 /
Measure the disk space taken up by all * .txt files in directory trees folder1 and folder2
Measure the disk space taken up by all * .txt files in the current directory tree
Measure the disk space taken up by all * .txt files in the current directory tree
Merge already sorted files &quot; * .txt &quot; and split the result into files of at most 1000000 lines each with a numeric suffix and a prefix &quot; output &quot;
Merge already sorted files &quot; file * .txt &quot; and split the result into files of at most 100000 lines each with a prefix &quot; sorted _ file &quot;
Merge already sorted files in the current directory ending in &quot; . $ suffix &quot;
Merge already sorted files in the current directory starting with &quot; _ tmp &quot; and write the output to &quot; data.tsv.sorted &quot;
Merge colon-separated information from file1 and file2 where first field of both files matches
Merge colon-separated information from file1 and file2 where second field of both files matches , sorting the result based on this field - for each line , output : first 3 fields of first file , followed by first 3 fields of second file .
Merge colon-separated information from standard input and file1.txt where the first field of both files matches , print unpairable lines from both files , replace missing fields with &quot; no-match &quot; , and output the second field from standard input and the second and third field from file1.txt
Merge colon-separated information from standard input and file1.txt where the first field of both files matches , print unpairable lines from standard input , replace missing fields with &quot; no-match &quot; , and output the second field from standard input and the second and third field from file1.txt
Merge content of decompressed files &quot; $ part0 &quot; , &quot; $ part1 &quot; , and so on
Merge data in file1 and file2 where second field is common in both files
Merge each line in &quot; file &quot; into a single comma separated line
Merge each line of standard input into a single comma separated line
Merge each non-blank line of standard input into a single comma separated line
Merge file1 and file2 by outputting all lines where the first comma-separated field of both files matches , followed by extra fields in file1 and those in file2
Merge files &apos; text.txt &apos; and &apos; codes.txt &apos; by outputting any lines whose second field in the first matches the first field in the second .
Merge lines from &quot; file _ 1 &quot; and &quot; file _ 2 &quot; and format the output as a table with tab separators
Merge lines whose first comma-separated field in file &apos; in1 &apos; also appears as a first comma-separated in file &apos; in2 &apos; - both files must be sorted , and the output format of each line will be : first field of in1 , second field of in2 , and third field of in2 .
Merge lines whose first comma-separated field in file &apos; in1 &apos; also appears as a first comma-separated in file &apos; in2 &apos; - both files must be sorted .
Merge the first &quot; $ lc &quot; lines of &quot; current.txt &quot; and the last &quot; $ lc &quot; lines of &quot; current.txt &quot; and display the result as a comma separated table
Modify interval to 0.1 seconds for the watch command
Monitor 3 specific process IDs : 18884 , 18892 , and 18919 ( GNU specific )
Mount &quot; / dev / shm &quot; using / etc / fstab entry
Mount &quot; / path / to / device &quot; on &quot; / path / to / mount / location &quot; as a loop back device
Mount &quot; / path / to / device &quot; on &quot; / path / to / mount / location &quot; as a vfat filesystem and a loop back device
Mount &quot; / tmp / loop.img &quot; on &quot; / mnt / image &quot; as a loop back device
Mount &quot; / windows &quot; using / etc / fstab entry
Mount &quot; cpuset &quot; filesystem on &quot; / cpuset / &quot;
Mount &quot; device _ name &quot; on &quot; mount _ point &quot;
Mount &quot; ext4 &quot; filesystem &quot; / dev / xvdf &quot; on &quot; / vol &quot;
Mount &quot; ext4 &quot; filesystem &quot; / dev / xvdf1 &quot; on &quot; / vol &quot;
Mount &quot; nifs &quot; filesystem &quot; / dev / mapper / myldm &quot; on &quot; / mnt &quot; as read only
Mount &quot; ntfs-3g &quot; filesystem &quot; / dev / mapper / myvolume &quot; on &quot; / media / volume &quot;
Mount &quot; proc &quot; file system on &quot; / var / snmp3 / proc &quot;
Mount &quot; tmpfs &quot; filesystem to &quot; / path / to / dir &quot;
Mount &quot; vfat &quot; filesystem &quot; / dev / sda7 &quot; to &quot; / mnt / my _ partition &quot; with read and write permission , umask of files and directories set to &quot; 0000 &quot; , and save in fstab and allow ordinary users to mount
Mount a partition in &quot; $ IMAGE &quot; with offset &quot; $ OFFSET &quot; to &quot; media / $ DEST &quot; as read only using a loop device
Mount a read only ntfs filesystem
Mount all filesystems in / etc / fstab
Mount image &quot; test &quot; to loop device &quot; / dev / loop0 &quot;
Mount partition with label &quot; WHITE &quot; on &quot; / mnt / WHITE &quot;
Mount partition with label &quot; WHITE &quot; on &quot; / mnt / WHITE &quot; with read and write permission
Mount partition with label &quot; WHITE &quot; on &quot; / mnt / WHITE &quot; with read and write permission and have it accessible by user and group &quot; test &quot;
Mount remote &quot; cifs &quot; filesystem &quot; / / 192.168.0.111 / serv _ share &quot; on &quot; / mnt / my _ share &quot; with username &quot; me &quot; and password &quot; mine &quot;
Mount remote &quot; cifs &quot; filesystem &quot; / / server / source / &quot; on &quot; / mnt / source-tmp &quot; with username &quot; Username &quot; and password &quot; password &quot;
Mount remote &quot; smbfs &quot; filesystem &quot; / / username @ server / share &quot; on &quot; / users / username / smb / share &quot; as soft
Mount the &quot; linprocfs &quot; filesystem on &quot; / proc &quot;
Mount the &quot; vboxsf &quot; filesystem &quot; D : \ share _ folder _ vm &quot; on &quot; \ share _ folder &quot;
Mount the &quot; vboxsf &quot; filesystem &quot; myFileName &quot; on &quot; ~ / destination &quot;
Mount the directory &quot; / etc &quot; on &quot; / tmp / sarnold / mount _ point / &quot;
Move &quot; $ PHANTOM _ JS &quot; to &quot; / usr / local / share &quot; directory
Move &quot; / usr / bin / openssl &quot; to directory &quot; / root / &quot;
Move &quot; caniwrite &quot; without clobbering into &quot; / usr / local / bin &quot;
Move &quot; file.txt &quot; to docker container &quot; $ CONTAINER _ ID &quot; in path &quot; / var / lib / docker / devicemapper / mnt / $ CONTAINER _ ID / rootfs / root / file.txt &quot;
Move &quot; file.txt &quot; to docker container &quot; $ COUNTAINER _ ID &quot; in path &quot; / var / lib / docker / aufs / mnt / $ CONTAINER _ ID / rootfs / root / file.txt &quot;
Move &quot; file1 &quot; , &quot; file2 &quot; , &quot; &quot; ... to &quot; target &quot; directory
Move &quot; phantomjs-1.8.1-linux-x86 _ 64.tar.bz2 &quot; to &quot; / usr / local / share / &quot; directory
Move &quot; tobecopied / tobeexclude &quot; to &quot; tobeexclude &quot;
Move &quot; tobecopied / tobeexcluded &quot; to the current directory
Move * wp-admin / index.php files under / var / www / to . / index _ disabled
Move all * .data files / directories in $ S directory to $ S / data / directory
Move all * .emlx files / directories under / path / to / folders / to . / Messages / directory
Move all * .mp4 files from directory / foo / bar and its subdirectories to / some / path
Move all * .mp4 files from directory / foo / bar and its subdirectories to / some / path
Move all * .pdf.marker files and their corresponding * .pdf files under $ { INPUT } to $ { OUTPUT }
Move all * .php ~ ( case insensitive ) files under current directory to / mydir
Move all * .php ~ ( case insensitive ) files under current directory to / mydir
Move all Emacs backup files from the current directory tree to ~ / backups /
Move all directories from the &apos; sourceDir &apos; directory tree to the &apos; destDir &apos; directory
Move all directories from the &apos; sourceDir &apos; directory tree to the &apos; destDir &apos; directory
Move all directories in the current directory that match &quot; some-dir &quot; to &quot; x / &quot;
Move all directories in the current directory tree that have been modified in the last day to &quot; / path / to / target-dir &quot;
Move all directories in the current directory tree that have been modified in the last day to &quot; / path / to / target-dir &quot;
Move all directories in the current directory tree that have been modified in the last day to &quot; / path / to / target-dir &quot;
Move all files and directories in the current directory to &quot; $ TARGET &quot; excluding files matching &quot; $ EXCLUDE &quot;
Move all files and directories in the current directory to &quot; / foo &quot;
Move all files and directories in the current directory to &quot; / foo &quot;
Move all files and directories in the current directory to &quot; / tmp / blah / &quot;
Move all files and directories in the current directory to &quot; somewhere / &quot;
Move all files and directories matching &quot; * .boo &quot; in the current directory to &quot; subdir &quot;
Move all files and directories not starting with &quot; l &quot; in &quot; / mnt / usbdisk &quot; to &quot; / home / user / stuff / &quot; .
Move all files excluding hidden files in &quot; / path / subfolder / &quot; to &quot; / path / &quot;
Move all files from &quot; src / test / &quot; to &quot; dest &quot; displaying progress
Move all files from the &apos; sourceDir &apos; directory to the &apos; destDir &apos; directory
Move all files from the &apos; sourceDir &apos; directory to the &apos; destDir &apos; directory
Move all files from the &apos; sourceDir &apos; directory tree to the &apos; destDir &apos; directory
Move all files from the &apos; sourceDir &apos; directory tree to the &apos; destDir &apos; directory
Move all files in &quot; / path / subfolder &quot; to &quot; / path &quot; without clobbering any destination files
Move all files in the current directory tree that match &quot; some _ pattern &quot; to &quot; target _ location &quot;
Move all files including hidden files and excluding &quot; &quot; .. in &quot; / path / subfolder / &quot; to &quot; / path / &quot;
Move all files including hidden files in &quot; / path / subfolder / &quot; to &quot; / path / &quot;
Move all files listed in $ i file to dir . $ count directory
Move all files matching case insensitive &quot; .cpp &quot; in the current directory tree to &quot; . / test / &quot;
Move all files matching patterns &quot; * .old &quot; , &quot; .old &quot; , &quot; . * .old &quot; from the current directory to directory &quot; .. / old / &quot;
Move all files not matching &quot; Tux.png &quot; in &quot; ~ / Linux / Old &quot; to &quot; ~ / Linux / New / &quot; using zsh with &quot; EXTENDED _ GLOB &quot;
Move all files that contain &quot; Subject : \ &#91; SPAM \ &#93; &quot; to &quot; DIR &quot;
Move all files that contain &quot; Subject : \ &#91; SPAM \ &#93; &quot; to &quot; DIR &quot;
Move all files / directories under current directory to destDir
Move all files / directories under current directory to ~ / play
Move all files / directories under current directory to ~ / play
Move all hidden files in &quot; / path / subfolder / &quot; to &quot; / path / &quot;
Move all hidden files in &quot; wordpress &quot; to the current directory
Move all regular files under current directory to . / newdir
Move all regular files under current directory to . / newdir
Move all the .c files from the current directory tree to temp /
Move each of the &apos; m ? &apos; directories in $ path _ to _ folders to another directory whose name is constituted by appending .mbox to each directory name and create a directory named Messages in this directory then move all * .emlx files into this directory
Move each of the &apos; m ? &apos; directories in current directory to another directory whose name is constituted by appending .mbox to each directory name and create a directory named Messages in this directory then move all * .emlx files into this directory
Move each of the directories in / path / to / folders / * to another directory whose name is constituted by appending .mbox to each directory name and create a directory named Messages in this directory
Move each of the directories in / path / to / folders / * to another directory whose name is constituted by appending .mbox to each directory name and create a directory named Messages in this directory then move all * .emlx files into this directory
Move files from $ sourcePath to $ destPath that have not been modified in the last 10 days
Move files older than 1 day to directory TMP
Move server.log to &apos; logs &apos; directory with new name as the current date formatted as &quot; % Y % m % d % H % M &quot; and with &apos; .log &apos; extension
Move the directory named &quot; some-dir &quot; and residing under the current one to x /
Moves file &apos; $ 2 &apos; to the folder where &apos; $ 1 &apos; file is located .
Moves the file that named like file $ 1 from &apos; / tmp &apos; folder to the folder where $ 2 file is located .
Non-recursively finds all &apos; * .pdf &apos; files in a current folder and removes them .
Non-recursively finds all &apos; * .pdf &apos; files in a current folder and removes them .
Number each line in &quot; / etc / passwd &quot; as right-justified zero padded to a width of 9
Number each line in &quot; foobar &quot; as right-justified zero padded to a width of 9
Number each non-blank line of standard input
Number every line of standard input as zero padded to 6 characters followed by &quot; - &quot;
Numberically sort content of file &apos; files &apos; , using for sorting part of second one of dash separated fields beginning from second letter .
Numerically sort IPv4 addresses specified on standard input with presedence to first , second , third , then fourth octet
Numerically sort each line in file &quot; bb &quot; and output the result to console from greatest value to least value
Numerically sort each line in file &quot; out &quot; and print the result to console
Numerically sort each line of standard input
Numerically sort file &quot; file.dat &quot; by the second word of each line and output from greatest value to least value
Numerically sort file &quot; file.dat &quot; by the second word of each line and output from greatest value to least value
Numerically sort file &quot; files &quot; by the second &quot; - &quot; separated value of each line ordered from least value to highest value
Numerically sort file &quot; table &quot; by the fourth character of the second field , ignoring leading spaces
Numerically sort file &quot; temp.txt &quot; by the second &quot; - &quot; separated value of each line ordered from highest value to least value
Numerically sort standard input by the second word of each line
Numerically sort standard input by the second word of each line and output from greatest value to least value
On host &quot; server _ b &quot; , connect as ssh user &quot; user &quot; and copy &quot; / my _ folder / my _ file.xml &quot; to directory &quot; / my _ new _ folder / &quot; , with all transfer data relayed through local host .
On host &quot; server _ b &quot; , connect as ssh user &quot; user &quot; and copy &quot; / my _ folder / my _ file.xml &quot; to directory &quot; / my _ new _ folder / &quot; .
Open a local SSH port on 1080 for application-level port forwarding
Open a session-less connection to &apos; host &apos; as user &apos; user &apos; in master mode with a socket &quot; / tmp / % r @ % h : % p &quot; to enable connection sharing
Open a ssh connection to &quot; user @ host &quot; with a control socket &quot; / tmp / % r @ % h : % p &quot;
Open a ssh connection to user @ host with X11 forwarding to run GUI programs
Open gcc info manual and select &quot; option index &quot; menu entry .
Opens gawk info manual and goes to command-line options node .
Opens gcc info manual and goes to a node pointed by index entry &quot; funroll-loops &quot; .
Opens gcc info manual and selects &quot; option index &quot; menu entry .
Opens menu item &apos; Basic Shell Features &apos; - &gt; &apos; Shell Expansions &apos; - &gt; &apos; Filename Expansion &apos; - &gt; &apos; Pattern Matching &apos; in the &apos; bash &apos; manual .
Output &quot; file.txt &quot; , omitting all containing directories &quot; some / unknown / amoutn / of / sub / folder / &quot;
Output &quot; stuff &quot; , removing &quot; / foo / bar / &quot; from the specified path .
Output &quot; testFile.txt.1 &quot; without the &quot; .1 &quot; suffix .
Output all lines in &apos; file &apos; comparing the first 12 characters and discarding any adjascent lines where these characters are duplicates .
Output all lines in BigFile.csv whose secondn comma-separated second field matches first field of a line in LittleFile.csv .
Output all lines that have a common first colon-separated field in files &apos; selection2.txt &apos; and &apos; selection1.txt &apos; by displaying the common ( first ) field of each line , followed by the extra fields in both lines .
Output only the filetype suffix of &quot; foo.tar.gz &quot; , in this case &quot; gz &quot;
Output success.txt omitting lines whose first field appears in fail.txt - lines in fail.txt must appear in the same order as they do in success.txt .
Output the base name of first argument to script or function , that is the part following the last slash .
Output the file name &quot; file.txt &apos; from the path &quot; some / unknown / amount / of / sub / folder / file.txt &quot;
Output the last slash-separated component of specified path , in this case &quot; data _ report _ PD _ import _ script _ ABF1 _ 6 &quot;
Output the specified path removing all containing directories and the .txt suffix , in this case &quot; filename &quot; .
Output the string &apos; yes &apos; continously until killed
Output the system host name and date to the console
Output the variable &quot; filename &quot; without the last dot-separated section .
Output two lines of &quot; -tcp &quot;
Output two lines of &quot; -tcp &quot;
Overwirte file &apos; / path / to / your / file &apos; with random content , showing progress while execution .
Overwirte file &apos; / path / to / your / file &apos; with random content , then overwrite with zeroes , and remove , showing progress while execution .
Overwirte file &apos; / path / to / your / file &apos; with zeroes and remove , showing progress while execution .
Overwrite a file &apos; my-existing-file &apos; with random data to hide its content
Overwrites file $ FILE with random content , then truncates and deletes it .
Overwrites file &apos; filename &apos; with random content 35 times , finally writes it with zeros , truncates and deletes .
Pair side-by-side content of the &apos; file &apos; and its side-mirrored content
Pass a wildcard to scp by escaping it : copy all files with names starting with &quot; files &quot; in directory &quot; / location &quot; on host &quot; server &quot; to current directory on local machine , displaying debug info and preserving timestamps and permissions on copied files .
Pass all the files from the current directory tree as arguments to a single &apos; echo &apos; command
Perform a case insensitive search for * .jpg files which are greater than 500KB in size under / ftp / dir / directory
Perform a case insensitive search for * filename * files / directories under current directory tree
Perform a default Plesk configuration
Perform a default cPanel configuration
Perform a dry run replacing &quot; special &quot; with &quot; regular &quot; in all file names in the current directory
Perform a dry run to recursively copy &quot; test / a &quot; to &quot; test / dest &quot; excluding &quot; test / a / b / c / d &quot;
Perform a white space safe search for all files / directories under current directory
Perform case insensitive search for * .gif files / directories under downloads directory
Perform case-insensitive search for file &apos; TeSt123.txt &apos; on the system
Perform white space safe deletion of files named core under / tmp
Ping all hosts in file &quot; ips &quot; twice
Ping all hosts in file &quot; ips &quot; twice
Ping every address from 192.168.0.1 to 192.168.0.254 with a timeout of 1 second and filter out no responses
Ping the broadcast address &quot; 10.10.0.255 &quot;
Pipe 3 newlines to sshe-keygen , answering prompts automatically .
Pipe content of &apos; somedata.txt &apos; file to the input of command &quot; $ outfile &quot;
Pipe the output of ls into &quot; read var &quot; in its separate process
Places current job to background .
Prefix all files and directories in the current directory with &quot; Unix _ &quot;
Prefix all files and directories in the current directory with &quot; unix _ &quot;
Prefix all files and folders in the current directory with &quot; PRE _ &quot;
Prefix all files and folders in the current directory with &quot; PRE _ &quot;
Prefix each non-blank line in &quot; filename &quot; with a line number
Prepend date to ping output to google.com
Prepend the reverse history number to the output of the history command with arguments &quot; $ @ &quot;
Prevent ssh from reading from standard input and execute &quot; touch / home / user / file _ name.txt &quot; on &quot; $ R _ HOST &quot; as &quot; $ R _ USER &quot;
Print &quot; Cannot acquire lock - already locked by &quot; followed by content of $ lockfile file
Print &quot; # include &quot; statements found in &quot; file2 &quot; that are not in &quot; file1 &quot;
Print &quot; $ 1 &quot; or default 10 random lines from standard input
Print &quot; $ line &quot; in hexadecimal 2-byte units
Print &quot; $ somedir is empty &quot; if $ somedir is empty
Print &quot; * Checking Partition Permission * Hostname = $ ( hostname ) LastChecked = &quot; followed by the current date
Print &quot; / tmp / myfile &quot; starting at line 11
Print &quot; I am USER and the program named ls is in LS _ PATH &quot; where &quot; USER &quot; is the current user &apos; s user name and &quot; LS _ PATH &quot; is the full path of the command &quot; ls &quot;
Print &quot; RDBMS exit code : $ RC &quot; to the console and append to &quot; $ { LOG _ FILE } &quot;
Print &quot; This is a sentence &quot; . by replacing all consecutive space characters with a single newline character
Print &quot; Total generated : &quot; followed by the number of unique lines in &quot; $ generated _ ports &quot;
Print &quot; a \ nb \ ncccccccccccc \ nd &quot; as two columns and neatly format into a table
Print &quot; deb http : / / ppa.launchpad.net / webupd8team / java / ubuntu precise main &quot; and append to file &quot; / etc / apt / sources.list &quot;
Print &quot; deb-src http : / / ppa.launchpad.net / webupd8team / java / ubuntu precise main &quot; and append to file &quot; / etc / apt / sources.list &quot;
Print &quot; echo ping -c 2 &quot; on each string in file &apos; ips &apos;
Print &quot; echo ping -c 2 &quot; on each string in file &apos; ips &apos;
Print &quot; file1.txt &quot; &quot; file2.txt &quot; and &quot; file3.txt &quot; with filename headers
Print &quot; hello &quot; followed by the current user name
Print &quot; huge-file.log &quot; starting at line 1000001
Print &quot; huzzah &quot; if directory &quot; / some / dir &quot; is empty
Print &quot; new.txt &quot; with line numbers prepended
Print &quot; on &quot; to standard output and to files matching &quot; / sys / bus / usb / devices / usb * / power / level &quot;
Print &quot; test = hello world &quot;
Print $ d if $ d is an empty directory
Print $ d if $ d is empty
Print &apos; &quot; HTTP / 1.1 200 OK &apos; , two new lines and the current date
Print &apos; -exec is an action so an implicit -print is not applied &apos; for every file / directory found by the name &apos; file &apos; under current directory tree
Print &apos; -ok is an action so an implicit -print is not applied &apos; with confirmation from the user for each file or directory found by the name &apos; file &apos; under current directory tree
Print &apos; -okdir is an action so an implicit -print is not applied &apos; for each file / directory found by the name &apos; file &apos; under current directory tree
Print &apos; 111 22 3 \ n4 555 66 \ n &apos; by replacing the spaces with tabs and &apos; \ n &apos; with newlines
Print &apos; Since -printf is an action the implicit -print is not applied \ n &apos; for every file named &apos; file &apos; found under current directory tree
Print &apos; This should print the filename twice if an implicit -print is applied : &apos; appended with file paths for all files named &apos; file &apos; under current directory tree
Print &apos; bla.txt &apos; if at least one file with such name is present below the current directory .
Print &apos; cp &apos; commands that would copy a file xyz.c to all the files with &apos; .c &apos; extension present in the . / C directory and below
Print &apos; echo &apos; hello , world &apos;
Print &apos; file &apos; content , formatting output as 29-symbol wide column
Print &apos; file &apos; content , formatting output as 29-symbol wide column , regarding space symbol as a word separator
Print &apos; file &apos; file , splitting lines into pieces with no more that 3 words in each one .
Print &apos; huzzah &apos; if / some / dir / is empty
Print &apos; infile &apos; content with line numbers
Print / some / dir / if it &apos; s empty
Print 1 byte from &quot; / dev / urandom &quot; as a signed decimal value and no address radix
Print 1 to 10 by separating them with colon ( &apos; : &apos; )
Print 10 &quot; # &quot; characters in a row
Print 10 lines of a single &quot; x &quot;
Print 1000 astarisk ( &apos; * &apos; )
Print 2 lines of &quot; 123456789 &quot;
Print 3 newline separated &quot; y &quot; s
Print 3 space separated &apos; % &apos;
Print 7 spaces in a row
Print A record for domain &apos; domain . &apos; from &apos; ns1.newnameserver &apos; nameserver
Print A record for domain &apos; domain . &apos; from &apos; ns2.newnameserver &apos; nameserver
Print A record for domain &apos; domain . &apos; from &apos; some.other.ip.address &apos; nameserver
Print A record for domain &apos; domain . &apos; from 8.8.8.8 nameserver
Print IP addresses of the current host
Print IP addresses of the host name
Print IP addresses of the host name
Print IP addresses of the host name
Print IP addresses of the host name
Print NS record for domain &apos; domain . &apos; from &apos; some.other.ip.address &apos; nameserver
Print NS record for domain &apos; domain . &apos; from 8.8.8.8 nameserver
Print TXT record with server &apos; s hostname from nameserver &apos; server &apos;
Print a 2 byte hexadecimal value , printable character , and octal value of &quot; $ 1 &quot;
Print a NULL-separated list of all directories of the current directory tree
Print a NULL-separated list of all hidden regular files from the home directory
Print a colon-separated list of all directories from the $ root directory tree
Print a colon-separated list of all directories from the $ root directory tree
Print a colon-separated list of all directories from the $ root directory tree , except those matching pattern &quot; . &#91; a-z &#93; * &quot;
Print a colon-separated list of all directories from the ~ / code directory tree , except hidden ones and those below them
Print a colon-separated list of all directories from the ~ / code directory tree , except hidden ones and those below them
Print a count of all unique entries in &quot; ips.txt &quot; with the most frequent results at the top
Print a count of all unique lines in &quot; ports.txt &quot; sorted from most frequent to least frequent
Print a count of case insensitive duplicate filenames in the current directory
Print a count of duplicate lines in &quot; filename &quot;
Print a count of duplicate lines in &quot; filename &quot; sorted by most frequent
Print a count of each unique line from standard input
Print a count of each unique line from standard input sorted from least frequent to most frequent
Print a count of each unique line in &quot; ip _ addresses &quot;
Print a count of each unique line in &quot; ip _ addresses.txt &quot; sorted numerically
Print a count of files and directories in the current directory tree
Print a detailed list of all regular files from the current directory tree
Print a hex dump byte to byte of the output of &quot; echo Aa &quot;
Print a hex dump of &quot; $ DIREC &quot; as characters
Print a line of 10 &apos; # &apos; characters
Print a line of 100 random characters either &quot; &quot; . or &quot; &quot;
Print a line of 3 &apos; % &apos; characters
Print a line of 99 &apos; = &apos; characters
Print a list of JPG files residing in the current directory tree
Print a list of all * .code files from the current directory tree
Print a list of all duplicate case insensitive file paths in the current directory tree
Print a list of all files and directories in the / var / log directory tree
Print a list of all regular files residing in the current directory
Print a list of all the files in entire file system whose inode has been modified no later than one minute ago
Print a list of case insensitive duplicate filenames in the current directory
Print a list of differing files
Print a list of each file with the full path prefix in the current directory tree excluding symbolic links
Print a list of regular files from directory tree sort _ test / sorted with LC _ COLLATE = C
Print a list of regular files from directory tree sort _ test / sorted with LC _ COLLATE = en _ US.UTF-8
Print a list of regular files from directory tree sort _ test / sorted with LC _ COLLATE = en _ US.utf8
Print a list of symbolic links reachable from the current directory that do not resolve to accessible files
Print a list of unique users who are logged in
Print a listing of the &apos; other &apos; directory
Print a listing of the &apos; other &apos; directory
Print a minimal set of differences between files in directories &quot; a &quot; and &quot; b &quot; , ignore differences in whitespace , and print 0 lines of unified context
Print a minimal set of differences between files in directories &quot; a &quot; and &quot; b &quot; , ignore the first 3 lines of output , and print any line starting with &quot; - &quot; with the first character removed
Print a minimal set of differences between files in directories &quot; teste1 &quot; and &quot; teste2 &quot; , treat absent files as empty , ignore differences in whitespace , treat all files as text , and print 3 lines of unified context
Print a random number from 2000 to 65000
Print a randomly sorted list of numbers from 1 to 10 to file &quot; / tmp / lst &quot; and outputs &quot; ------- &quot; followed by the reverse list to the screen
Print a randomly sorted list of numbers from 1 to 10 to file &quot; / tmp / lst &quot; and the screen followed by &quot; ------- &quot;
Print a sorted list of * .so files in the bla directory tree
Print a sorted list of all .jpg files in the current directory and below
Print a sorted list of directories from the ~ / Music tree containing files whose names begin with &quot; cover &quot; .
Print a sorted list of regular files from directory tree / folder / of / stuff
Print a sorted list of the extensions of the regular files from the current directory tree
Print a sorted list of the subdirectories of ~ / Music
Print a sorted list of unique directory paths in entire file system that match the pattern &apos; &lt; name _ pattern &gt; &apos; in their names
Print a space separated list of numbers from 1 to 10
Print a space separated list of numbers from 1 to 10 with no trailing new line
Print a summary of the command-line usage of find
Print a top 20 histogram of characters used from standard input showing backslash escapes for non-displayables
Print a unique list of characters from standard input showing backslash escapes for non-displayables
Print a welcome message with the current user &apos; s user name
Print a welcome message with the current user &apos; s user name
Print a welcome message with the current user &apos; s user name
Print a welcome message with the current user &apos; s user name
Print absolute path of &quot; PATH &quot;
Print absolute path of &quot; YOUR _ PATH &quot;
Print absolute path of java executable
Print all &apos; - &apos; separated digits in file &apos; infile &apos; as dot ( &apos; . &apos; ) separated digits
Print all business days in the current month without column titles
Print all directories under $ root appending a : ( colon ) at the end of each path
Print all directories under $ root appending a : ( colon ) at the end of each path without descending into directories matching the pattern . &#91; a-z &#93; *
Print all distinct characters in input &quot; He likes cats , really ? &quot;
Print all file / directory names with white space safety under the / proc directory
Print all file / directory names without white space safety under the / proc directory
Print all filenames in / usr / src except for those that are of the form &apos; * , v &apos; or &apos; . * , v &apos;
Print all filenames under / proc and below
Print all filenames under / proc and below
Print all filenames under / proc and below
Print all files and directories in the &apos; . &apos; directory tree skipping SCCS directories
Print all files and directories in the &apos; . &apos; directory tree skipping SCCS directories but printing out the SCCS directory name
Print all files containing &quot; word1 &quot; and &quot; word2 &quot; in the current directory tree
Print all files in the current directory as a comma separated list
Print all files in the current directory tree as a comma separated list
Print all files in the current directory tree as a comma separated list
Print all files on the system owned by group &apos; name _ of _ group &apos;
Print all files that exceed 1000 blocks and were modified at least a month ago
Print all files with a &apos; - &apos; after their name if they are regular files , and a &apos; + &apos; otherwise
Print all files / directories under ... directory by terminating their paths with a null character
Print all files / directories with their sizes under $ WHATEVER directory tree
Print all lines from file &apos; report.txt &apos; containing any-cased &apos; error &apos; pattern
Print all matching commands in $ PATH for command &quot; python &quot;
Print all non-hidden files in the current directory and its subdirectories
Print all string from file &apos; file2.txt &apos; matching pattern in file &apos; file1.txt &apos;
Print all the file / directory paths under current directory
Print all unique strings in $ 1.tmp file .
Print all user names and terminals of users who are logged in
Print and delete all directories named &apos; work &apos; under &apos; / usr / ports / &apos; directory tree
Print and recursively remove the alphabetically last directory in the current directory
Print and save the ping results of 25 requests to &quot; google.com &quot; in &quot; / home / user / myLogFile.log &quot; containing at most 100000 bytes
Print appended data in &quot; / var / log / some.log &quot; that match &quot; foo &quot; and &quot; bar &quot;
Print appended data in &quot; / var / log / syslog &quot; as the file grows
Print appended data in &quot; file &quot; that match &quot; my _ pattern &quot;
Print argument &quot; $ 1 &quot; &quot; $ number &quot; times
Print as many dots as there are files named &quot; file.ext &quot; in the / home / kibab directory tree
Print base name of the file name without all extensions .
Print calendar for February , March and April of year 2009 side-by-side
Print canonical filename of &quot; / path / here / &quot; ..
Print canonical filename of &quot; / path / there / .. / .. / &quot; even if it does not exist
Print characters 2 through 4 of &quot; abcdefg &quot;
Print characters in variable &quot; $ a &quot; that exist in variable &quot; $ b &quot;
Print chmod commands that can change permissions of regular files residing in the current directory tree to u = rw , g = r , o =
Print comma separated gaps in file &quot; file &quot; that contains new line separated ordered numbers
Print command history
Print command line of process with pid 17709
Print command with PID 11383
Print common files of directory &quot; 1 &quot; and &quot; 2 &quot;
Print common files of directory &quot; one &quot; and &quot; two &quot;
Print common lines in &quot; file1 &quot; and &quot; file2 &quot;
Print common lines in files &quot; set1 &quot; and &quot; set2 &quot;
Print common lines in sorted files &quot; ignore.txt &quot; and &quot; input.txt &quot;
Print common lines of files &quot; file1 &quot; , &quot; file2 &quot; , &quot; file3 &quot; , and &quot; file4 &quot;
Print concatenated content of all files ending with &apos; .foo &apos; under the current folder
Print content of &apos; 1 &apos; file
Print content of &apos; a &apos; file , showing all non-printing characters including TAB characters , and displaying $ at the end of each line .
Print content of &apos; domains.txt &apos; with removed first one of dot-delimited fields
Print content of &apos; file &apos; file reverted characterwise
Print content of &apos; filename &apos; file , showing all non-printing characters and displaying $ at the end of each line .
Print content of &apos; whatever &apos; file
Print content of / etc / passwd and / etc / group files
Print content of all files ending with &apos; * .foo &apos; in current directory recursively
Print content of all files ending with &apos; * .foo &apos; under the current directory
Print content of all files found regarding seach options &apos; &#91; whatever &#93; &apos;
Print content of all files found regarding seach options &apos; &#91; whatever &#93; &apos;
Print content of all files found regarding seach options &apos; &#91; whatever &#93; &apos;
Print content of all files found regarding seach options &apos; &#91; whatever &#93; &apos;
Print content of each file under the current directory followed by that file name
Print contents of &quot; file &quot; as space separated hexadecimal bytes on a single line
Print continuous characters &apos; / &apos; and &apos; \ &apos; randomly from / dev / urandom
Print continuous lines of 100 random characters either &quot; &quot; . or &quot; &quot;
Print count of unique lines in all files like &apos; list _ part * &apos;
Print current UTC date in ISO format with precision to seconds
Print current date as epoch seconds
Print current shell using process ID
Print details for all files in the . / work directory tree with extension .sh that were modified less than 20 days ago
Print differences between files in directories folder1 and folder2 recursively , with unified context , ignoring changes in the amount of white space
Print differences between the sorted content of file $ 1 and file $ 2 , executing &apos; diff &apos; with options from &quot; $ { @ : 3 } &quot; array slice
Print directories in the the current directory as a list with no report information
Print each character in &quot; Hello &quot; as a hexadecimal value
Print each character in &quot; orange &quot; on a new line
Print each character of &quot; abcdefg &quot; on a line
Print each line in &quot; f1 &quot; and &quot; f2 &quot; separated by a space and &quot; f3 &quot; separated by a tab
Print each line in &quot; file1 &quot; whose first word does not exist as the first word of any line in &quot; file2 &quot;
Print each line in &quot; file1.txt &quot; that is not found in &quot; file2.txt &quot;
Print each line in &quot; set1 &quot; and &quot; set2 &quot; that does not exist in the other
Print each line in parallel in files &quot; tmp / sample-XXX.tim &quot; and &quot; tmp / sample-XXX.log &quot;
Print each line that is found only once in &quot; file1 &quot; and &quot; file2 &quot; combined
Print each logged in user &apos; s full name
Print each logged in user &apos; s username and full name
Print each unique line that is duplicated in files &quot; file1 &quot; and &quot; file2 &quot; combined
Print either &quot; one &quot; or &quot; two &quot; randomly three times
Print epoch seconds for given time string &quot; Oct 21 1973 &quot;
Print equal lines in compressed files &quot; number.txt &quot; and &quot; xxx.txt &quot;
Print every 20 bytes of standard input as tab separated groups of bytes 1-3 , 4-10 , and 11-20
Print every 3 characters of standard input as a line
Print every file &apos; s type , name , and inode
Print every found file like &apos; * .cfg &apos; under &apos; / path / to / files / &apos; directory followed by its content , and wait 2 seconds after each printed file
Print every three lines of &quot; file &quot; as a comma separated line
Print every two lines in &quot; file &quot; on a single line separated by a space
Print every two lines in &quot; file &quot; on a single line separated by a space
Print extended file information for regular files found under the home directory whose names start with my
Print file extension assuming there is only one dot in the file name .
Print file information of command &quot; bash &quot;
Print file information of command &quot; passwd &quot;
Print file information of command &quot; studio &quot;
Print file information of command &quot; studio &quot;
Print file information of the executable file of command &quot; g + + &quot;
Print file information of the executable file of command &quot; gcc &quot;
Print file name without extension assuming there is only one dot in the file name .
Print file name without the last two extensions assuming the file name doesn &apos; t contain any other dots .
Print file name without the last two extensions assuming the file name doesn &apos; t contain any other dots .
Print file names of all files ending with &apos; * .csv &apos; in &apos; / home / ABC / files / &apos; directory
Print file size and user name with color support for each file in the current directory tree
Print file size with the file name
Print file system disk space usage
Print file system disk space usage and grand total for the root file system with sizes in powers of 1000
Print file system disk space usage in 1 KiB blocks of the current directory &apos; s file system
Print file system disk space usage in human readable format of the root filesystem
Print file system disk space usage in posix and human readable format , format as a table
Print file system disk space usage of the current directory &apos; s file system
Print file system disk space usage with a grand total
Print file system disk space usage with sizes in powers of 1000
Print file type information of the &quot; java &quot; executable
Print file type of command &quot; gcc &quot;
Print file type of the command &quot; c + + &quot;
Print file type of the executable file of command &quot; file &quot;
Print file type of the executable file of command &quot; file &quot;
Print file type of the executable file of command &quot; foo &quot;
Print file type of the executable file of command &quot; python &quot;
Print files created / modified in the last day
Print first 11 characters from $ line , print a tab , print the md5 sum of the file specified by the 13th and onward characters from $ line and print a null character at end without a trailing new line
Print first field from semicolon-seprated line $ string .
Print first field from semicolon-seprated line &lt; line &gt; .
Print first word of lines unique for &apos; file1 &apos; file
Print flow of random data , showing all non-printing characters
Print fourth column of data from text file text.txt where columns separated by one or more whitespaces .
Print fourth column of space-separated data from text file text.txt .
Print full date of yesterday
Print full path of command &quot; c + + &quot;
Print full path of command &quot; gradle &quot;
Print full path of command &quot; programname &quot;
Print full path of command &quot; python &quot;
Print full path of command &quot; python2.7 &quot;
Print groups of all users logged in
Print help on &apos; cat &apos; command usage
Print host name followed by &quot; : &quot; and the contents of &quot; / sys / block / sda / size &quot;
Print host name without a newline
Print how many files are inside each directory under the current one
Print info about all mounted file systems
Print info about all mounted file systems , and grand total statistic about available and used space
Print info about thread number of process with pid 1
Print information about all users who are logged in
Print information of the process running the current script as the current user
Print information of the root mount point
Print input &quot; your , text , here &quot; formatted to fit 70 characters per line breaking at spaces
Print joined strings from &apos; file &apos; , using space symbol as separator .
Print last 10 commands in history
Print last 10 commands in history with the first 7 characters removed
Print last day of April , 2009
Print last four bytes of string &apos; 0a.00.1 usb controller some text device 4dc9 &apos;
Print line number of each line in / etc / passwd file , where current user name is found
Print line , word and byte count for each file recursively and also show the total counts
Print line , word and byte counts for each .php files in current directory tree and also show the total counts
Print lines 10000 to 10010 from input &quot; seq 1 100000 &quot;
Print lines 15967 to 16224 in file &quot; dump.txt &quot;
Print lines 16225 to 16482 in file &quot; file &quot;
Print lines 347340107 through 347340206 in &quot; filename &quot;
Print lines containing string TEXT from all log files in the current directory .
Print lines in &quot; file1 &quot; that exist in &quot; file2 &quot;
Print lines in &quot; file1.txt &quot; that do not exist in &quot; file2.txt &quot;
Print lines in &quot; foo.txt &quot; that are found only once
Print lines in file &apos; file &apos; that do not match any word specified in file &apos; blacklist &apos; ( one word per line )
Print lines in file &apos; filename &apos; that do not match the regex &apos; pattern &apos;
Print lines in the sorted contents of &quot; a.txt &quot; that are not in the sorted contents of &quot; b.txt &quot;
Print lines in the sorted contents of &quot; file1 &quot; that are not in the sorted contents of &quot; file2 &quot;
Print lines in the sorted contents of &quot; file2 &quot; that are not in the sorted contents of &quot; file1 &quot;
Print lines in the sorted contents of &quot; second.txt &quot; that are not in the sorted contents of &quot; first.txt &quot;
Print lines of &apos; file &apos; reverted order , and reverted characterwise
Print lines that only unique ones in &apos; set1 &apos; and &apos; set2 &apos; files
Print lines unique and common to sorted files &quot; file1 &quot; and &quot; file2 &quot;
Print linux group names on multiple lines instead of single line output
Print local SRV record of domain &apos; _ etcd-client . _ tcp . &apos;
Print local files without descending non-local directories
Print ls output for all non-empty files under under current directory
Print multiline text &quot; ONBOOT = \ &quot; YES \ &quot; \ nIPADDR = 10.42.84.168 \ nPREFIX = 24 &quot; to the terminal , replacing &apos; \ n &apos; with newline symbol , and append that text to file / etc / sysconfig / network-scripts / ifcfg-eth4 as root user .
Print name of the file system containing $ path .
Print newline , word and byte count for all .h , .c , .cpp , .php and .cc files under current directory tree and also show the total counts
Print newline , word , and byte counts of each &apos; * .java &apos; file within current directory , and total newline , word , and byte counts
Print nothing because &apos; MYVAR &apos; string doesn &apos; t match with &apos; / &#91; ^ / &#93; + : &apos; pattern
Print nothing because B.txt is compared with itself .
Print number of bytes in $ file .
Print number of lines that equal in files &apos; / home / xyz / a.csv1 &apos; and &apos; / home / abc / tempfile &apos;
Print numbered list of all third-level files under the current directory
Print numbered list of all top-level files in the current directory , with name containing &apos; android &apos;
Print numbers 1 through 10 separated by &quot; : &quot;
Print numbers from 1 to 10 using up to 4 processes
Print numbers from 1 to 10 with 2 values per line
Print numbers from 1 to 10 with padded leading zeros
Print numbers from 1 to 100
Print numbers from 1 to 30 with 0 padding to a width of 2
Print numbers from 1 to 30 with a leading 0
Print numbers from 1 to 30 with equalized 0 padding
Print numbers from 1 to the number in variable &quot; $ 1 &quot;
Print numerically sorted list of unique strings from &apos; ip _ addresses &apos; file , with number of occurrences of each string .
Print onlt last slash-separated field from $ PATH value
Print only alphanumeric values from &quot; / dev / urandom &quot;
Print only common file names in sorted listings of directory &apos; dir1 &apos; and &apos; dir2 &apos;
Print only common strings in content of files &apos; file1.sorted &apos; and &apos; file2.sorted &apos;
Print only common strings in sorted content of files &apos; file1 &apos; and &apos; file2 &apos;
Print only digits in variable &quot; $ name &quot;
Print only first line of &apos; file &apos; content , formatted as 29-symbol wide column
Print only first line of &apos; file &apos; content , formatted as 29-symbol wide column , regarding space symbol as a word separator
Print only group names from / etc / group .
Print only lines from &apos; file1.txt &apos; that not present in &apos; file2.txt &apos; and beginning with &apos; Q &apos;
Print only printable characters from &quot; / dev / urandom &quot;
Print only second from the end field from slash-separated string in file &apos; datafile &apos;
Print only strings from file &apos; file2 &apos; that not found in &apos; file1 &apos;
Print only the line &quot; foo / / / &quot; given two empty directories foo and bar
Print only the number of lines in file &quot; $ f &quot;
Print only unique lines in files &apos; set1 &apos; and &apos; set2 &apos;
Print only unique lines of &apos; file _ name &apos; file
Print out the contents of all * .txt files in the home directory
Print out the contents of all * .txt files in the home directory
Print out the full path name of &quot; mypathname &quot; with dots resolved
Print out the names and types of all files in the current directory tree
Print out the names of all directories in mydir recursively
Print output of script &apos; trap.sh &apos;
Print pathname of a file that is connected to the standard output of the command &quot; yes &quot;
Print pathnames of all files in the current directory and below skipping directories named SCCS and files in them
Print pathnames of all files in the current directory and below skipping files under SCCS directories
Print permissions of every directory in the current directory tree
Print process tree , adjusting output width with a screen size .
Print received input to the terminal
Print relative path of device of disk with UUID &quot; b928a862-6b3c-45a8-82fe-8f1db2863be3 &quot;
Print reverse lookup for IP address 72.51.34.34
Print reverse lookup for adress 127.0.0.1
Print revesed second from the end dot-bounded field in $ i value
Print second field from semicolon-seprated line $ string .
Print second field from semicolon-seprated line &lt; line &gt; .
Print second section of data coming from stdin where sections are separated by one or more whitespace .
Print second section of space-separated data coming from stdin .
Print second section of space-separated data coming from stdin .
Print second section of space-separated data from text file &quot; a &quot; .
Print sed commands that would replace all occurrences of &apos; previousword &apos; with &apos; newword &apos; in all regular files with &apos; .cpp &apos; extension under &apos; / myprojects &apos; directory tree
Print short DNS lookup for each domain name in a file &apos; list &apos;
Print short TXT record of domain o-o.myaddr.l.google.com from nameserver 8.8.8.8
Print short TXT record of domain o-o.myaddr.l.google.com from nameserver ns1.google.com
Print sorted list of strings from &apos; ip _ addresses &apos; file , with number of occurrences of each string .
Print source directory of bash script
Print source of the file system containing $ path .
Print space separated list of numbers from &quot; $ start &quot; to &quot; $ end &quot;
Print space separated list of numbers from &quot; $ start &quot; to &quot; $ end &quot;
Print space separated numbers from 1 to 10
Print standard input to standard output line by line , discarding any adjascent duplicate lines .
Print string &quot; 123 &quot; once with &apos; 1 &apos; replaced by &apos; a &apos; and second time replaced by &apos; b &apos;
Print summary of files present only in dir1 .
Print summary of new / missing files , and which files differ between / path / to / folder1 and / path / to / folder2 , sorted alphabetically .
Print summary of new / missing files , and which files differ between dir1 and dir2 .
Print summary of new / missing files , and which files differ between dir1 and dir2 .
Print summary of new / missing files , and which files differ between dir _ one and dir _ two , sorted alphabetically .
Print summary of new / missing files , and which files differ between folder1 and folder2 , excluding those matching pattern &quot; node _ modules &quot; .
Print summary of new / missing files , and which files differ between folder1 and folder2 .
Print symlink resolved script file name
Print the $ N &apos; th line from file by replacing commas ( &apos; , &apos; ) with newlines
Print the 5th space separated fields in &quot; file &quot; as a comma separated list
Print the IP addresses for the current host name
Print the IP addresses for the current host name
Print the IP addresses for the current host name
Print the IP addresses of the host name
Print the MD5 message digest of &quot; / path / to / destination / file &quot;
Print the absolute path of &quot; $ path &quot;
Print the absolute path of third-level files under the current directory tree and number the output
Print the average round trip time of 5 pings to &quot; google.com &quot;
Print the average round trip time of 5 pings to &quot; google.com &quot; from OSX
Print the base name of the current working directory
Print the base name of the current working directory
Print the base name of the current working directory
Print the base name of the current working directory
Print the base name of the current working directory
Print the base name via grep of the current working directory
Print the basename from a colon separated path &apos; a : b : c : d : e &apos;
Print the byte count of all regular files found in the current directory tree
Print the calendar for February 1956
Print the characters in $ b that match with any character in $ a without printing any newline
Print the characters in $ b that match with any character in $ a without printing any whitespace in-between
Print the commands that would execute &quot; myfile &quot; on all .ogv files from the current directory tree
Print the compressed size , uncompressed size , compression ratio , and uncompressed filename of &quot; file.zip &quot;
Print the contents of &quot; $ FILE &quot; starting from line 2
Print the contents of &quot; $ { SPOOL _ FILE } &quot; file to the console and append to &quot; $ { LOG _ FILE } &quot; file
Print the contents of &quot; Little _ Commas.TXT &quot;
Print the contents of &quot; file &quot; in reverse order
Print the contents of &quot; filename &quot;
Print the contents of &quot; foo.txt &quot; starting with line 2
Print the contents of &quot; my _ script.py &quot;
Print the contents of &quot; n &quot;
Print the contents of &quot; numbers.txt &quot;
Print the contents of &quot; order.txt &quot;
Print the contents of &quot; xx.sh &quot;
Print the contents of &quot; ~ / .ssh / config &quot;
Print the current date followed by &quot; : $ line &quot;
Print the current date followed by &apos; doing stuff &apos;
Print the current date in &apos; % H : % M : % S &apos; format followed by the string &apos; : done waiting. both jobs terminated on their own or via timeout ; resuming script &apos;
Print the current default full path of the &quot; java &quot; executable
Print the current directory
Print the current directory
Print the current directory
Print the current directory tree
Print the current directory tree with file permissions
Print the current directory tree with file sizes
Print the current directory tree with the date of last modification for each file or directory
Print the current user &apos; s mail file in &quot; / var / spool / mail &quot;
Print the current working directory and the base name of &quot; $ 1 &quot;
Print the current working directory prepended by &quot; pwd : &quot;
Print the current working directory with resolved symbolic links
Print the current working directory without a trailing newline
Print the date followed by the host name
Print the date formatted with &quot; % a % x % X &quot; followed by the host name
Print the day 1 day ago
Print the day at 1 day ago in 2 months from now
Print the directories that are taken by the glob pattern $ SrvDir *
Print the directory name of the full real path to the current script
Print the directory name of the physical current working directory
Print the directory name of the real full path of &quot; relative / path / to / file &quot; where each symbolic link component must exist
Print the directory of the full path to the current script
Print the empty directories and files under current directory
Print the empty files / directories among empty1 , empty2 and not _ empty
Print the entire saved command history
Print the file content of command &quot; &#91; whatever &#93; &quot;
Print the file content of command &quot; f &quot;
Print the file content of command &quot; f &quot;
Print the file names along with their sizes under current directory tree
Print the file paths and their sizes for all files under full _ path _ to _ your _ directory
Print the file sizes along with their paths for all * .txt ( case insensitive ) files / directories under current directory tree
Print the file sizes along with their paths for all * .txt ( case insensitive ) files / directories under current directory tree
Print the file system &quot; file / goes / here &quot; is on
Print the file system disk space usage for &quot; / dev / disk0s2 &quot; if exists
Print the filenames taken by the glob pattern * with null character as the delimiter
Print the files in the current directory as a list of comma separated values
Print the files in the current directory as a list of semicolon separated values
Print the files in the current directory as a list of semicolon separated values
Print the files under current directory twice per line
Print the first 10 files or directories found in the / tmp directory tree by &apos; find &apos;
Print the first 10 files or directories found in the current directory tree by &apos; find &apos;
Print the first 2 lines of tree &apos; s help message by redirecting it from standard error to standard output
Print the first 24 alphanumeric characters from &quot; / dev / urandom &quot; , determining C locale for all categories
Print the first 32 hexadecimal characters from &quot; / dev / urandom &quot;
Print the first 32 hexadecimal characters from &quot; / dev / urandom &quot; , determining C locale for character handling functions
Print the first 5 decompressed lines of compressed file &quot; $ line &quot;
Print the first line of &quot; filename &quot; as a hex dump of characters
Print the first line of &quot; seq 1 10000 &quot;
Print the first line of each file under the home directory
Print the first line of every file matching pattern &apos; file ? B &apos; in the xargstest / directory tree
Print the first line of output after alphabetically sorting the file &quot; set &quot;
Print the first two bytes of &quot; my _ driver &quot; in octal
Print the full name of &quot; $ USER &quot;
Print the full path directory name of each &quot; file.ext &quot; found under the current directory
Print the full path of a &apos; file.txt &apos; file in the current folder .
Print the full path of a file under the current working directory with inode number specified on standard input
Print the full path of command &quot; cc &quot;
Print the full path of command &quot; gcc &quot;
Print the full path of command &quot; rails &quot;
Print the full path of executable &quot; lshw &quot;
Print the full path prefix for all files in the current directory tree as a list
Print the full real path of &quot; / dev / disk / by-uuid / $ 1 &quot; followed by &quot; is mounted &quot;
Print the full real path of &quot; / dev / disk / by-uuid / $ 1 &quot; followed by &quot; is not mounted &quot;
Print the given file name &apos; s extensions .
Print the grand total disk usage of all files listed in &quot; files.txt &quot;
Print the grand total file system disk space usage with block sizes in units of TiB
Print the help message for tree
Print the help message of command &quot; split &quot;
Print the hexadecimal bytes and printable characters of &quot; Hello world &quot;
Print the host name
Print the kernel configuration options found in &quot; / proc / config.gz &quot;
Print the largest 20 files under current directory
Print the largest 20 files under current directory
Print the last 10 commands in history
Print the last 10 commands in history
Print the last 10 commands in history
Print the last 10 lines of &quot; great-big-file.log &quot;
Print the last 10 lines of &apos; / var / log / syslog &apos; , printing out any additional data appended to the file
Print the last 10 lines of the file &apos; / var / log / syslog &apos;
Print the last 1000 lines of all files matching &quot; / var / spool / cron / * &quot;
Print the last line of &quot; $ file1 &quot; to the console and append to &quot; $ file2 &quot;
Print the last line of the alphabetically sorted lines in file &quot; set &quot;
Print the last space separated word from &quot; Your string here &quot;
Print the last space separated word from &quot; a b c d e &quot;
Print the line with most consecutive repeats prefixed with its count from standard input
Print the lines of file &quot; strings &quot; not specified in file &quot; index &quot;
Print the lines of file &quot; strings &quot; specified in file &quot; index &quot;
Print the list of .txt files under and below the current directory
Print the list of 1st level subdirectories in / fss / fin
Print the list of all directories in the / myfiles directory tree
Print the list of all directories under the current directory and below
Print the list of all files except files named BBB
Print the list of all files in the current directory except for SVN , CVS , GIT , and binary files
Print the list of all files under the current directory and below
Print the list of all regular files from the current directory tree that contain &quot; confirm &quot; , case insensitive
Print the list of all regular files in the current directory and below
Print the list of all regular files on the system using &quot; echo &quot;
Print the list of all regular files residing in the current directory and below
Print the list of all subdirectories of the current directory
Print the list of directories residing in the current directory tree
Print the list of directories that are present in the / mnt / raid directory tree
Print the list of files and directories of the / etc directory
Print the list of files and directories of the / etc directory
Print the list of files and directories of the / etc directory
Print the list of files and directories of the current directory
Print the list of files and directories of the current directory including &quot; &quot; .
Print the list of files changed within the last minute
Print the list of files from the &quot; / zu / durchsuchender / Ordner &quot; directory tree whose names begin with &quot; beispieldatei &quot; and which contain string &quot; Beispielinhalt &quot;
Print the list of files in directory / tmp / a1 recursively
Print the list of files in the current directory tree excluding those whose paths contain &quot; exclude3 &quot; or &quot; exclude4 &quot;
Print the list of files in the current directory tree ignoring .svn , .git , and other hidden directories
Print the list of files in the current directory tree skipping Git files
Print the list of files in the current directory tree skipping SVN files
Print the list of files in the current directory tree skipping SVN files
Print the list of files in the current directory tree skipping SVN files
Print the list of files in the current directory tree with &quot; xx &quot; preceding and following each filename
Print the list of files in the home directory tree whose names begin with &quot; Foto &quot;
Print the list of non-hidden directories in the current directory
Print the list of regular files from the current directory that were last modified on November , 22
Print the list of regular files from the current directory tree that were modified less than 2 days ago
Print the list of regular files in the current directory and all subdirectories
Print the list of the current directory &apos; s subdirectories
Print the list of the current directory &apos; s subdirectories
Print the list of the current directory &apos; s subdirectories
Print the list of the subdirectories of / path / to / dir
Print the list of the subdirectories of the current directory
Print the most recently modified file
Print the most repeated line in &quot; list2.txt &quot; that exists in &quot; list1.txt &quot; prefixed by the number of occurrences
Print the name of &quot; file1 &quot; if this file is newer than &quot; file2 &quot;
Print the names and sizes of all regular files from the current directory tree
Print the names and sizes of regular files residing in the &quot; dir &quot; directory tree
Print the names of all files and directories in the current directory tree
Print the names of all files and directories in the current directory tree
Print the names of all files from the / tmp / dir1 directory tree
Print the names of all files in or below the current directory , with all of the file permission bits S _ ISUID , S _ ISGID , and S _ IWOTH set
Print the names of all files in the home directory and its subdirectories recursively whose MIME type is video
Print the names of all hidden regular files from the current directory
Print the names of all regular files in the current directory tree
Print the names of all the files from directory tree ~ / some / directory whose names end in &quot; rb &quot;
Print the names of any differing files in directories &quot; dir1 / &quot; and &quot; dir2 / &quot;
Print the names of the directories from the paths expanded by the glob pattern / path / to / directory / *
Print the names of the directories from the paths expanded by the glob pattern / path / to / directory / *
Print the names of the directories from the paths expanded by the glob pattern / path / to / directory / *
Print the names of the subdirectories of / usr / local / svn / repos / prepending &quot; / usr / local / backup &quot; to them
Print the newest * .txt file under current directory with timestamp and path
Print the number of entries ( files , directories , symlinks , etc . ) in the subdirectories of the current directory , stopping search at any device mount points .
Print the number of lines for each * .txt file from the $ DIR directory tree
Print the number of lines in file.txt .
Print the number of regular files found in the current directory tree
Print the path composed of the current working directory and the directory containing &quot; $ 0 &quot;
Print the path names of all .png files in the / home / kibab directory tree
Print the path names of all files and directories in the current directory tree
Print the path names of all regular .rb files prefixing them with string &quot; Hello , &quot;
Print the pathnames of all files from the / tmp / dir1 directory tree
Print the paths of the directories from the paths expanded by the glob pattern / path / to / directory / *
Print the percentage of packets lost of the 5 packets sent to &quot; $ host &quot;
Print the physical current working directory
Print the real path of &quot; $ F &quot; where each symbolic link component must exist
Print the second line of output of &quot; ls -l &quot;
Print the second line of output of &quot; ls -l &quot;
Print the second space separated fields from standard input
Print the size for every * .ogg file found under the home directory
Print the sizes and names of all TXT files from the current directory tree
Print the sizes of all files from the current directory tree
Print the sorted and unique parent directory paths appended with : of all the files that are executable by owner under ~ / code directory without descending into hidden directories
Print the sorted uniqe list of folders in compressed archive nginx-1.0.0.tar.gz
Print the sorted unique column of usernames of users who are currently logged in
Print the sorted unique column of usernames of users who are currently logged in without the header
Print the terminal file of the users who are logged in with &quot; admin &quot; in their name
Print the text file paths that match &apos; needle text &apos; in their contents under &apos; my _ folder &apos; recursively
Print the time of last boot
Print the type of the current shell
Print the unique lines from standard input preserving the order they appear
Print the user name of the current user
Print the user name of the current user
Print three lines of &quot; some line &quot; followed by a random number
Print timestamp as HH : MM : SS
Print true directory name of the current directory
Print unique lines in &quot; file1 &quot; compared to &quot; file2 &quot; in the order they appear
Print unique lines in &quot; file _ a &quot; and &quot; file _ b &quot;
Print unique lines in sorted &quot; file1 &quot; compared to sorted file &quot; file2 &quot;
Print unique lines in sorted file &quot; A &quot; when compared to sorted files &quot; B &quot; , &quot; C &quot; , and &quot; D &quot;
Print unique lines in sorted file &quot; a.txt &quot; compared to sorted file &quot; b.txt &quot;
Print unique lines of &quot; a &quot; and &quot; b &quot;
Print unique lines of &quot; second-file-sorted.txt &quot; compared to &quot; first-file-sorted.txt &quot;
Print unique lines of sorted &quot; File 1 &quot; compared with sorted &quot; File 2 &quot;
Print unique lines of sorted file &quot; A.txt &quot; compared to sorted file &quot; B.txt &quot;
Print unique lines of sorted file &quot; A.txt &quot; compared to sorted file &quot; B.txt &quot;
Print unique lines of sorted file &quot; a &quot; compared with sorted file &quot; b &quot;
Print unique lines of sorted file &quot; b &quot; compared with sorted file &quot; a &quot;
Print unique lines of sorted file &quot; f1 &quot; compared to sorted file &quot; f2 &quot;
Print unique lines of sorted file &quot; file1 &quot; when compared with the list of first space separated fields of all sorted strings of file &quot; file2 &quot;
Print unique lines of sorted file &quot; second.txt &quot; compared to sorted file &quot; first.txt &quot;
Print unique list of who is logged in and the time of login formatted in columns
Print variable &quot; $ OPTARG &quot; &quot; $ opt &quot; times
Print variable &quot; $ module &quot; in formatted columns with at most 80 characters per line
Print variable &quot; $ opt &quot; with double quotes deleted
Print what year it was 222 days ago
Print whether &quot; $ file &quot; and &quot; $ { file / $ { dir1 } / $ { dir2 } } &quot; differ
Print whether the sorted contents of &quot; set1 &quot; and &quot; set2 &quot; differ
Print whether the unique contents of &quot; set1 &quot; and &quot; set2 &quot; differ
Print which files differ between &quot; dir1 / &quot; and &quot; dir2 / &quot;
Print which files differ between &quot; folder1 &quot; and &quot; folder2 &quot; treating all files as text
Print which files differ between dir1 and dir2 , treating absent files as empty
Print which files differ in &quot; / tmp / dir1 &quot; and &quot; / tmp / dir2 &quot; recursively
Print which files differ in &quot; PATH1 / &quot; and &quot; PATH2 / &quot; recursively excluding any files that match any pattern in &quot; file1 &quot;
Print which files differ in &quot; dir1 &quot; and &quot; dir2 &quot; recursively
Print which files differ in &quot; dir1 &quot; and &quot; dir2 &quot; recursively
Print which files differ in &quot; dir1 &quot; and &quot; dir2 &quot; recursively
Print which files differ in &quot; dir _ one &quot; and &quot; dir _ two &quot; recursively and sort the output
Print which files differ in &quot; folder1 &quot; and &quot; folder2 &quot; excluding &quot; node _ modules &quot; recursively , output in two columns , and paginate the output
Print working directory separated by newlines instead of forward slashes
Print yesterday &apos; s date
Print yesterday &apos; s date as yyy : mm : dd
Print yesterday &apos; s date as yyy : mm : dd
Print yesterday &apos; s date information in &quot; % a % d / % m / % Y &quot; format
Print your / dir if it &apos; s an empty directory
Print your / dir if it &apos; s empty
Print your / dir if it &apos; s empty
Prints &quot; $ NEWFILE &quot; to the terminal and file &apos; / etc / timezone &apos; as a root user .
Prints $ m latest modified files within the $ d folder , using $ f format for printing timestamp .
Prints Kb size of all top-level files and folders in a current folder in descending order in human readable format .
Prints Kb size of all top-level files and folders in a current folder in descending order .
Prints a random line from $ FILE
Prints a random number between 2000 and 65000
Prints all Saturday days of a current month .
Prints all business days in a current month .
Prints calendar for a current month .
Prints calendar of February , 1900 .
Prints calendars of July , 2009 and July , 2010 side-by-side .
Prints current directory name
Prints current month calendar , without highlighting of a current date .
Prints directory where the executing script ( $ 0 ) is located .
Prints directory where the executing script ( $ 0 ) is located .
Prints file.txt without the last N bytes
Prints first found folder that contains &apos; ssh &apos; file and has &apos; bin &apos; in path .
Prints folder path where $ mystring file is located .
Prints folder where current script is located
Prints folder where current script is located
Prints full path of a &apos; cat.wav &apos; file in a current folder .
Prints full path to files in a current folder .
Prints full path to files in a current folder .
Prints full path to files with dot in name in a current folder .
Prints full process tree with id number of each process .
Prints groups list that current user belongs to .
Prints groups list that user &apos; el &apos; belongs to .
Prints help on &apos; cp &apos; utility .
Prints hierarchical process tree .
Prints information about active network interfaces in system .
Prints information about user $ euids currently on machine and its processes , without printing header .
Prints last modified file in a current folder with modification time .
Prints last modified file in a current folder .
Prints latest modified file in a directory
Prints line count of each file within current directory .
Prints line count of each file within current directory .
Prints lines count in each * .c file of a current folder and total count .
Prints lines count of each * .php file in a current folder and subfolders , and prints total count .
Prints list of folders containing &apos; .git &apos; , searching recursively from a current folder .
Prints listing of a root folder including hidden files , and saves output to &apos; output.file &apos; .
Prints logged in users in sorted order .
Prints long listing of &quot; $ dir / $ file &quot; file .
Prints long listing of $ { 0 } file .
Prints long listing of content in a root folder , including hidden files , with human-readable sizes , and stores output to &apos; / root / test.out &apos; file .
Prints long listing of content in a root folder , including hidden files , with human-readable sizes , and stores output to &apos; / root / test.out &apos; file .
Prints long listing of content in the current folder with C-style escapes for nongraphic characters
Prints long listing of directories &quot; . / my dir &quot; and &quot; . / anotherdir &quot; sorted from oldest to newest , with appended indicators .
Prints long listing of directories &apos; / tmp &apos; , &apos; / tnt &apos; themselves .
Prints long listing of directory $ var sorted from oldest to newest , with appended indicators .
Prints long listing of file &apos; file.ext &apos; .
Prints long listing of the current directory and top-level directories within , sorted from oldest to newest , with appended indicators .
Prints long listing of the current directory , sorted from oldest to newest , with appended indicators .
Prints long listing of top ten most memory using processes in a system .
Prints long recursive listing of all content of a current folder , saving output to &apos; output.file &apos; .
Prints long recursive listing of all content of a root folder , appending output to &apos; output.file &apos; .
Prints long recursive listing of all content of a root folder , saving output to &apos; output.file &apos; .
Prints message info about filename and location of the current script
Prints name of temporary file but doesn &apos; t create nothing .
Prints newline , word , and byte count for each * .py in a current folder .
Prints number of files with extension &quot; $ { EXTENSION } &quot; in the &quot; $ { SEARCHPATH } &quot; directory .
Prints only first ten characters of each string of file $ file .
Prints only unique strings of those stored in variables $ COMMANDS and $ ALIASES .
Prints out all the logged-in users along with their group information .
Prints path location of $ BASH _ SOURCE file .
Prints path to folder that contains file &quot; / path / to / vm.vmwarevm / vm.vmx &quot; .
Prints path to folder that contains file &quot; / path / to / vm.vmwarevm / vm.vmx &quot; .
Prints path to folder that contains target of the symbolic link .. / .. / .. / .. / etc / passwd .
Prints path to the folder that contains target of symbolic link .. / .. / .. / .. / etc / passwd .
Prints path to the target of symbolic link &apos; relative / path / to / file &apos;
Prints process tree for the current process with ASCII line drawing characters .
Prints process tree of a current process with id numbers and parent processes .
Prints process tree of a process having id $ ID with parent processes .
Prints process tree of the current command process .
Prints process tree of the current process with parent processes .
Prints process tree of user &apos; user &apos; processes .
Prints process tree with command line arguments and process id numbers .
Prints process tree with command line arguments of a process having id $ PID .
Prints process tree , showing only strings with &apos; MDSImporte &apos; , and chopping output after $ { WIDTH } characters .
Prints random line from file $ FILE .
Prints real path of the folder containing $ 0 file .
Prints running process that has id &apos; pid &apos; with command line arguments .
Prints sequentially listing of a current folder and calendar of a current month .
Prints shell option &apos; globstar &apos; with indication of its status .
Prints sizes of all top-level folders in a current folder with human-readable format and descending order .
Prints sorted list of logged in users .
Prints string &quot; 0 1 * * * / root / test.sh &quot; to the terminal , and append it to file &apos; / var / spool / cron / root &apos;
Prints strings with MAC address configuration of each network interface in system .
Prints strings with text &quot; texthere &quot; in all files recursively in a current folder .
Prints the Nth line of output from &apos; ls -1 &apos;
Prints the absolute directory path of the current script preceded by the string &quot; dirname / readlink : &quot;
Prints the file path composed from the path where symlink target file is located , and name of the symbolic link itself .
Prints the first N bytes of file.txt
Prints top-ten biggest top-level folders within a &apos; var &apos; folder .
Prints total count of lines of all * .php files in a current folder and subfolders .
Prints total number of lines of all * .php files in a current folder and subfolders .
Prints what day it was 222 days ago
Prints what year it was 222 days ago
Prints year-month-date format for given time
Prints yesterday &apos; s date information
Process each file beginning with &quot; file &quot; in the current directory as an argument to &quot; bash script.sh &quot;
Processes all files recursively in / var / spool / cron / tabs folder and filters out all strings with &apos; # &apos; .
Prompt the user with a question &quot; This is the question I want to ask ? &quot; and save &quot; y &quot; or &quot; n &quot; in variable &quot; REPLY &quot; in zsh
Prompt user to type a list of cron jobs directly at the terminal , then use these replacing previously existing cron jobs .
Put the absolute directory path to the current script to MY _ DIR variable
Puts the job 1 in the background .
Query SRV records for domain &apos; _ kerberos . _ udp.foo.com &apos;
Query about which keys invoke the named function
Read 10 bytes from $ 0 and print them by replacing the set &apos; \ 000- \ 377 &apos; with &apos; # &apos;
Read a line from an interactive shell &apos; s standard input into variable &quot; message &quot; without backslash escapes and prompt $ &apos; Please Enter a Message : \ n &apos;
Read a line from standard input
Read a line from standard input and save each word in the bash array variable &quot; arr &quot;
Read a line from standard input and save each word in the bash array variable &quot; first &quot;
Read a line from standard input and save received words sequentially in variables XPID XUSERID XPRIORITY XVIRTUAL XRESIDENT XSHARED XSTATE XCPU XMEM XTIME XCOMMAND
Read a line from standard input and save response in variable &quot; VARNAME &quot;
Read a line from standard input in an interactive shell into variable &quot; input &quot; with prompt &quot; Do that ? &#91; Y , n &#93; &quot; and suggestion &quot; Y &quot;
Read a line from standard input in an interactive shell with prompt in variable &quot; myprompt &quot; interpreted as PS1 is interpreted
Read a line from standard input into the first argument ( &quot; $ 1 &quot; ) using an interactive shell with prompt &quot; &gt; &quot;
Read a line from standard input into the variable &quot; yn &quot; using the first argument as the prompt ( &quot; $ 1 &quot; )
Read a line from standard input into the variable &quot; yn &quot; with the prompt &quot; Do you wish to install this program ? &quot;
Read a line from standard input into variable &quot; ENTERED _ PASSWORD &quot; without echoing the input
Read a line from standard input into variable &quot; PASSWORD &quot;
Read a line from standard input into variable &quot; REPLY &quot; with prompt &quot; $ * &quot;
Read a line from standard input into variable &quot; REPLY &quot; with prompt &quot; $ 1 ( &#91; y &#93; es or &#91; N &#93; o ) : &quot;
Read a line from standard input into variable &quot; REPLY &quot; with prompt &quot; &gt; $ line ( Press Enter to continue ) &quot;
Read a line from standard input into variable &quot; REPLY &quot; with prompt &quot; Press &#91; Enter &#93; key to release lock &quot; ...
Read a line from standard input into variable &quot; SSHPASS &quot; with prompt &quot; Password : &quot; and without echoing the input
Read a line from standard input into variable &quot; YESNO &quot; ignoring backslash escapes and using the prompt &quot; $ ( echo $ @ ) ? &#91; y / N &#93; &quot;
Read a line from standard input into variable &quot; a &quot; without backslash escapes
Read a line from standard input into variable &quot; ans &quot; without backslash escapes
Read a line from standard input into variable &quot; date &quot; with prompt &quot; BGC enter something &quot; , and storing typed backslash as backslash symbol
Read a line from standard input into variable &quot; dir &quot;
Read a line from standard input into variable &quot; foobar &quot; and suppress showing user input
Read a line from standard input into variable &quot; i &quot; with the prompt &quot; Again ? Y / n &quot;
Read a line from standard input into variable &quot; message &quot; with escaped prompt &quot; Please Enter a Message : \ n \ b &quot;
Read a line from standard input into variable &quot; message &quot; with escaped prompt &quot; \ nPlease Enter \ na Message : &apos; &quot;
Read a line from standard input into variable &quot; message &quot; with prompt &quot; Please Enter a Message : &quot; followed by a newline
Read a line from standard input into variable &quot; message &quot; with prompt &quot; Please Enter a Message : &quot; followed by a newline
Read a line from standard input into variable &quot; message &quot; with the prompt &quot; Please Enter a Message : $ cr &quot;
Read a line from standard input into variable &quot; password &quot; without echoing the input
Read a line from standard input into variable &quot; password &quot; without echoing the input and using the prompt &quot; Password : &quot;
Read a line from standard input into variable &quot; prompt &quot; with the prompt &quot; Are you sure you want to continue ? &lt; y / N &gt; &quot;
Read a line from standard input into variable &quot; response &quot; ignoring backslash escapes and using the prompt &quot; $ { 1 : -Are you sure ? &#91; y / N &#93; } &quot;
Read a line from standard input into variable &quot; response &quot; ignoring backslash escapes and using the prompt &quot; Are you sure ? &#91; y / N &#93; &quot;
Read a line from standard input into variable &quot; response &quot; without backslash escapes using the prompt &quot; About to delete all items from history that match \ &quot; $ param \ &quot; . Are you sure ? &#91; y / N &#93; &quot;
Read a line from standard input into variable &quot; text &quot; with the prompt &quot; Enter Here : &quot;
Read a line from standard input with a timeout of 0.1 seconds and prompt &quot; This will be sent to stderr &quot;
Read a line from standard input with a timeout of 10 seconds
Read a line from standard input with prompt &quot; &lt; Your Friendly Message here &gt; : y / n / cancel &quot; and save the response to variable &quot; CONDITION &quot;
Read a line from standard input with prompt &quot; Are you alright ? ( y / n ) &quot; and save the response to variable &quot; RESP &quot;
Read a line from standard input with prompt &quot; Are you sure you wish to continue ? &quot;
Read a line from standard input with prompt &quot; Are you sure ? &#91; Y / n &#93; &quot; and save response in variable &quot; response &quot;
Read a line from standard input with prompt &quot; Continue ( y / n ) ? &quot; and save response in variable &quot; CONT &quot;
Read a line from standard input with prompt &quot; Continue ( y / n ) ? &quot; and save response in variable &quot; choice &quot;
Read a line from standard input with prompt &quot; Enter your age : \ n &quot;
Read a line from standard input with prompt &quot; Enter your choice : &quot; and save response to variable &quot; choice &quot;
Read a line from standard input with prompt &quot; Enter your choice : &quot; , arrow keys enabled , and &quot; yes &quot; as the default input , and save the response to variable &quot; choice &quot;
Read a line from standard input with prompt &quot; Is this a good question ( y / n ) ? &quot; and save the response to variable &quot; answer &quot;
Read a line of standard input in an interactive shell
Read a line of standard input into variable &quot; _ command &quot; with the prompt as the current working directory followed by &quot; $ &quot;
Read a line of standard input into variable &quot; input _ cmd &quot; with prompt &quot; command : &quot;
Read a line of standard input with prompt &quot; Enter the path to the file : &quot; and suggestion &quot; / usr / local / etc / &quot; and save the response to variable &quot; FILEPATH &quot;
Read a line of standard input with prompt &quot; Enter your choice : &quot; in an interactive shell and save the response to variable &quot; choice &quot;
Read a line of standard input with prompt &quot; My prompt : &quot; and save it to variable &quot; varname &quot;
Read a single character from standard input and do not allow backslash to escape characters
Read a single character from standard input into variable &quot; REPLY &quot; ignoring backslash escapes and using the prompt &quot; $ { 1 : -Continue ? } &#91; y / n &#93; : &quot;
Read a single character from standard input into variable &quot; ans &quot;
Read a single character from standard input into variable &quot; doit &quot; with prompt &quot; Do that ? &#91; y , n &#93; &quot;
Read a single character from standard input into variable &quot; key &quot; without backslash escapes and using an interactive shell with the prompt $ &apos; Are you sure ( Y / n ) : &apos; and default value $ &apos; Y &apos;
Read a single character from standard input into variable &quot; key &quot; without backslash escapes and using the prompt &quot; Press any key to continue &quot; ...
Read a single character from standard input into variable &quot; key &quot; without backslash escapes , with a timeout of 5 seconds , and with the prompt &quot; Press any key in the next five seconds &quot; ...
Read a single character from standard input into variable &quot; runCommand &quot; with the prompt &quot; Pick a letter to run a command &#91; A , B , or C for more info &#93; &quot;
Read a single character from standard input with delimeter &quot; and no echo
Read a single character from standard input with prompt &quot; Are you sure ? &quot;
Read a single character from standard input with prompt &quot; Are you sure ? ( y / n ) &quot;
Read a single character from standard input with prompt &quot; Is this a good question ( y / n ) ? &quot; and timeout of 3 seconds and save the response to variable &quot; answer &quot;
Read a single character from standard input with prompt &quot; Is this a good question ( y / n ) ? &quot; and save the response to variable &quot; answer &quot;
Read a single line from standard input and save to variable &quot; line &quot;
Read hexadecimal bytes from device &quot; / dev / midi1 &quot;
Read line from file descriptor 4 and store received input in &apos; line &apos; variable
Read lookup requests from text file &apos; 1.txt &apos; and uses them to fetch TXT records .
Read one character from standard input into variable &quot; REPLY &quot;
Read one character from standard input into variable &quot; REPLY &quot;
Read one character from standard input into variable &apos; c &apos;
Read standard input and replace any repeated characters except spaces with a single instance
Read standard input until a null character is found and save the result in variable &quot; f2 &quot;
Read standard input until a null character is found and save the result in variable &quot; line &quot;
Read standard input until a null character is found and save the result in variable &quot; line &quot;
Read the first 10 characters from standard input in an interactive shell into variable &quot; VAR &quot;
Read the first line of output from &quot; du -s $ i &quot; into variable &quot; k &quot; in ksh
Read the history file $ HISTFILE and append the contents to the history list
Read the history file and append the contents to the history list
Read the raw input of &quot; / dev / input / mice &quot; as hexadecimal bytes with 3 bytes per line
Read two bytes from &quot; / dev / urandom &quot; and print them as an unsigned integer
Read yesterday &apos; s date with format &quot; % a % d / % m / % Y &quot; into variable &quot; dt &quot; in a subshell
Receive input and print it to terminal
Receive input and print it to terminal preceeding with line number
Receive pattern to search for on the standard input and print only matching part of lines from file &apos; f.html &apos;
Records the number of occurences of &apos; needle &apos; in the array &apos; haystack &apos; into the variable &apos; inarray &apos;
Recursively add &quot; .jpg &quot; to all files in the current directory tree
Recursively add &quot; .jpg &quot; to all files without an extension in the directory tree &quot; / path &quot;
Recursively add read and directory access to all permissions of all files and directories
Recursively add read and execute permissions to all files and folders in &quot; directory &quot;
Recursively add user write permission to all files under &quot; / path / to / git / repo / objects &quot;
Recursively and forcibly removes $ TMP folder with all content .
Recursively archive &quot; test / a / &quot; to &quot; test / dest &quot; excluding &quot; test / a / b / c / d &quot;
Recursively change &quot; / usr / local &quot; owner to the current user and group to admin
Recursively change all permissions under &quot; theDirectory / &quot; to 777 ( read , write , execute for all users )
Recursively change owner and group of &quot; / usr / local / rvm / gems / ruby-2.0.0-p481 / &quot; to the current user
Recursively change owner and group to &quot; $ JBOSS _ AS _ USER &quot; of &quot; $ JBOSS _ AS _ DIR &quot;
Recursively change owner and group to &quot; $ JBOSS _ AS _ USER &quot; of &quot; $ JBOSS _ AS _ DIR / &quot;
Recursively change owner and group to &quot; tomcat7 &quot; of &quot; webapps &quot; , &quot; temp &quot; , &quot; logs &quot; , &quot; work &quot; , and &quot; conf &quot;
Recursively change owner of all files in &quot; folder &quot; to &quot; user _ name &quot;
Recursively change owner to &quot; $ 1 &quot; and group to &quot; httpd &quot; of all files in the current directory
Recursively change owner to &quot; amzadm &quot; and group to &quot; root &quot; of all files in &quot; / usr / lib / python2.6 / site-packages / &quot;
Recursively change owner to &quot; amzadm &quot; and group to &quot; root &quot; of all files in &quot; / usr / lib / python2.6 / site-packages / awscli / &quot;
Recursively change owner to &quot; tomcat6 &quot; of &quot; webapps &quot; , &quot; temp &quot; , &quot; logs &quot; , &quot; work &quot; , and &quot; conf &quot;
Recursively change owner to &quot; www-data &quot; of &quot; / var / www / .gnome2 &quot; , &quot; / var / www / .config &quot; , and &quot; / var / www / .config / inkscape &quot;
Recursively change ownership of &quot; / usr / lib / node _ modules / &quot; to the current user
Recursively change ownership of &quot; / usr / local &quot; to the current user
Recursively change ownership of &quot; / usr / local / lib &quot; to the current user
Recursively change ownership of &quot; / usr / local / lib / node _ modules &quot; to the current user
Recursively change ownership of &quot; ~ / .npm &quot; to the current user
Recursively change ownership of &quot; ~ / .npm &quot; to the current user
Recursively change the group of all files in &quot; / tmp / php _ session &quot; to &quot; daemon &quot;
Recursively change the group of all files in &quot; / var / lib / php / session &quot; to &quot; lighttpd &quot;
Recursively change the group ownership to &quot; laravel &quot; in &quot; . / bootstrap / cache &quot;
Recursively change the group ownership to &quot; laravel &quot; in &quot; . / storage &quot;
Recursively change the owner and group of &quot; / home / el / svnworkspace &quot; and &quot; 775 &quot; to &quot; your _ user _ name &quot;
Recursively change the owner and group of &quot; / opt / antoniod / &quot; to &quot; antoniod &quot;
Recursively change the owner and group of &quot; / var / antoniod-data / &quot; to &quot; antoniod &quot;
Recursively change the owner and group of &quot; / workspace &quot; and &quot; 775 &quot; to &quot; your _ user _ name &quot;
Recursively change the owner and group of &quot; subdir1 &quot; to &quot; user1 &quot;
Recursively change the owner and group of &quot; subdir2 &quot; to &quot; user2 &quot;
Recursively change the owner and group of &quot; subdir3 &quot; to &quot; user3 &quot;
Recursively change the owner and group of &quot; ~ / .ssh / &quot; to &quot; dev _ user &quot;
Recursively change the owner and group of all files in &quot; / your / directory / to / fuel / &quot; to &quot; nginx &quot;
Recursively change the owner and group of all files in &quot; public _ html &quot; to &quot; owner &quot;
Recursively change the owner and group of all files in the current directory to &quot; andrewr &quot;
Recursively change the owner and group of all files in the current directory to &quot; apache &quot;
Recursively change the owner and group of all files in the current directory to &quot; apache &quot;
Recursively change the owner group of &quot; / var / www &quot; of to &quot; www-data &quot;
Recursively change the owner of all &quot; * .txt &quot; files under &quot; / mydir &quot; to &quot; root &quot;
Recursively change the owner of all files in &quot; / home / test &quot; to &quot; test &quot;
Recursively change the owner of all files in &quot; / usr / local / lib / node _ modules &quot; to the current user
Recursively change the owner of all files in &quot; testproject / &quot; to &quot; ftpuser &quot;
Recursively change the owner of all files in &quot; upload _ directory &quot; to &quot; nobody &quot;
Recursively change the owner of all files in &quot; ~ / tmp &quot; to &quot; $ USER &quot;
Recursively change the owner to &quot; $ USER &quot; and group to &quot; $ GROUP &quot; of &quot; / var / lib / cassandra &quot;
Recursively change the owner to &quot; $ USER &quot; and group to &quot; $ GROUP &quot; of &quot; / var / log / cassandra &quot;
Recursively change the owner to &quot; $ { JBOSS _ USER } &quot; of &quot; $ JBOSS _ LOG _ DIR &quot;
Recursively change the owner to &quot; ec2-user &quot; and group to &quot; apache &quot; of all files in &quot; / vol / html &quot;
Recursively change the owner to &quot; user &quot; and group to &quot; www-data &quot; of &quot; yourprojectfoldername &quot;
Recursively change the ownership of all directories in the current directory excluding &quot; foo &quot; to &quot; Camsoft &quot;
Recursively change the ownership of all files in &quot; / Users / xxx / Library / Developer / Xcode / Templates &quot; to &quot; xxx &quot;
Recursively change the user and group of all files in &quot; / var / cache / jenkins &quot; to &quot; root &quot;
Recursively change the user and group of all files in &quot; / var / lib / jenkins &quot; to &quot; root &quot;
Recursively change the user and group of all files in &quot; / var / log / jenkins &quot; to &quot; root &quot;
Recursively changes group ownership of every file in &apos; / var / tmp / jinfo &apos; to &apos; www-data &apos; .
Recursively changes group ownership of everything in &apos; / home / secondacc / public _ html / community / &apos; to &apos; fancyhomepage &apos; .
Recursively changes group ownership of everything in &apos; files &apos; to &apos; apache _ user &apos; .
Recursively changes group ownership of everything in &apos; files &apos; to &apos; my _ group &apos; .
Recursively changes group ownership of everything in a &apos; / home / user1 / project / dev &apos; folder to &apos; project _ dev &apos; .
Recursively changes group ownership of everything within &apos; .git &apos; to &apos; git &apos; .
Recursively changes group ownership of everything within &apos; / git / our _ repos &apos; to &apos; shared _ group &apos; .
Recursively changes group ownership of everything within a &apos; / path / to / repo &apos; to &apos; GROUP &apos; .
Recursively changes group ownership of everything within a current directory to &apos; repogroup &apos; .
Recursively changes group ownership of everything within a current folder and having group &apos; X _ GNAME &apos; to &apos; Y _ GNAME &apos; .
Recursively changes group ownership of everything within a current folder to &apos; admin &apos; .
Recursively changes group ownership of everything within current folder to &apos; git &apos; .
Recursively changes group ownership of the $ PATH _ TO _ OUTPUT _ FOLDER directory to $ GROUP group .
Recursively changes group ownership on every file in the $ { WP _ ROOT } / wp-content directory to $ { WS _ GROUP } group .
Recursively changes group ownership on everything in the &apos; public _ html &apos; folder to &apos; website &apos; group .
Recursively compress every file in the current directory tree and keep the original file
Recursively compresses all files within $ 2 folder .
Recursively copies &quot; $ 1 &quot; to &quot; $ 2 &quot; .
Recursively copies &quot; $ appname.app &quot; , preserving symlinks as symlinks to the &apos; Payload &apos; directory .
Recursively copies &apos; $ 1 &apos; directory to &apos; $ 2 &apos; directory .
Recursively copies &apos; .. / include / gtest &apos; directory to &apos; ~ / usr / gtest / include / &apos; .
Recursively copies &apos; SRCFOLDER &apos; to the &apos; DESTFOLDER / &apos;
Recursively copies &apos; include / gtest &apos; to &apos; / usr / include &apos; , preserving all attributes , and copying symlinks as symlinks , without following in source files .
Recursively copies &apos; src &apos; to &apos; dest &apos; preserving overwriting the existing files .
Recursively copies / mnt / usr / lib to the &apos; / usr / &apos; directory , creating symbolic links on each file instead of real copying them .
Recursively copies all files in the current directory but ones that names match pattern &quot; dirToExclude &#124; targetDir &quot; to the &apos; targetDir &apos; directory , printing info message on each operation .
Recursively copies all files in the current directory but ones with &apos; c &apos; in name to the home directory .
Recursively copies everything from &apos; / source / path / * &apos; to the &apos; / destination / path / &apos; , preserving from overwriting existing files , and printing info message on each operation .
Recursively copies everything from &apos; / zzz / zzz / &apos; to the &apos; / xxx / xxx &apos; overwriting the existing files and answering &apos; yes &apos; on each request for overwriting .
Recursively copies everything under the &apos; current &apos; folder to the &apos; .hiddendir &apos; folder .
Recursively copy &quot; / path / to / data / myappdata / * .txt &quot; to &quot; user @ host : / remote / path / to / data / myappdata / &quot;
Recursively copy &quot; dir _ a &quot; to &quot; dir _ b &quot; and delete any new files in &quot; dir _ b &quot;
Recursively copy &quot; dir _ b &quot; to &quot; dir _ a &quot; and delete any new files in &quot; dir _ a &quot;
Recursively copy &quot; emptydir &quot; to &quot; destination / newdir &quot;
Recursively copy &quot; old / &quot; to &quot; new / &quot; as a dry run skipping files that have matching checksums and output the name only
Recursively copy &quot; original _ dir &quot; to &quot; copy _ dir &quot; preserving file / dir timestamps , displaying progress , and skipping files which match in size , keeps partially transferred files .
Recursively copy &quot; source &quot; , &quot; dir &quot; , and &quot; target &quot; to &quot; dir &quot; as a dry run
Recursively copy / path / foo on host &quot; prod &quot; to local directory &quot; / home / user / Desktop &quot; , connecting as ssh username corresponding to local username .
Recursively copy / path / to / foo on host &quot; your.server.example.com &quot; to local directory &quot; / home / user / Desktop &quot; , connecting as ssh username &quot; user &quot; .
Recursively copy all &quot; .txt &quot; files to &quot; user @ remote.machine : / tmp / newdir / &quot;
Recursively copy all ( non-hidden ) files and directories in current dir except &quot; foo &quot; to location specified by variable &quot; other &quot;
Recursively copy all directories in &quot; / path / to / source &quot; to &quot; / path / to / dest / &quot; preserving directory hierarchy
Recursively copy all files and directories in &quot; demo &quot; excluding &quot; .git &quot; to &quot; demo _ bkp &quot;
Recursively copy all files and directories matching &quot; * ela * L1 * TE * &quot; in localhost &apos; s directory / tdggendska10 / vig-preview-dmz-prod / docs / sbo / pdf / to / var / www / html / sbo / 2010 / teacher / ela / level1 on localhost connecting as ssh user &quot; dalvarado &quot; , in batch mode ( no prompt for passwords ) preserving file permissions and timestamps , and without displaying progress information .
Recursively copy all files and folders in the current directory excluding &quot; exclude _ pattern &quot; to &quot; / to / where / &quot;
Recursively copy all files matching &quot; * .sh &quot; in &quot; $ from &quot; to &quot; root @ $ host : / home / tmp / &quot; compressing data during transmission
Recursively copy all files with names ending with .txt from dir _ 1 to the same location within copy _ of _ dir _ 1
Recursively copy all regular files below current directory to directory / tmp on hostname , connecting as ssh user matching current username on local host .
Recursively copy directories &quot; A &quot; and &quot; D &quot; to directory &quot; / path / to / target / directory &quot; on host &quot; anotherhost &quot; , connecting as ssh user matching current user on local host , via default TCP port for ssh ( 22 ) .
Recursively copy directory &quot; / path / to / data / myappdata &quot; to &quot; user @ host : / remote / path / to / data / myappdata &quot;
Recursively copy directory &quot; / path / to / data / myappdata &quot; to &quot; user @ host : / remote / path / to / data / newdirname &quot;
Recursively copy directory or file / something on host &quot; myServer &quot; to current directory on local host , connecting as ssh user matching username on local host .
Recursively copy everything in / source / path whose name doesn &apos; t begin with a period , to / destination / path , without overwriting existing files , and outputting a line for each file copied or skipped .
Recursively copy local file / directory &quot; / copy / from / path &quot; to remote location &quot; / copy / to / path &quot; on host &quot; server &quot; , connecting as ssh user &quot; user &quot; and using identity key file &quot; / path / to / your / .pemkey &quot; instead of the default in ~ / .ssh /
Recursively delete all files / folders named &apos; .svn &apos; in a current folder .
Recursively find all files ending with &apos; * .txt &apos; and print they names and content
Recursively find all files in the directory &quot; posns &quot; and split each one into files of at most 10000 lines each
Recursively find files in the current directory with a modification time more than 7 days ago , save the filenames to &quot; compressedP.list &quot; , and compress no more than 10 at a time
Recursively find strings in all files under current directory , that matching with comma-separated patterns list in file &apos; searches-txt &apos;
Recursively find the latest modified &quot; zip &quot; file in the current directory
Recursively find the latest modified file in the current directory
Recursively find the latest modified file in the current directory
Recursively find the latest modified file in the current directory
Recursively find the latest modified file in the current directory and print the modification time and filename
Recursively finds &apos; pattern &apos; in files from current folder , and prints matched string with number only if matching whole word .
Recursively finds all &quot; * .pas &quot; and &quot; * .dfm &quot; files and prints strings with &quot; searchtext &quot; ignoring text distinctions , suppressing error messages , highlighting found patterns and preceding each found string with file name and string number .
Recursively finds all &quot; file _ pattern _ name &quot; files and folders and prints strings with &quot; pattern &quot; , searching through found folders recursively .
Recursively finds all &apos; * .pdf &apos; files and folders in a current folder and removes them without prompting .
Recursively finds all &apos; * .pdf &apos; files in a current folder and removes them without prompting .
Recursively finds all &apos; * .pdf &apos; files in a current folder and removes them .
Recursively finds all &apos; * .pdf &apos; files in a current folder and removes them .
Recursively finds all &apos; * .pdf &apos; files in a current folder and removes them .
Recursively finds all &apos; * .png &apos; files older than 50 days in a current folder and removes them .
Recursively finds all &apos; STATUS.txt &apos; files containing text &apos; OPEN &apos; and prints containing folder of them .
Recursively finds all &apos; STATUS.txt &apos; files containing text &apos; OPEN &apos; and prints containing folder of them .
Recursively finds all * .dbf files from the root folder and prints list of folders with such files .
Recursively finds all * .txt files and prints strings with &quot; text _ pattern &quot; ignoring text distincts .
Recursively finds all bzip2 compressed files in a current folder and decompresses them .
Recursively finds all files and prints all strings with &apos; text-to-find-here &apos; from that files , preceding matched string with filename .
Recursively finds all files and prints all strings with &apos; text-to-find-here &apos; from that files .
Recursively finds all files and prints only names of files that contain &quot; word &quot; and suppressing error messages .
Recursively finds all files in a current folder excluding already compressed files and compresses them with level 9 .
Recursively finds all files in root folder and prints all strings with &apos; text-to-find-here &apos; from that files , ignoring binary files .
Recursively finds all files in root folder and prints all strings with &apos; text-to-find-here &apos; from that files , preceding matched string with filename .
Recursively finds all files not like * .itp , * ane.gro , * .top in a current folder and removes them .
Recursively finds all files older than 7 minutes under the current directory , saves list of found files , and compresses them , executing at most 10 compress process at a time .
Recursively finds all files with any cased text &quot; Text &quot; in a current folder , and precedes found string with its number in file .
Recursively finds all files with whole word &quot; pattern &quot; in a current folder , and precedes found string with its number in file .
Recursively finds all folders in a current folder that contain files like &apos; .git &apos; .
Recursively finds and compresses all files in a current folder with 4 parallel processes .
Recursively finds and compresses all files in a current folder .
Recursively finds and compresses all files in the directory &apos; / path / to / dir &apos;
Recursively finds file some _ file _ name.xml file and prints strings with &quot; PUT _ YOUR _ STRING _ HERE &quot; preceding each found string with file name .
Recursively finds files like &apos; * .js &apos; , and filters out files with &apos; excludeddir &apos; in path .
Recursively finds files like &apos; example.com &apos; , ignoring case differences , and filters out files with &apos; beta &apos; in path .
Recursively finds in all folders but &quot; . / output / * &quot; all files but * .o , * .swp and prints strings with &apos; soc _ attach &apos; text pattern and number of matched string .
Recursively finds string &apos; class foo &apos; in all * .c files from current folder .
Recursively finds string with text &quot; foo &quot; in all files of a current folder .
Recursively finds strings like &quot; texthere &quot; in all &quot; * .txt &quot; files of a current folder .
Recursively finds strings with &apos; word-1 &apos; or &apos; word-2 &apos; in any file under &apos; directory-path &apos; , following symlinks , and prints found strings .
Recursively finds strings with the whole word &apos; word-1 &apos; or &apos; word-2 &apos; in any file under &apos; directory-path &apos; , following symlinks , and prints found strings .
Recursively finds strings with &quot; text string to search &quot; in any file within the &apos; directory-path &apos; , following symlinks , and prints found strings with file names .
Recursively finds strings with &quot; text string to search &quot; in files under &apos; directory-path &apos; , regarding provided options &apos; &#91; option &#93; &apos; .
Recursively findsfiles with text pattern in current folder , ingnoring case differences , prefixes each matched line with number in file and suppresses error messages about nonexistent or unreadable files .
Recursively from current folder searches only files that names match &quot; . * xxx &quot; pattern , ignores binary files and prints file name before every string that contains &quot; my Text to grep &quot; .
Recursively list contents of the current directory in a tree-like format
Recursively lists all * .py and * .html files in a current folder .
Recursively lists all files in a current folder in long format , sorting by modification time .
Recursively lists all files in a current folder in long format .
Recursively move all files in &quot; / path / to / srcdir &quot; to &quot; dest / &quot;
Recursively print all directories in the current directory tree
Recursively print all files and directories in the current directory tree
Recursively print all files and directories in the current directory tree including hidden files
Recursively print all files and directories in the directory tree &quot; $ absolute / path / of / your / dir &quot;
Recursively prints .txt files in current directory
Recursively prints all files in a current folders , and searches &quot; stringYouWannaFind &quot; in file content ignoring case differences , and preceding found string with its number in file .
Recursively prints all folders in a current folder that contain files like &quot; * .class &quot; .
Recursively prints paths to all text file in folder ( ignores binary files ) .
Recursively remove all &quot; * .txt &quot; files and answer &quot; n &quot; to any prompt
Recursively remove all &quot; * .txt &quot; files and answer &quot; y &quot; to any prompt
Recursively removes $ TMPDIR folder , prompting user on each deletion .
Recursively removes &apos; classes &apos; folder , prompting user on each deletion .
Recursively removes all empty folders from the X folder .
Recursively removes all empty folders under current folder .
Recursively removes all empty folders under current folder .
Recursively removes all empty folders under current path , printing info message on each operation , and suppressing error messages if folder is not empty .
Recursively removes all files and folders like &apos; FILE-TO-FIND &apos; from current folder .
Recursively removes all files and folders like &apos; FILE-TO-FIND &apos; from current folder .
Recursively removes all files and folders named &apos; .svn &apos; in a current folder , handling content of removed folder before folder inself .
Recursively removes all files and folders named &apos; .svn &apos; in a current folder .
Recursively removes all files and folders named &apos; .svn &apos; in a current folder .
Recursively removes all files and folders named &apos; .svn &apos; in a current folder .
Recursively removes all files and folders named &apos; .svn &apos; in a current folder .
Recursively removes all files and folders that match pattern &apos; / usr / local / { lib / node { , / .npm , _ modules } , bin , share / man } / npm * &apos;
Recursively removes all files in a &apos; path &apos; folder but &apos; EXPR &apos; files .
Recursively removes all files in a current folder but &apos; * txt &apos; files .
Recursively removes all files like &quot; ( _ _ pycache _ _ &#124; \ .pyc &#124; \ .pyo $ ) &quot; in a current folder .
Recursively removes all files like &apos; * .pyc &apos; in a current folder , printing info message about each action .
Recursively removes all files like &apos; * .pyc &apos; in a current folder .
Recursively removes all files like &apos; * .pyc &apos; in a current folder .
Recursively removes all files like &apos; * .pyc &apos; in a current folder .
Recursively removes all files like &apos; * .pyc &apos; in a current folder .
Recursively removes all files like &apos; * .pyc &apos; in a current folder .
Recursively removes all files like &apos; * .pyc &apos; of &apos; * .pyo &apos; in a current folder without prompting .
Recursively removes all files like &apos; * .r * &apos; in current folder and removes folders with such files if they become empty .
Recursively removes all files like &apos; * .xyz &apos; in a current folder .
Recursively removes all files like &apos; .DS _ Store &apos; from current folder .
Recursively removes all files like &apos; . _ * &apos; from current folder .
Recursively removes all files like &apos; 4 &apos; under folder &apos; . / a &apos; and removes folders with such files if they become empty .
Recursively removes all files like &apos; _ * &apos; and &apos; .DS _ Store &apos; from / var / www / html / folder .
Recursively removes all files like any-cased &apos; * .pyc &apos; in a current folder .
Recursively removes all files named &apos; .svn &apos; in a current folder , and prints messages on each action .
Recursively removes all files with name like &quot; * .war &quot; in / home / ubuntu / wars folder .
Recursively removes all folders named &apos; .svn &apos; in a current folder .
Recursively rename all files under / your / target / path replacing &apos; special &apos; with &apos; regular &apos; - all file / diretory names may not include spaces , and directory names containing such files may not contain the word &apos; special &apos; in their name .
Recursively search current directory for all files with name ending with &quot; .t1 &quot; , change this to .t2
Recursively search for &quot; string here &quot; and write the output to the console followed by the number of matched lines
Recursively search for all directories containing &quot; foo &quot; ( case insensitive ) under the current directory , renaming them to replace &quot; foo &quot; ( case insensitive ) with &quot; Bar &quot;
Recursively search for all files not ending in &quot; .xml &quot; under the current directory , append &quot; .xml &quot; to the end of each file name
Recursively search for all files with names ending with &quot; _ test.rb &quot; , renaming them to end with &quot; _ spec.rb &quot; , using at most 1000000 characters per command .
Recursively search for all files with names ending with &quot; _ test.rb &quot; , renaming them to end with &quot; _ spec.rb &quot; , using at most 4 concurrent processes .
Recursively search for all files with names ending with &quot; _ test.rb &quot; , renaming them to end with &quot; _ spec.rb &quot; .
Recursively search for all regular files below directory &quot; dir1 &quot; in currentd directory , and output the name of each , without any containing directories .
Recursively search for everything under the current directory , displaying human-readable file type description for each entry .
Recursively search through directory &quot; test &quot; in home directory , displaying names of all directories without full paths , ie. only the name part following the last slash of each directory .
Recursively set all permissions under &quot; .. / tools &quot; to 777
Recursively set all permissions under &quot; / directory &quot; to 755
Recursively set all permissions under &quot; / folder &quot; to 755
Recursively set all permissions under &quot; / opt / lampp / htdocs &quot; to 755
Recursively set all permissions under &quot; / whatever / your / directory / is &quot; to 755
Recursively unzip files to stdout in &quot; / some / dir / here &quot; and search for &quot; blah &quot;
Reformat date &quot; Sat Aug 09 13 : 37 : 14 2014 + 1100 &quot; according to format string &quot; % a % b % d % H : % M : % S % Y % z &quot;
Remount &quot; / &quot; with read and write permission
Remount &quot; / &quot; without writing in &quot; / etc / mtab &quot;
Remount &quot; / dev / block / mtdblock3 &quot; on &quot; / system &quot; with read and write permission
Remount &quot; / dev / block / mtdblock3 &quot; on &quot; / system &quot; with read only permission
Remount &quot; / dev / sda7 &quot; partition as executable
Remount &quot; / dev / shm &quot; with a maximum size of &quot; 40G &quot;
Remount &quot; / dev / stl12 &quot; on &quot; / system &quot; as read and write
Remount &quot; / dev / stl12 &quot; on &quot; / system &quot; as read only
Remount &quot; / home / evgeny &quot; with the &quot; suid &quot; flag set
Remount &quot; / media / Working / &quot; with a umask of 000
Remount &quot; / mnt / mountpoint &quot; as read only
Remount &quot; / mnt / mountpoint &quot; with read and write permission
Remount &quot; / path / to / chroot / jail / usr / bin &quot; as read only
Remount &quot; / system &quot; as read only
Remount &quot; / system &quot; with read and write permission
Remount &quot; / system &quot; with read and write permission
Remount &quot; / system &quot; with read only permission
Remount &quot; extX &quot; filesystem &quot; / dev / hdaX &quot; on &quot; / &quot; without writing in &quot; / etc / mtab &quot;
Remount &quot; rfs &quot; filesystem &quot; / dev / stl12 &quot; on &quot; / system &quot; with read and write permission
Remount &quot; yaffs2 &quot; filesystem &quot; / dev / block / mtdblk4 &quot; to &quot; / system &quot; as read and write only
Remount &quot; yaffs2 &quot; filesystem &quot; / dev / block / mtdblk4 &quot; to &quot; / system &quot; as read only
Remount root filesystem &quot; / &quot;
Remount subtree &quot; / outside &quot; to &quot; / inside &quot; as a bind
Remount the root file system with read and write permission
Remove &quot; \ n &quot; from &quot; test1 \ ntest2 \ ntest3 &quot; and search for &quot; test1 . * test3 &quot;
Remove &quot; _ dbg &quot; from all file or directory names under the current directory
Remove ESC key bind
Remove Mac OS X Desktop Services Store files
Remove &apos; core &apos; files whose status was changed more than 4 days ago
Remove adjascent duplicate lines from file &apos; input &apos; comparing all but last space-separated fields
Remove all &quot; CVS &quot; directories from the current directory tree , ignoring the case
Remove all &quot; core &quot; files that were last changed more than 4 days ago from the current directory tree
Remove all &quot; core &quot; regular files in the / tmp / directory tree
Remove all &quot; work &quot; directories residing in / usr / ports and below
Remove all &apos; a.out &apos; , &apos; * .o &apos; , and &apos; core &apos; files in the current directory tree
Remove all * .bak and * .backup files that were accessed last time more than 30 days ago
Remove all * .bak files under current directory
Remove all * .doc files from the current directory tree
Remove all * .log files from the current directory tree
Remove all * .log files from the current directory tree
Remove all * .log files from the current directory tree
Remove all * .mp3 files in tmp directory but not in it &apos; s subdirectories
Remove all * .mp3 files in tmp directory but not in it &apos; s subdirectories
Remove all * .mp3 files in tmp directory but not in it &apos; s subdirectories
Remove all * .mp3 files in tmp directory but not in it &apos; s subdirectories
Remove all * .sql files in the $ backup _ path directory that were last modified more than 5 days ago
Remove all * .sql files in the $ backup _ path directory tree that were last modified more than 30 days ago
Remove all * .swp files under current directory
Remove all * .swp files under current directory ensuring white space safety
Remove all * .swp files / directories under current directory
Remove all * .tmp files from the / tmp directory tree
Remove all * .tmp files from the / tmp directory tree
Remove all * .txt files in the home directory tree with confirmation
Remove all * .txt files under the given directory modified more than 5 minutes ago
Remove all * .txt files , except robots.txt , under the given directory modified more than 5 minutes ago
Remove all * .txt files , except robots.txt , under the given directory modified more than 5 minutes ago
Remove all * bak files under current directory with confirmation prompt
Remove all * ~ files under current directory with confirmation prompt
Remove all .gz files in the current directory tree
Remove all .mpg files in the / home / luser directory tree
Remove all .mpg files in the / home / luser directory tree
Remove all .mpg files in the / home / luser directory tree
Remove all .mpg files in the / home / luser directory tree
Remove all .php files in the / var / www / directory
Remove all .sh files in the current directory tree whose names begin with &quot; new &quot;
Remove all .sh files in the current directory tree whose names begin with &quot; new &quot;
Remove all .sh files in the current directory tree whose names begin with &quot; t &quot;
Remove all .tmp files in and below / tmp
Remove all .tmp files in and below / tmp
Remove all .txt files from the / full / path / dir directory tree
Remove all .txt files from the / full / path / dir directory tree
Remove all .txt files in and below the current directory
Remove all .txt files in and below the current directory
Remove all .txt files in and below the current directory
Remove all .txt files in and below the current directory
Remove all .txt files in and below the current directory
Remove all .txt files with spaces in names in and below the current directory
Remove all CVS directories from the current directory tree
Remove all CVS directories in the current directory tree
Remove all Thumbs.db files from the current directory tree
Remove all \ * ~ files under dir
Remove all a.out , * .o , and core files under the current directory
Remove all broken symbolic links in / usr / ports / packages
Remove all broken symlinks from the / usr / ports / packages directory tree
Remove all but 5 last comma-separated fields from each line in &apos; data.csv &apos;
Remove all characters except &quot; ; &quot; and digits from standard input
Remove all core dump files from user &apos; s home directory
Remove all directories called &quot; test &quot; from the / path / to / dir directory tree
Remove all directories called &quot; test &quot; from the / path / to / dir directory tree
Remove all directories called &quot; test &quot; from the current directory tree
Remove all directories called &quot; test &quot; from the current directory tree
Remove all directories called &quot; test &quot; from the current directory tree
Remove all directories called &quot; test &quot; from the current directory tree
Remove all directories called &quot; test &quot; from the current directory tree
Remove all directories called &quot; test &quot; from the current directory tree
Remove all directories found in directory tree $ LOGDIR that were modified more than 5 days ago
Remove all directories in and below the current directory
Remove all empty directories under the current directory and below
Remove all empty files in / tmp / and below
Remove all empty regular files under the current directory and below
Remove all empty regular files under the current directory and below
Remove all empty sub-directories under current directory
Remove all files &apos; a.out &apos; and * .o in the home directory tree that were accessed more than 7 days ago
Remove all files and directories called &quot; test &quot; from the current directory tree
Remove all files and directories called &quot; test &quot; from the current directory tree
Remove all files and directories called &quot; test &quot; from the current directory tree
Remove all files and directories in the / home directory tree whose names are &quot; Trash &quot;
Remove all files and directories in the current directory by answering with &quot; y &quot; to all prompts
Remove all files and directories under &apos; / home / foo &apos; directory tree that match with one of the name patterns &apos; .DS _ Store &apos; , &apos; . _ .DS _ Store &apos; , &apos; . _ * &apos; , &apos; .TemporaryItems &apos; or &apos; .apdisk &apos;
Remove all files containing &apos; sample &apos; ( case insensitive ) in their names under &apos; / home / user / Series &apos; directory tree
Remove all files containing &apos; sample &apos; ( case insensitive ) in their names under &apos; / home / user / Series &apos; directory tree
Remove all files except the ones listed in &quot; MANIFEST &quot;
Remove all files from the current directory tree whose names contain whitespaces
Remove all files from the current directory tree whose names do not end with &quot; .tex &quot; or &quot; .bib &quot;
Remove all files from the current directory tree whose names do not match regular expression &quot; excluded files criteria &quot;
Remove all files from the current directory tree whose names end in &quot; ~ &quot;
Remove all files from the system whose path names contain &quot; GUI &quot;
Remove all files in and below the current directory whose names begin with &quot; not &quot;
Remove all files in and below the current directory whose names begin with &quot; not &quot;
Remove all files in and below the current directory whose names begin with &quot; not &quot;
Remove all files in the $ backup _ path directory recursively that were last modified more than 30 days ago
Remove all files in the / myfiles directory tree that were accessed at least 30 days ago
Remove all files in the current directory tree that have the name &quot; abc.xxx &quot;
Remove all files in the ~ / backups / mydatabasename directory recursively that were last modified more than 30 days ago
Remove all files last modified more than 10 days ago from the current directory tree
Remove all files matching the pattern * &#91; + { ; &quot; \ \ = ? ~ ( ) &lt; &gt; &amp; * &#124; $ &#93; * under current directory
Remove all files named &quot; filename &quot; from the current directory tree , ignoring directory &quot; FOLDER1 &quot;
Remove all files named &apos; junk &apos; and &apos; dummy &apos;
Remove all files named tmp or ending in .xx that have not been accessed for seven or more 24-hour periods
Remove all files on the system that have been changed within the last minute
Remove all files that are not newer than Jul 01 by modification time
Remove all files that contain the word GUI in entire file system
Remove all files that end with &apos; prefs copy &apos; in their names under &apos; / mnt / zip &apos; directory tree
Remove all files that were older than 3 days
Remove all files under $ DIR that were accessed more than 5 days ago
Remove all files under / home / user / Maildir / .SPAM / cur
Remove all files under / home / user / Maildir / .SPAM / cur
Remove all files under / home / user / Maildir / .SPAM / cur
Remove all files under / myfiles that were accessed more than 30 days ago
Remove all files under current directory
Remove all files whose names begin with &quot; no-such-thing &quot; in the / home / peter directory tree
Remove all files whose names end with &quot; ~ &quot; in the / home / peter directory tree
Remove all files whose names end with &quot; ~ &quot; in the / home / peter directory tree
Remove all files whose names start with spam-
Remove all files with &apos; .js &apos; extension from the &apos; js &apos; directory tree
Remove all files with a txt extension under current directory
Remove all files with a txt extension under current directory
Remove all files with names like &quot; vmware- * .log &quot; from the current directory tree
Remove all files with names like &quot; vmware- * .log &quot; from the current directory tree
Remove all files with names like &quot; vmware- * .log &quot; from the current directory tree
Remove all files with names like &quot; vmware- * .log &quot; from the current directory tree
Remove all files with names like &quot; vmware- * .log &quot; from the current directory tree
Remove all files with the .c extension in the current directory tree
Remove all files with the .c extension in the current directory tree
Remove all files / directories in the current directory without &apos; .git &apos; and &apos; .gitignore &apos;
Remove all libEGL * files from the current directory tree
Remove all libGLE * files from the current directory tree
Remove all non-hidden files in the current directory tree
Remove all regular files found in and below / path
Remove all regular files found in and below / path
Remove all regular files found in and below / path
Remove all regular files from the current directory tree except textfile.txt , backup.tar.gz , script.php , database.sql , info.txt
Remove all regular files from the current directory tree that were modified a day ago
Remove all regular files from the current directory tree that were modified between August 10th and August 17th
Remove all regular files from the current directory tree whose names do not end with &quot; ignore1 &quot; or &quot; ignore2 &quot;
Remove all regular files from the current directory tree whose names do not end with &quot; ignore1 &quot; or &quot; ignore2 &quot;
Remove all regular files from the current directory tree whose names do not end with &quot; txt &quot;
Remove all regular files in the current directory
Remove all regular files named &quot; Waldo &quot; in the ~ / Books directory tree
Remove all regular files under $ DIR directory tree that were accessed more than 5 days ago
Remove all regular files under &apos; / var / log / remote &apos; directory tree that have not been modified in the last 14 days where day count starts from today
Remove all regular files under and below directory &quot; $ DIR &quot; that were last accessed more than 5 days ago
Remove all regular files with extensions php , css , ini , txt from directory tree / old / WordPress /
Remove all regular non-hidden files modified more than 7 days ago and residing in the / tmp directory tree
Remove all spaces from standard input
Remove all subdirectories of the current directory , except for &quot; bar &quot; , &quot; foo &quot; , &quot; a &quot; , and &quot; b &quot;
Remove all text files in the home directory with confirmation
Remove all tmp / * .mp3 files
Remove all tmp / * .mp3 files
Remove all tmp / * .mp3 files
Remove all vmware- * .log files under current directory
Remove all vmware- * .log files under current directory
Remove all vmware- * .log files under current directory
Remove all vmware- * .log files under current directory ensuring white space safety in filename
Remove all vmware- * .log files / directories under current directory
Remove all white space from &quot; infile.txt &quot; and wrap each line to 80 characters
Remove any file containing string &quot; GUI &quot;
Remove containing directories and suffix &quot; .wiki &quot; from specified path , output the result .
Remove containing directories from variable &apos; path &apos; ie . &quot; / some / specific / directory &quot; becomes &quot; directory &quot; .
Remove directories in / media / 1Tb / videos modified more than 7 days ago
Remove duplicate phrases and keep the original order of lines in &quot; $ infile &quot;
Remove duplicates in variable &quot; variable &quot; and preserve the order
Remove each unique item listed on standard input and do nothing if empty
Remove empty directories
Remove empty directories from directory tree / srv / $ { x }
Remove empty directories from directory tree / srv / abc
Remove empty directories from the current directory tree
Remove empty folder , and skip error message if one is not empty .
Remove everything in a current folder prompting user on each action .
Remove everything in a current folder without prompting .
Remove everything in a current folder without prompting .
Remove everything in the current directory except files matching regular expression &quot; exclude these &quot;
Remove file with inode number 31246
Remove files cart4 , cart5 , cart6 in directory ~ / junk
Remove files erroneously named &apos; -F &apos;
Remove files from the file system that are owned by nobody
Remove files from the file system that are owned by nobody
Remove files from the file system that are owned by nobody , asking the user before each removal
Remove files from the home directory tree that were last accessed more than 100 days ago
Remove files in current directory according to the filenames found in ~ / clang + llvm-3.3 / bin /
Remove files in the current directory tree modified more than 31 days ago recursively
Remove files in the current directory tree whose names match pattern &quot; file ? &quot;
Remove files matching pattern &apos; * - * x * . * &apos; from the current directory tree
Remove files modified at least five days ago in directory trees / path / to / files *
Remove files named &quot; core &quot; from the / work directory tree and write their names to / dev / stderr ( the standard error
Remove files that are greater than 1MB in size under current directory
Remove files that are less than 1MB in size under current directory
Remove files that are less than 1MB in size under current directory
Remove files under / mnt / zip matching &quot; * prets copy &quot; with confirmation
Remove files under current directory that contains white space in their name
Remove files under current directory with inode number $ inum
Remove files whose names match regular expression &apos; ^ . * / &#91; A-Za-z &#93; + - &#91; 0-9 &#93; + x &#91; 0-9 &#93; + \ . &#91; A-Za-z &#93; + $ &apos; from the current directory tree
Remove files whose names start with &apos; Foo &apos;
Remove filetype suffix ( last dot and following characters if any ) from filename
Remove from the current directory tree all the regular files which have a dot in their names and contain string &quot; &lt; img-name &gt; - &lt; width : integer &gt; x &lt; height : integer &gt; . &lt; file-ext &gt; syntax &quot;
Remove gitlab.site.org from root &apos; s known hosts file .
Remove junk files modified more than 31 days ago recursively
Remove junk files modified more than 31 days ago recursively
Remove last two underscore-delimited fields and following characters in &quot; t1 _ t2 _ t3 _ tn1 _ tn2.sh &quot; keeping only &quot; t1 _ t2 _ t3 &quot;
Remove lines matching &quot; kpt # &quot; from &quot; data.txt &quot; and add left-justified line numbers
Remove newline characters from &quot; file.txt &quot;
Remove recursively Emacs backup files in the current directory
Remove regular files changed more than 15 days ago from the / tmp directory tree
Remove regular files in the current directory tree
Remove regular files whose names match Perl regular expression &apos; \ w + - \ d + x \ d + \ . \ w + $ &apos; from the current directory tree
Remove sess _ * files that were modified more than 2 days ago
Remove spaces from output of &quot; echo aa &#124; wc -l &quot;
Remove symbolic links and get absolute path of &quot; $ { the _ stuff _ you _ test } &quot; and save to variable &quot; DIR _ PATH &quot;
Remove the &quot; 123 _ &quot; prefix from all filenames of .txt files in current directory .
Remove the &quot; 123 _ &quot; prefix from all filenames of .txt files in current directory .
Remove the .jpg files from the current directory whose names match regular expression &quot; . + - &#91; 0-9 &#93; + x &#91; 0-9 &#93; + \ .jpg &quot;
Remove the .jpg files from the current directory whose names match regular expression &quot; . + - &#91; 0-9 &#93; + x &#91; 0-9 &#93; + \ .jpg &quot;
Remove the file with inode number 752010
Remove the files from the home directory tree that were last accessed more than 100 days ago , with confirmation
Remove the files or directories &apos; bin / node &apos; , &apos; bin / node-waf &apos; , &apos; include / node &apos; , &apos; lib / node &apos; , &apos; lib / pkgconfig / nodejs.pc &apos; and &apos; share / man / man1 / node &apos; with superuser privilege
Remove the files or directories &apos; bin / node &apos; , &apos; bin / node-waf &apos; , &apos; include / node &apos; , &apos; lib / node &apos; , &apos; lib / pkgconfig / nodejs.pc &apos; and &apos; share / man / man1 / node.1 &apos;
Remove the first 13 characters of each &quot; .txt &quot; filename in the &quot; / tmp &quot; directory tree and number the output
Remove the first 7 characters of every line in the output of &quot; history &quot;
Remove the last 2 tab-separated fields of each line in file pointed to by filename
Remove the last 3 characters from 987654321 , keeping only 987654
Remove the last two components ( directories ) of $ path
Remove the passphrase from user &apos; s ssh key without prompting .
Remove the passphrase from ~ / .ssh / id _ rsa .
Remove the path $ 1 from the PATH environment variable
Remove the regular files from the current directory that were last modified on November , 22
Remove the regular files from the current directory tree that are newer than / tmp / date.start but not newer than / tmp / date.end
Remove the regular files from the current directory tree that were last modified on November , 21
Remove with prompting all files starting in / mydir that have not been accessed in over 100 days
Remove with prompting all files that have not been accessed in over 100 days
Removes &apos; / var / lib / mongodb / mongod.lock &apos; in &apos; sudo &apos; mode .
Removes &apos; folderName &apos; , and removes all content within if &apos; folderName &apos; is folder .
Removes &apos; foo &apos; file .
Removes &apos; latest &apos; folder if empty .
Removes 5 oldest files in the current folder .
Removes all empty folders that ends with any-cased &apos; * .bak &apos; under &apos; / Users / &apos; path .
Removes all empty folders under &apos; / path / to / the / folder &apos; path .
Removes all empty folders under current folder .
Removes all empty folders under current folder .
Removes all empty folders under current path , aged between &apos; first &apos; and &apos; last &apos; timestamps .
Removes all empty folders under path &apos; / foo / bar &apos; and the path itself .
Removes all empty folders under path &apos; / thepath &apos; , printing info message on each operation .
Removes all empty folders with modification time more that 10 minutes ago from $ homeDirData folder .
Removes all empty folders within $ DELETEDIR folder .
Removes all files but $ 1 newest ones from current folder .
Removes all files but 5 newest ones from current folder .
Removes all files but 5 newest ones from current folder .
Removes all files from current folder but 3 newest ones
Removes all files from current folder but 5 newest ones , filtering out directories from initial search .
Removes all files from current folder but 5 newest ones .
Removes all files like &apos; * .bak &apos; in a current folder , and prints messages about what is being done .
Removes all files like &apos; A * .pdf &apos; from current folder without prompting .
Removes all listed folders with content in sudo mode .
Removes all top-level * .pdf files in a current folder .
Removes all top-level empty folders within the current folder .
Removes any empty folder that matches pattern ed * .
Removes empty folder &apos; edi &apos; and &apos; edw &apos; .
Removes empty folder &apos; symlink &apos; .
Removes empty folder , and hides error message if one is not empty .
Removes everything from current folder but &apos; * ddl * &apos; and &apos; * docs * &apos; files .
Removes files &apos; junk1 &apos; , &apos; junk2 &apos; , &apos; junk3 &apos; .
Removes files ~ / .android / adbkey and ~ / .android / adbkey.pub without prompting .
Removes first and last parts of path $ path and saves the result in &apos; finalName &apos; variable .
Removes first and last parts of path $ path and saves the result in &apos; finalName &apos; variable .
Removes first and last parts of path &apos; test / 90 _ 2a5 / Windows &apos; and prints the result .
Removes only lowest level subfolders from current directory tree ( folders without files and another folders within ) .
Removes resursively all files and folders named &quot; .DS _ Store &quot; .
Removes resursively all files and folders named &quot; Thumbs.db &quot; , ignoring case distincts .
Removes the last 2 lines from a file
Rename &quot; / usr / bin / php &quot; to &quot; / usr / bin / ~ php &quot;
Rename &quot; Tux.png &quot; to &quot; .Tux.png &quot;
Rename &quot; blah1 &quot; to &quot; blah1-new &quot;
Rename &quot; blah2 &quot; to &quot; blah2-new &quot;
Rename &quot; fghfilea &quot; to &quot; jklfilea &quot;
Rename &quot; file.txt &quot; in directories &quot; v _ 1 &quot; , &quot; v _ 2 &quot; , and &quot; v _ 3 &quot; each to &quot; v _ 1.txt &quot; , &quot; v _ 2.txt &quot; , and &quot; v _ 3.txt &quot; respectively and print the conversion
Rename &quot; file0001.txt &quot; to &quot; 1.txt &quot;
Rename &quot; file001abc.txt &quot; to &quot; abc1.txt &quot;
Rename &quot; new &quot; to &quot; old &quot; and backup to &quot; old.old &quot; if &quot; old &quot; exists
Rename &quot; new &quot; to &quot; old &quot; and make a backup if &quot; old &quot; exists
Rename &quot; old &quot; to &quot; tmp &quot;
Rename &quot; original.filename &quot; to &quot; new.original.filename &quot;
Rename &quot; original.filename &quot; to &quot; new.original.filename &quot;
Rename &quot; svnlog.py &quot; to &quot; svnlog &quot;
Rename &quot; www _ new &quot; to &quot; www &quot; even if &quot; www &quot; directory exists
Rename $ file file , preserving only part of name before &apos; - &apos; symbol , and appending &apos; .pkg &apos; suffix to the end
Rename &apos; .mkv &apos; extension to &apos; .avi &apos; for all files / directories under &apos; / volume1 / uploads &apos; directory tree
Rename .jpg files to .jpeg in all level 2 subdirectories of the current directory
Rename absolute path of symbolic link &quot; dirln &quot; to &quot; dir2 &quot;
Rename all &quot; thumbs &quot; directories to &quot; thumb &quot; in the current directory tree
Rename all * .html files under and below the current directory to * .var
Rename all * .txt regular files in the current directory tree to * .abc
Rename all .html files to .txt
Rename all .jpg files to .jpeg under the current directory and below
Rename all .png files , changing the string &quot; _ h.png &quot; into &quot; _ half.png &quot; .
Rename all directories under current directory by replacing all occurrences of &apos; Foo &apos; ( case insensitive ) with &apos; Bar &apos; in their names
Rename all files and directories under current directory tree by converting the names to small letters without descending into &apos; CVS &apos; directory
Rename all files in current directory to lowerase , overwriting any existing files .
Rename all files in current directory to lowerase .
Rename all files in current directory whose name starts with &apos; F0000 &apos; , trimming a zero from any sequence of four zeroes in the name .
Rename all files in current directory with names starting with &quot; fgh &quot; so they start with &quot; jkl &quot; instead
Rename all files matching &quot; access.log. &lt; number &gt; .gz &quot; incrementing &lt; number &gt; .
Rename all regular files under current directory tree with inode number 31467125 to &apos; new _ name.html &apos;
Rename file &quot; edited _ blah.tmp &quot; to &quot; / etc / blah &quot;
Rename file extension &apos; .andnav &apos; ( case insensitive ) to &apos; .tile &apos; for all files / directories under current directory tree
Rename file extension &apos; .andnav &apos; to &apos; .tile &apos; for all files / directories under current directory tree
Rename file file.txt.123456 to file.txt
Rename file with inode number 31467125 to new _ name.html
Rename file ~ / junk / cart1 to ~ / junk / A
Rename recursively all files in the current directory tree that are called &quot; article.xml &quot; to &quot; 001 _ article.xml &quot;
Rename the * .so files at level 2 of the current directory tree prepending their names with &quot; lib &quot;
Rename the * .so files in the current directory tree prepending their names with &quot; lib &quot;
Rename uppercase file or folder name $ 1 to lower case name
Repeat &quot; image.png &quot; 10 times on a single line
Repeat &quot; image.png &quot; 10 times on a single line
Replace &quot; inputfile &quot; with a sorted unique list of its contents
Replace all &apos; &apos; with &apos; - &apos; from standard input
Replace all colons ( &apos; : &apos; ) with newlines in $ list and search for the first match to the regex &quot; ^ $ removepat \ $ &quot; where $ removepat is a variable and save the result to variable &apos; removestr &apos;
Replace all non-punctuation characters with newlines from standard input
Replace all sequence of &apos; blank &apos; characters in file &apos; log &apos; with a single occurence of such symbol and print space-separated fields of each string but first two fields
Replace all spaces ( &apos; &apos; ) with comma ( &apos; , &apos; ) in $ { TO _ IGNORE &#91; @ &#93; } , append with &apos; --ignore &apos; and save the resultant string to variable &apos; ARGS &apos;
Replace all spaces with underscores in directory names under current directory .
Replace all spaces with underscores in directory paths under current directory .
Replace all spaces with underscores in file paths under current directory .
Replace any blank character from standard input with a tab
Replace any sequence of spaces in file &apos; text.txt &apos; with single space and print 4th space separated field
Replace commas ( &apos; , &apos; ) with newlines in $ MOUNT _ OPTS and search for the regex &apos; ^ acl $ &apos;
Replace each new line in &quot; INPUT.txt &quot; with &quot; : &quot;
Replace each newline in input &quot; 1 \ n2 \ n3 \ n4 \ n5 &quot; with a comma
Replace each non-blank line in &quot; YOURFILE &quot; preceded with &quot; pX = &quot; where &quot; X &quot; is the line number
Replace newline with &quot; _ &quot; in &quot; file &quot; then search for &quot; _ foo _ &quot; and output with &quot; _ &quot; characters deleted
Replace spaces in directory names with underscores for all directories in the current directory tree
Replace spaces in file names with underscores for all files in the current directory tree
Replace spaces with underscores in the names of all files and directories in the &quot; / tmp &quot; directory tree
Replace spaces with underscores in the names of all files and directories in the &quot; / tmp &quot; directory tree
Replace the &quot; openssl &quot; command executable with a symbolic link to &quot; / usr / local / ssl / bin / openssl &quot;
Replaces any occurences of &apos; * favicon.ico * &apos; in any subfolder with file &apos; / root / favicon.ico &apos; .
Report all C language source code files under the current directory
Report all files in / mydir1 and / mydir2 larger than 2000 blocks and accessed in over 30 days
Report all files starting in the directories / mydir1 and / mydir2 larger than 2,000 blocks that have not been accessed in over 30 days
Report available space on the file system containing / tmp in kilobytes .
Report file system &apos; / dev / disk0s2 &apos; disk usage
Report file system containing / example disk usage in kilobytes .
Report file system containing / tmp disk usage in kilobytes .
Report file system containing path to / dir / inner _ dir / disk usage human-readable .
Report file system containing path to / dir / inner _ dir / disk usage in kilobytes .
Report file system containing path to / some / dir disk usage in kilobytes .
Report file system containing path to the current working directory disk usage human-readable .
Report file system containing path to the current working directory disk usage in kilobytes .
Report file system containing path to the current working directory inodes usage .
Report file system containing path-to-file disk usage human-readable .
Report file system containing the current directory disk usage
Report file system containing the current directory disk usage in kilobytes .
Report file system disk space usage in human readable format
Report file system inodes usage in human readable format
Report file system mounted at $ path _ in _ question disk usage if canonical path $ path _ in _ question is a mount point .
Report file systems disk space usage pretty formatted .
Report file systems disk usage human-readable using POSIX output format .
Report file systems disk usage in 1GB blocks .
Report file systems disk usage in kilobytes .
Report file systems disk usage using POSIX output format .
Report file systems disk usage , elide all entries insignificant to available space , and produce a grand total .
Report file systems inode usage .
Report file systems inodes usage .
Report root file system disk usage human-readable .
Report total disk usage info on root file system , printing all sizes as power of 1000
Report total file systems disk usage estimated in terabytes
Report total file systems disk usage in 1T blocks .
Report total file systems disk usage .
Report total size of the root filesystem disk usage in powers of 1000 .
Reports count of characters in the value of $ { FOO _ NO _ EXTERNAL _ SPACE } variable as follows : &quot; length ( FOO _ NO _ EXTERNAL _ SPACE ) = = &lt; counted number of characters &gt; &quot;
Reports count of characters in the value of $ { FOO _ NO _ LEAD _ SPACE } variable as follows : &quot; length ( FOO _ NO _ LEAD _ SPACE ) = = &lt; counted number of characters &gt; &quot;
Reports count of characters in the value of $ { FOO _ NO _ TRAIL _ SPACE } variable as follows : &quot; length ( FOO _ NO _ TRAIL _ SPACE ) = = &lt; counted number of characters &gt; &quot;
Reports count of characters in the value of $ { FOO _ NO _ WHITESPACE } variable as follows : &quot; length ( FOO _ NO _ WHITESPACE ) = = &lt; counted number of characters &gt; &quot;
Reports count of characters in the value of $ { FOO } variable as follows : &quot; length ( FOO ) = = &lt; counted number of characters &gt; &quot;
Reports count of processors in system .
Reports count of processors in system .
Represent current date in RFC 3339 format with precision to seconds and save it to &apos; timestamp &apos; variable
Represent the UTC date given in time string &quot; 1970.01.01- $ string1 &quot; as number of seconds since the epoch and save it in &apos; t1 &apos; variable
Represent the current time as seconds since epoch and save it to variable &apos; TODAY &apos;
Represent time string $ MOD _ DATE as seconds since epoch and save to variable &apos; MOD _ DATE1 &apos;
Request A record from nameserver $ ns for domain name $ d , filter strings with domain name and exclude lines matching &apos; DIG &apos;
Request IP address for each domain name received on the command input
Request IP address of &apos; myip.opendns.com &apos; from name server &apos; resolver1.opendns.com &apos;
Request MX record of &apos; example.com &apos; domain , and filter out all comment strings
Request NS record for com. domain , receiving only authoritative answers
Request changing the passphrase of key file &quot; private.key &quot;
Request that the master ssh connection &quot; officefirewall &quot; exits
Request that the master ssh connection &quot; otherHosttunnel &quot; exits
Resolve all symlinks in path to &quot; firefox &quot; binary if it exists in path , resulting in absolute path with no symlinks .
Resolve any symlinks in working directory , and go to resulting pathname .
Resolve symbolic link of file &quot; / foo / bar / baz &quot;
Resolve symbolic link of file &quot; FILE &quot; even if the file does not exist
Resolve symbolic link of path of &quot; python2.7 &quot;
Retrieve column number from column name &quot; Target &quot; in file &quot; table &quot;
Retrieve only build number of current kernel , ie . # 104
Return 0 if at least one &quot; abc &quot; file in the current directory tree contains text &quot; xyz &quot;
Return 0 if file system is mounted on &apos; / full / path &apos;
Return a list of files newer than file poop
Return all of the .conf files in Pat &apos; s user folder and subdirectories
Return the depth of the current directory tree
Return the files that are newer than file &apos; myfile &apos;
Return the list of files named &quot; filename &quot; that are 50 megabytes or larger
Returns 0 if user $ 1 belongs to group $ 2 .
Returns the single most recent file in a directory
Reverse the order of lines in &quot; myfile.txt &quot; using BSD &quot; tail &quot; command
Reverse the space separated words in &quot; 35 53 102 342 &quot;
Reverse the space separated words in &quot; aaaa eeee bbbb ffff cccc &quot;
Reverse the text in $ input by taking each 4 characters as each units and save the result in variable &apos; output &apos;
Reversibly sorts content of the &apos; $ { TMP } / $ { SCRIPT _ NAME } .kb &apos; file , comparing human readable numbers in file strings .
Reversibly sorts content of the &apos; $ { TMP } / $ { SCRIPT _ NAME } .name &apos; file
Reversibly sorts content of the &apos; $ { TMP } / $ { SCRIPT _ NAME } .pid &apos; file , comparing human readable numbers in file strings .
Revert $ string value and print first 20 space-separated fields
Run &quot; . / configure &quot; with a new environment variable CC set to the full path of the command &apos; cc &apos;
Run &quot; . / configure &quot; with a new environment variable CC set to the full path of the command &apos; gcc &apos;
Run &quot; command &quot; on server &quot; host &quot; as user &quot; user &quot;
Run &apos; chmod 0644 &apos; on all files in the current directory tree
Run &apos; chmod 0755 &apos; on all directories in the current directory tree
Run &apos; join &apos; on file1 and file2 , using a literal tab character as field separator .
Run &apos; join &apos; with the number-sorted output of file1 and file2 , without modifying file1 or file2 : for each line with a common first field in file1 and file2 , output the common field followed by the extra fields in both files .
Run &apos; make -e &apos; with an environment variable &apos; HOSTNAME &apos; set to the system hostname
Run &apos; otherscript.sh &apos; script with all environment variables specified in the file &apos; xxxx &apos;
Run &apos; somecommand &apos; in an environment without the FOO variable .
Run &apos; top &apos; in batch mode ( don &apos; t accept user input ) with delay of 1 second between updates , and duplicate the standard output to file &apos; output.log &apos; in current directory .
Run .makeall.sh in an empty environment .
Run a shell with all environment variables specified in the file &apos; cronenv &apos; in the user &apos; s home directory .
Run command &apos; su whoami &apos; on host &apos; remotehost &apos;
Run command specified by $ line , replace space ( &apos; &apos; ) with newline and save the output to variable &apos; arr &apos;
Run commands &quot; df -k ; uname -a &quot; on server &quot; 192.168.79.134 &quot;
Run perl -V ( displays informations about perl &apos; s setup ) in an empty environment .
Run rsync with options specified by variable OPTS , copying directory ( ies ) specified by variable FIND , and to destination specified by variable BACKUPDIR .
Run script $ 2 on remote host $ 1 using interpreter $ INTERPRETER with pseudo-terminal allocation
Run the file command on every regular file under current directory
Run the find command with all shell positional arguments
Runs &apos; file &apos; on every file in or below the current directory .
SSH in server &apos; server &apos; as user &apos; user &apos; with X11 forwarding disabled
SSH into &quot; $ NAME &quot; as user &quot; $ { USERNAME } &quot; using key file &quot; $ { KEYDIR } / $ { KEY } .pem &quot; , automatically add the host to list of known hosts and execute &quot; $ { COMMANDS } &quot;
SSH into &quot; hostname &quot; on port 22 as user &quot; myName &quot;
SSH into &quot; hostname &quot; on port 22 as user &quot; myName &quot;
SSH into &quot; localhost &quot; with forced pseudo-terminal allocation , execute &quot; $ heredoc &quot; , and save the output to variable &quot; REL _ DIR &quot;
SSH into &quot; myhost.com &quot; as user &quot; myname &quot; with a check every 60 seconds that the server is still alive
SSH into $ 1 with login name &apos; pete &apos;
SSH into host &quot; $ 1 &quot; using key file &quot; / path / to / ssh / secret / key &quot; and execute command &quot; $ 2 &quot;
SSH into host &quot; server &quot; as user &quot; user &quot;
SSH into server &quot; app1 &quot; as the current user
SSH into server &quot; server.com &quot; as user &quot; remote _ user &quot;
SSH into user @ server and run command $ { SSH _ COMMAND }
SSH login in &apos; middle.example.org &apos; via port 2222 as user &apos; deviceuser &apos; using a private key file &apos; . / device _ id.pem &apos;
SSH using parameters in $ @ in master mode in the background without executing any commands and set the ControlPath to &quot; $ MASTERSOCK &quot;
SSH with parameters specified in &quot; $ @ &quot; using key file &quot; ~ / .ssh / gitkey _ rsa &quot;
SSH with trusted X11 forwarding into &quot; user @ remoteToRemote _ IP &quot; from SSH connection &quot; user @ remote _ IP &quot;
Save &quot; something &quot; into variable &quot; param &quot; in ksh
Save $ line line in history
Save &apos; echo whatever you &quot; want your &quot; command to be &apos; in history
Save &apos; foo &apos; into variable &apos; bar &apos; in ksh
Save IP addresses of the host name in variable &quot; ip &quot;
Save a comma separated list of all $ MY _ DIRECTORY / * / directories to variable &apos; FOLDER &apos;
Save a comma separated list of all directories under current directory tree to variable &apos; FOLDER &apos;
Save a line of 100 random characters either &quot; &quot; . or &quot; &quot; in variable &quot; foo &quot;
Save a list of all 755 permission files / directories under $ dir directory tree to the variable &apos; files &apos;
Save a list of all the files / directories under current directory tree to a file named &apos; foo &apos;
Save a nginx link to &quot; / path / to / file &quot; with the current user and system FQDN host name in variable &quot; path &quot;
Save a space separated list of process ids of currently running jobs to variable &apos; bgxjobs &apos;
Save a unique list of the currently logged in usernames to variable &quot; line &quot;
Save absolute path of &quot; $ path &quot; that may not exist to variable &quot; abspath &quot;
Save absolute path of &quot; $ path &quot; that must exist along with all parents to variable &quot; abspath &quot;
Save absolute path of &quot; $ path &quot; whose parents exist to variable &quot; abspath &quot;
Save absolute path of &quot; / home / nohsib / dvc / .. / bop &quot; in variable &quot; absolute _ path &quot;
Save absolute path of the script filename in variable &quot; MY _ PATH &quot;
Save absolute path of the script filename in variable &quot; SCRIPT &quot;
Save actual working directory in variable &quot; target _ PWD &quot;
Save all directories under the current directory as a comma separated list in variable &quot; FOLDERS &quot;
Save all directories under the current directory as a comma separated list in variable &quot; FOLDERS &quot;
Save all entries that are wrapped around with opening and closing square brackets in file &apos; FILENAME &apos; to variable &apos; var &apos;
Save count of lines from file $ file matching with pattern $ filter and not matching with pattern $ nfilter in variable &apos; totalLineCnt &apos;
Save directory &quot; .. / .. / lib &quot; relative to the executable &quot; gcc &quot; to variable &quot; libdir &quot;
Save first IP address of domain &apos; google.com &apos; in &apos; address &apos; variable
Save first one of space separated parts of each line in $ LOCKFILE file to the &apos; CURRENT _ PID _ FROM _ LOCKFILE &apos; variable
Save full path of command &quot; cat &quot; to variable &quot; CAT &quot;
Save full path of command &quot; mktemp &quot; to variable &quot; MKTEMP &quot;
Save full path of command &quot; rm &quot; to variable &quot; RM &quot;
Save full path of command &quot; tr &quot; to variable &quot; TR &quot;
Save host name in variable &quot; thisHOSTNAME &quot;
Save in QUEUE _ PIDS variable only pid numbers that stored in $ NEW _ PIDS variable
Save list of groups which user $ line belongs to and not matching pattern &quot; _ unknown &#124; sciences &#124; everyone &#124; netaccounts &quot; in &apos; results &apos; variable
Save long listing of all files listed in file &apos; filenames.txt &apos; to &apos; listing &apos; variable
Save long listing of all running processes in the &apos; log &apos; file , and save number of process strings that contain &apos; cntps &apos; in the &apos; cnt &apos; variable .
Save number of lines in &apos; / some / big / file &apos; to &apos; LINES &apos; variable
Save number of lines in &apos; file.txt &apos; file in &apos; nbLines &apos; variable
Save number of lines with any-cased &apos; merge &apos; from $ COMMIT _ EDITMSG file in &apos; MERGE &apos; variable
Save number of processors in system to &apos; NP &apos; variable
Save number of strings with $ expression pattern in &apos; foo.txt &apos; to &apos; big _ lines &apos; variable .
Save only the digits in &quot; $ filename &quot; to variable &quot; number &quot;
Save small letter short day name of the week to variable &apos; DayOfWeek &apos;
Save standard input to variable &quot; myVar &quot;
Save standard input to variable &apos; stdin &apos; until the first character encoded as &apos; \ 004 &apos; is read
Save system information appended with the current date in &apos; filename &apos; variable
Save the FQDN host name of the system in variable &quot; fhost &quot;
Save the FQDN host name of the system in variable &quot; hnd &quot;
Save the UTC date represented by time string $ sting2 as the seconds since epoch to variable &apos; FinalDate &apos;
Save the absolute path of &quot; $ path &quot; to variable &quot; full _ path &quot;
Save the absolute path of &quot; $ path &quot; to variable &quot; fullpath &quot;
Save the absolute path of the current script to variable &quot; SELF &quot;
Save the absolute path of the current script to variable &quot; SELF &quot;
Save the absolute path of the current script to variable &quot; SELF &quot;
Save the absolute path of the current script to variable &quot; SELF &quot;
Save the absolute path of the directory of the current script to variable &quot; DIR &quot;
Save the canonical filename of &quot; $ BASH _ SOURCE &quot; in variable &quot; me &quot;
Save the canonical filename of the script in variable &quot; me &quot;
Save the canonical path of &quot; $ dir / $ file &quot; in variable &quot; path &quot;
Save the contents of &quot; numbers.txt &quot; to variable &quot; f &quot;
Save the current date to &apos; DATE &apos; variable
Save the current time formatted according to the format string &quot; % Y- % m- % d % H : % M : % S &quot; to the variable &apos; CDATE &apos;
Save the current user name in variable &quot; myvariable &quot;
Save the current working directory and the directory name of the current script to variable &quot; DIR &quot;
Save the current working directory to variable &quot; CURRENT &quot;
Save the current working directory with resolved symbolic links to variable &quot; real1 &quot;
Save the date 222 days before today to the variable &apos; date _ 222days _ before _ TodayDay &apos;
Save the day of the year from the time string &quot; 20131220 &quot; to variable &apos; DATECOMING &apos;
Save the directory name of the canonical path to the current script in variable &quot; MY _ DIR &quot;
Save the directory name of the current bash script to variable &quot; path &quot; if it is found in one of the directories specified by PATH .
Save the directory of the full path to the current script in variable &quot; dir &quot;
Save the directory of the full path to the current script in variable &quot; dir &quot;
Save the first &quot; &quot; . separated field of the system host name to variable &quot; HOSTZ &quot;
Save the first line of &quot; $ j &quot; into variable &quot; k &quot; in ksh
Save the first three octets of the host name &apos; s IP address to variable &quot; subnet &quot;
Save the first two letters of the system host name to variable &quot; DC &quot;
Save the first word of the first difference in &quot; .dir _ list _ 2 &quot; compared to &quot; .dir _ list _ 1 &quot; into variable &quot; extract _ dir &quot;
Save the full path of command &quot; f &quot; to variable &quot; full _ f &quot;
Save the full path of command &quot; oracle &quot; to variable &quot; path &quot;
Save the full path of command &quot; ~ / f &quot; to variable &quot; foo &quot;
Save the greater version number of &quot; $ 1 &quot; and &quot; $ 2 &quot; into variable &quot; ver &quot;
Save the last modified time of file &apos; file _ name &apos; to variable &apos; STAMP &apos;
Save the latest modification time ( in format &quot; % T @ % t &quot; of any file under &quot; . / $ dir &quot; to variable &quot; timestamp &quot;
Save the list of all .py files under and below the current directory that contain &quot; something &quot; in their pathnames to output.txt
Save the logical current working directory to variable &quot; basedir &quot;
Save the md5 sum hash of &quot; $ my _ iso _ file &quot; to variable &quot; md5 &quot;
Save the md5 sum of $ twofish to variable &apos; twofish &apos;
Save the network node hostname append with &apos; - &apos; , the current date and &apos; .txt &apos; into variable &apos; filename &apos;
Save the number of bytes in &quot; $ file &quot; after decompression into variable &quot; size &quot;
Save the number of matching executables for &quot; $ cmd &quot; in $ PATH to variable &quot; candidates &quot;
Save the numerically greater value of &quot; $ kf &quot; and &quot; $ mp &quot; into variable &quot; gv &quot;
Save the percentage of packets lost of the 5 packets sent to &quot; $ host &quot; in variable &quot; packet _ loss &quot;
Save the physical current working directory to variable &quot; END _ ABS &quot;
Save the short DNS lookup output of $ WORKSTATION to &apos; WORKSTATION _ IP &apos; variable
Save the short host name appended with &quot; .mysqldb &quot; in variable &quot; DBPREFIX &quot;
Save the short system host name to variable &quot; hostname &quot;
Save the system host name in variable &quot; HOSTNAME &quot;
Save the system host name in variable &quot; HOSTNAME &quot;
Save the system host name into variable &quot; HOST &quot;
Save the system host name to variable &quot; myHostName &quot;
Save the system load average for the past 1 minute of the currently logged in user to variable &apos; proc _ load _ average &apos;
Save the user name in upper case of the current user in variable &quot; v &quot;
Save the user name in upper case of the current user in variable &quot; v &quot;
Save the user name of the current user to variable &quot; me &quot;
Save the user name of the current user to variable &quot; me &quot;
Save the user name of the current user to variable &quot; whoami &quot;
Save the user name of the current user to variable &quot; x &quot;
Saves byte size of $ myvar variable value in the &apos; var2 &apos; variable .
Saves bytes count of the value of &apos; $ each &apos; variable .
Saves calendar of $ month , $ year in the &apos; cal &apos; variable .
Saves file sctipt.sh size in &apos; size &apos; variable .
Saves folder path where target of symbolic link $ file file is located in &apos; base &apos; variable .
Saves index number of file &apos; script.sh &apos; in the &apos; inode &apos; variable .
Saves invoked command &apos; check _ script _ call = $ ( history &#124; tail -1 &#124; grep myscript.sh ) &apos; in variable &apos; check _ script _ call &apos; , preceeding by its number in history .
Saves list of logged in users in system together with &apos; USER &apos; header in the &apos; a &apos; variable .
Saves list of logged in users in system together with &apos; USER &apos; header in the &apos; b &apos; variable .
Saves listing of a current folder in &apos; OUTPUT &apos; variable .
Saves listing of a current folder in &apos; var &apos; variable .
Saves location of file $ 1 in &apos; dir &apos; variable .
Saves location of file $ 1 in &apos; dir _ context &apos; variable .
Saves number of lines of current directory listing in &apos; n _ max &apos; variable .
Saves real path of the folder containing the current script
Saves space separated content of $ RAW _ LOG _ DIR in FILES variable
Scan every file in / etc for IPV4 addresses while trying to elminate false positives .
Scan every file in / etc for IPV4 addresses .
Search all directory from / usr downwards for files whose inode number is 1234 and print them .
Search all files &amp; directoy from root directory which are greater then 100M and delete them .
Search in current directory downwards all files whic have permission 777 .
Search in current directory downwards all files which have not been accessed since last 7 days
Search in current directory downwards all files whose owner is aa1 or whose name is myfile .
Search in current directory downwards all files whose size is 10 blocks .
Search in current directory downwards all files whose size is greater than 10 bytes .
Search &quot; file1 &quot; for lines matching regex patterns listed in &quot; file2 &quot; and list the unique results ( sorted alphabetically )
Search &quot; file1 &quot; for lines matching regex patterns listed in &quot; file2 &quot; and list the unique results ( sorted alphabetically )
Search &quot; input.txt &quot; for regex patterns only matching those listed in &quot; ignore.txt &quot; , list the unique lines and prefix with the number of occurrences
Search &quot; inputfile &quot; for lines starting with &quot; t : &quot; and group the results in files with at most 200 lines each
Search &quot; mygzfile.gz &quot; for &quot; string to be searched &quot;
Search &quot; whatyousearchfor &quot; in history and print 3 lines before and 4 lines after
Search $ MYGROUP in / etc / group , take the 4th colon ( &apos; : &apos; ) separated field , replace comma ( &apos; , &apos; ) with newline and save the result to variable &apos; MYUSERS &apos;
Search * .txt files under and below / directory / containing / files for &quot; pattern _ to _ search &quot;
Search * .x files from the current directory tree for string &quot; fred &quot;
Search .c and .h files in the current directory tree for &quot; expr &quot;
Search / dev / shm and / tmp for regular files not changed in two weeks
Search / etc for files modified within the last 10 minutes
Search / etc for files modified within the last day
Search / path / to / your / directory for * .avi and * .flv files
Search / public / html / cosi for files whose name is &quot; wiki.phtml &quot;
Search / root / directory / to / search recursively for the files matching pattern &apos; filename . * &apos;
Search / some / directory for files that are owned by the user &quot; joebob &quot;
Search / tmp / for files smaller than 100 bytes
Search / usr , / home , / tmp for * .jar files
Search / usr / bin for regular files that have been modified within the last 10 days
Search / usr / bin for regular files that were last accessed more than 100 days ago
Search / usr / local for subdirectories whose names end with a number 0-9
Search / usr / local recursively for directories whose names end with a number 0-9
Search / usr / src for filenames not ending in &quot; * , v &quot;
Search / var for files matching regular expression &apos; . * / tmp / . * &#91; 0-9 &#93; * .file &apos;
Search / var / log for logs larger than 10 megabytes
Search / var / tmp for files larger than 30 MB modified 31 days ago
Search PATH for utilities called &quot; rename &quot; , display the type of file ( script , executable , ... ) for each match found .
Search PATH for utilities called &quot; rename &quot; , display the type of file ( script , executable , ... ) for each match found .
Search all * .c files from the current directory tree for &quot; hogehoge &quot;
Search all * .c files from the current directory tree for &quot; hogehoge &quot;
Search all * .c files from the current directory tree for &quot; hogehoge &quot;
Search all * .txt files under ~ / documents for the word &quot; DOGS &quot;
Search all .c and .h files in the current directory tree for string &quot; e &quot;
Search all .c files from the current directory tree for &quot; keyword &quot; , ignoring the case
Search all .java files residing in the current directory tree and modified at least 7 days ago for string &quot; swt &quot;
Search all .py files in the current directory tree for &quot; some _ function &quot;
Search all Python files in the current directory tree for string &quot; import antigravity &quot;
Search all directories starting from the root directory for &quot; filename &quot;
Search all files and directories either of the directory / home / oracle and / home / databse which contain the &quot; zip &quot; anywhere in the files or directory name .
Search all files called &quot; abc &quot; that reside in the current directory tree for string &quot; xyz &quot;
Search all files called &quot; abc &quot; that reside in the current directory tree for string &quot; xyz &quot;
Search all files from the / tmp directory tree for the string &quot; search string &quot;
Search all files in the current directory tree for &quot; SearchString &quot; , ignoring .html files and skipping .svn directories
Search all files in the current directory tree that are named &quot; whatever &quot; for &quot; whatever &quot;
Search all files in the current directory tree that are named &quot; whatever &quot; for &quot; you _ search _ for _ it &quot;
Search all files in the current directory tree whose names contain &quot; &quot; . for &quot; SearchString &quot;
Search all files in the current directory tree whose names end in &quot; 1 &quot; for string &quot; 1 &quot;
Search all files in the current directory tree whose names end in &quot; 1 &quot; for string &quot; 1 &quot;
Search all files in the current directory tree whose names end in &quot; 1 &quot; for string &quot; 1 &quot;
Search all files in the current directory tree , except * .html and * .svn * , for &quot; SearchString &quot;
Search all files in the current directory tree , except GIT files , for &quot; string-to-search &quot;
Search all files under and below / etc for IP addresses
Search all non-hidden files in the current directory and all non-hidden sub-directories for the file hi.dat .
Search all of / usr for any directory named &apos; My Files &apos; , for each directory found , copy it to / iscsi preserving full paths and attributes , then remove it .
Search all of / usr for any directory named &apos; My Files &apos; , for each directory found , copy it to / iscsi preserving full paths and attributes .
Search all regular files in the current directory for &quot; example &quot;
Search all regular files in the current directory tree for &quot; example &quot;
Search all regular files in the current directory tree for &quot; string &quot;
Search all regular files in the current directory tree for &quot; string &quot;
Search all the * .pl files in the current directory and subdirectories , and print the names of any that don &apos; t have a line starting with &apos; use strict &apos;
Search all the .c and .h files in the current directory tree for &quot; expr &quot;
Search all the regular files from the current directory tree for &quot; search string &quot;
Search all the regular files in the current directory for &quot; example &quot;
Search all the regular files in the current directory tree for &quot; example &quot;
Search all variables and their values for &quot; NAME &quot;
Search appended data in &quot; logfile.log &quot; for &quot; something &quot; with a timeout of 3 seconds
Search case insensitively for &apos; facebook &apos; , &apos; xing &apos; , &apos; linkedin &apos; , &quot; googleplus &apos; in file &apos; access-log.txt &apos; , extract the matched part , sort them and print them by sorting them in asending order of the number of repeated lines
Search case insensitively for &apos; foo &apos; in all the files with &apos; .java &apos; extension under current directory tree and show only the file names
Search core files in current direcory and delete .
Search decompressed &quot; filename.gz &quot; for case-insensitive &quot; user-user &quot;
Search directories / opt , / usr , / var for regular file foo
Search directories / res / values-en-rUS and / res / xml for XML files
Search directories called &apos; backup &apos; from / usr directory downwards and print them .
Search directory $ CURR _ DIR for regular files that were changed , accessed , or modified $ FTIME days ago
Search directory / Users / david / Desktop / recursively for regular files
Search directory / Users / david / Desktop / recursively for regular files with extensions .txt , .mpg , .jpg
Search directory / home / ABCD recursively , starting from one level below , for regular files
Search directory / path / to / check / for regular files
Search directory / tmp / foo for files containing &quot; / tmp / foo / bar &quot; in their full names
Search directory foo for files containing &quot; / tmp / foo / bar &quot; in their full names
Search directory foo for files containing &quot; foo / bar &quot; in their full names
Search directory lpi104-6 for files with inode number 1988884
Search directory tree $ DIR for * .txt files
Search directory tree $ DIR for * .txt files
Search directory tree $ DIR for * .txt files
Search directory tree $ DIR for * .txt files
Search directory tree / srv / $ { x } for regular files accessed at least 10080 minutes ago , and remove those files
Search directory tree &apos; MyApp.app &apos; for directories whose name is &apos; Headers &apos; and delete them
Search directory tree &apos; MyApp.app &apos; for directories whose name is &apos; Headers &apos; and delete them
Search directory tree &apos; MyApp.app &apos; for directories whose name is &apos; Headers &apos; and delete them
Search directory tree &apos; MyApp.app &apos; for directories whose name is &apos; Headers &apos; and delete them in an optimized way
Search directory tree &apos; MyApp.app &apos; for directories whose name is &apos; Headers &apos; and delete them in an optimized way
Search directory tree &apos; foo &apos; for files named &apos; Headers &apos;
Search directory trees / tmp and / var / tmp for &quot; testfile.txt &quot;
Search directory trees / usr / local / man and / opt / local / man for files whose names begin with &apos; my &apos;
Search directory trees / usr / share / doc , / usr / doc , and / usr / locale / doc for files named &apos; instr.txt &apos;
Search directory trees foo and bar for .java files
Search every directory except the subdirectory excluded _ path for a regular file &apos; myfile &apos;
Search everywhere for a file called &apos; httpd.conf &apos; that is newer than / etc / apache-perl / httpd.conf
Search everywhere for directories named &apos; root &apos;
Search everywhere for files changed within the last minute
Search everywhere for hidden file &apos; .profile &apos;
Search file / etc / logs / Server.log for lines containing &quot; Error &quot;
Search file aaa from current direcoty downwards and print it .
Search files &quot; file-containing-can &apos; t &quot; in the current directory tree for the string &quot; can &apos; t &quot;
Search folder / home / ABCD / recursively for regular files
Search for &quot; 000 &quot; in the hex dump of &quot; file-with-nulls &quot;
Search for &quot; 840 &quot; in history
Search for &quot; # define &quot; in all files in the current directory , excluding backup files * ~ , * .orig , * .bak
Search for &quot; 1234567890 &quot; in every gzip file modified between 8 : 00 and 9 : 00 on 2014-04-30
Search for &quot; CONFIG _ 64BIT &quot; in gzip compressed file &quot; / proc / config.gz &quot;
Search for &quot; LOG &quot; in jsmith &apos; s home directory tree
Search for &quot; Stock &quot; in all * .java files from the current directory tree
Search for &quot; YOURSTRING &quot; in all files under current directory
Search for &quot; facebook \ &#124; xing \ &#124; linkedin \ &#124; googleplus &quot; in &quot; access-log.txt &quot; and print a count of the unique entries
Search for &quot; foo &quot; in every file in the current directory and number the output
Search for &quot; ifconfig &quot; in the output of &quot; history &quot; and print 5 lines that precede and follow
Search for &quot; ifconfig &quot; in the output of &quot; history &quot; and print 5 lines that precede and follow
Search for &quot; largecalculation &quot; in all processes owned by the current user
Search for &quot; pattern &quot; in &quot; file &quot; and join each line by a space
Search for &quot; pattern &quot; in all the .c files in the current directory tree
Search for &quot; vid = 123 &quot; in all compressed files found under &quot; / my _ home &quot; matching &quot; * log.20140226 * &quot;
Search for &quot; whatever &quot; in all files under / dir directory ensuring white space safety in filenames
Search for &quot; www.athabasca &quot; in all files under current directory
Search for $ GROUP at the beginning of each line in / etc / group and print the last colon ( &apos; : &apos; ) separated entry with comma replaced with newlines
Search for $ SEARCH in all regular files under $ DIR directory tree and display the number of bytes of the matched output
Search for &apos; / usr / bin / perl &apos; in all regular files under current dirctory tree and also show a long listing of them
Search for &apos; Attached : Yes &apos; in all regular files under &apos; / proc / scsi &apos; directory tree matching the path &apos; / proc / scsi / usb-storage &apos; and show only the matched filenames
Search for &apos; DOGS &apos; in all files with &apos; .txt &apos; extension under ~ / documents and also print the file names
Search for &apos; It took &apos; in all $ srch1 * ( case insensitive ) files under current directory
Search for &apos; Processed Files &apos; in all $ srch * ( case insensitive ) files under current directory
Search for &apos; String &apos; case insensitively in all files under current directory tree and show the matched lines with their filenames
Search for &apos; Text To Find &apos; in all regular files under current directory tree and show the matched files
Search for &apos; Text To Find &apos; in all regular files under current directory tree and show the matched files and matched lines with line numbers
Search for &apos; birthday &apos; ( case insensitive ) in all regular files under ~ / Documents directory tree and show only the filenames
Search for &apos; class Pool &apos; in all * .java ( case insensitive ) files under current directory
Search for &apos; example &apos; in all regular files from the current directory
Search for &apos; example &apos; in all regular files from the current directory tree
Search for &apos; example &apos; in all regular files under current directory tree
Search for &apos; example &apos; in all regular files under current directory tree and also print the filenames
Search for &apos; foo &apos; in all regular files under &apos; sources &apos; directory tree and show the matched lines with filenames
Search for &apos; foo &apos; in all the java files under &apos; dir1 &apos; , &apos; dir2 &apos; and &apos; dir3 &apos; directory tree and print only the names of the matched files
Search for &apos; foo = &apos; in all * .png files under current directory without descending into * .gif and * .svn directories
Search for &apos; invalidTemplateName &apos; in all regular files in directories / files taken from the glob pattern &apos; . / online _ admin / * / UTF-8 / * &apos; and show the matched lines with the filenames
Search for &apos; ireg &apos; in all PHP files under &apos; project &apos; directory tree and show only the files that match
Search for &apos; js &apos; in all files under current directory that match &apos; some string &apos; in their names
Search for &apos; keyword &apos; in all javascript files under current directory tree excluding all paths that includes the directory &apos; node _ modules &apos;
Search for &apos; magic &apos; in all regular files under current directory tree
Search for &apos; mystring &apos; in all * .txt ( case insensitive ) files under current directory
Search for &apos; mystring &apos; in all * .txt files under current directory
Search for &apos; mystring &apos; in all * .txt files under current directory
Search for &apos; mystring &apos; in all * .txt files under current directory
Search for &apos; mystring &apos; in all * .txt files under current directory
Search for &apos; organic &apos; in all files with &apos; .html &apos; extension under ~ / html directory
Search for &apos; pattern &apos; in all files with &apos; .cc &apos; extension under current directory tree and show the matched lines with line numbers and filenames
Search for &apos; pattern &apos; in file &apos; file &apos; and print the matched lines by separating them with spaces instead of newlines
Search for &apos; pattern _ to _ search &apos; in all regular files with &apos; .txt &apos; extension under &apos; / directory / containing / files &apos; and show the matched lines along with filenames
Search for &apos; some string &apos; in all * .axvw files under current directory and show the matched lines with line numbers
Search for &apos; some string &apos; in all * .axvw files under current directory and show the matched lines with line numbers
Search for &apos; some string &apos; in all * js files under current directory and show the matched lines with line numbers
Search for &apos; some string &apos; in all * js files under current directory and show the matched lines with line numbers
Search for &apos; sometext &apos; in all the files with &apos; .txt &apos; extension under current directory tree and also print the filenames
Search for &apos; specific string &apos; in all files matching the name pattern &apos; &quot; * . &#91; txt &#124; TXT &#93; &quot; &apos; under current directory tree
Search for &apos; string &apos; case insensitively in all files under current directory tree and show the matched lines with their filenames
Search for &apos; string-to-find &apos; in all HTML files under current directory tree and show the matched lines with their filenames
Search for &apos; string-to-find &apos; in all files under current directory tree and show the matched lines with their filenames
Search for &apos; string-to-find &apos; in all files under current directory tree matching the regex &apos; filename-regex . \ * \ .html &apos; in their paths and show the matched lines along with the filenames
Search for &apos; stuff &apos; in all * , txt files under current directory
Search for &apos; text &apos; in all regular files under current directory tree
Search for &apos; whatIWantToFind &apos; in all files under current directory
Search for &apos; &quot; foobar &quot; &apos; in all files starting with &apos; &quot; &apos; and ending with &quot; &apos; and contain &apos; . &apos; in their names in the entire filesystem and display only the matched files
Search for * pattern * in and below current directory
Search for .bam files anywhere in the current directory recursively
Search for .pdf files
Search for .zip files that are larger than 100M found anywhere in the file system and delete those files .
Search for ERROR in all btree * .c files under current directory
Search for Subscription.java under current directory , and go to directory containing it .
Search for a line starting with &apos; use strict &apos; in all files with &apos; .pl &apos; extension under current directory tree and show the unmatched files only
Search for a pattern &quot; can &apos; t &quot; in all the files with the name &quot; file-containing-can &apos; t &quot; in the current directory tree
Search for aaa in all files under current directory and count the number of matches
Search for all * .conf files in entire file system
Search for all * .ogg ( case insensitive ) files in the $ HOME directory that have an access time of greater than 30 days
Search for all .html files in directory &quot; www &quot; and output only the basename ( without containing path ) of each .
Search for all .mp3 files in the / mnt / usb directory tree
Search for all directories named foo , FOO , or any other combination of uppercase and lowercase characters beneath the current directory .
Search for all files and directories named foo , FOO , or any other combination of uppercase and lowercase characters beneath the current directory .
Search for all files in the / home directory tree that have the same inode number
Search for all files in the current directory recursively whose names begin with &quot; Linkin Park &quot;
Search for all files in the current directory recursively whose names contain &quot; linkin park &quot; , ignoring the case
Search for all files in the current directory recursively whose names contain &quot; linkin &quot; , ignoring the case
Search for all files in the current directory recursively whose names end with &quot; Linkin Park &quot;
Search for all files named foo , FOO , or any other combination of uppercase and lowercase characters beneath the current directory .
Search for all files newer than file / tmp / t
Search for all files newer than file / tmp / t1 but not newer than file / tmp / t2
Search for all files not newer than file / tmp / t
Search for all files owned by user www-data that are not larger than 100kb
Search for all files that end in &quot; .conf &quot;
Search for all files with either &quot; sitesearch &quot; or &quot; demo &quot; in their path names
Search for all files with either &quot; sitesearch &quot; or &quot; demo &quot; in their path names
Search for all files with either &quot; sitesearch &quot; or &quot; demo &quot; in their path names
Search for all files with same inode NUM
Search for all files with the same inode number 41525360
Search for all jpg images on the system and archive them
Search for all non-hidden files
Search for all the directories in directories taken from the glob pattern &apos; / path / to / folders / * &apos; and add the extension &quot; .mbox &quot; to all and create directories named &apos; Messages &apos; inside them
Search for all the directories named &apos; m ? &apos; under current directory tree , add the extension &quot; .mbox &quot; to all , create a &apos; Messages &apos; directories inside them and move all files with .emlx extension to &apos; Messages &apos; directory
Search for all the files in man pages and return the manual page for grep
Search for all zero-byte files and move them to the / tmp / zerobyte folder
Search for broken symlinks
Search for case insensitive pattern &apos; search for me &apos; in all files that match the name pattern &apos; * . &#91; ! r &#93; * &apos; under current directory tree
Search for case-insensitive &quot; string &quot; in &quot; log.tar.gz &quot;
Search for directories that contain the phrase &quot; foo &quot; but do not end in &quot; .bar &quot;
Search for directory foo ignoring case
Search for empty files
Search for file &quot; file &quot; between level 2 and 3 of the directory tree
Search for file &quot; file &quot; with minimum depth set to 4
Search for file names with &quot; bad &quot; characters in the current directory and delete the files .
Search for filenames matching &quot; android &quot; in the current directory and number the output
Search for files &quot; file1 &quot; or &quot; file9 &quot;
Search for files bigger than 10M
Search for files greater than 20MB under your home directory ( / home / user )
Search for files in the current user &apos; s home directory and below for files that have not been accessed for more than 100 days and ask the user for permission to delete each file , one by one .
Search for files in your home directory which have been modified in the last twenty-four hours
Search for files in your home directory which have been modified in the last twenty-four hours .
Search for files only that end with .php and look for the string $ test inside those files
Search for files only that end with .php and look for the string $ test inside those files
Search for files only that end with .php and look for the string $ test inside those files
Search for files only that end with .php and look for the string $ test inside those files
Search for files specifying the maximum depth of the search
Search for files specifying the minimum depth of the search
Search for files that are at least 1.1GB
Search for files that are at least 100MB
Search for files that were accessed less than 5 days ago .
Search for files which are writable by somebody
Search for files which have read and write permission for their owner and group , and which other users can read , without regard to the presence of any extra permission bits
Search for files which have read and write permission for their owner , and group , but which other users can read but not write to .
Search for files whose name is &quot; filename &quot; and whose permissions are 777
Search for files whose size is between 100 kilobytes and 500 kilobytes
Search for files with &quot; demo &quot; in their names and &quot; sitesearch &quot; in their path names
Search for files with &quot; sitesearch &quot; in their names and &quot; demo &quot; in their path names
Search for files / directories named &apos; fileName.txt &apos; under &apos; / path / to / folder &apos; directory tree without traversing into directories that contain the string &apos; ignored _ directory &apos; in their paths
Search for files / directories named &apos; fileName.txt &apos; under current directory tree without traversing into &apos; . / ignored _ directory &apos;
Search for files / directories that are readable for everybody , have at least one write bit set but are not executable for anybody
Search for files / directories which are writable by both their owner and their group
Search for files / directories which are writable by both their owner and their group
Search for files / directories which are writable by either their owner or their group
Search for files / directories which are writable by either their owner or their group
Search for files / directories which are writable by either their owner or their group
Search for files / directories which are writable by somebody ( their owner , or their group , or anybody else )
Search for files / directories which have read and write permission for their owner , and group and only read permission for others
Search for files / directories which have read and write permission for their owner , and group and only read permission for others
Search for files / directories with a case insensitive .txt extension in entire file system
Search for files / directories with the case insensitive pattern anaconda * in / var / log
Search for files / directories with the case insensitive pattern anaconda . * in / var / log
Search for files / directories with the case insensitive pattern anaconda . * in / var / log directory and create an archive ( file.tar ) of the last file found
Search for files / directories with the case insensitive pattern anaconda . * in var / log directory
Search for files / directories with the case insensitive pattern anaconda . * in var / log directory and create an archive ( file.tar ) of all the files found
Search for files / directories with the case insensitive pattern anaconda . * in var / log directory and create an archive ( file.tar ) of the last file found
Search for files / directories with the case insensitive pattern anaconda . * in var / log directory and create an archive ( file1.tar ) of the last block of files sent to xargs
Search for files / directories with the case insensitive pattern anaconda . * in var / log directory and create an archive ( somefile.tar ) of all the files found
Search for files / directories with the case insensitive pattern anaconda . * in var / log directory and create an archive ( somefile.tar ) of all the files found ensuring white space safety
Search for first match of the case insensitive regex &apos; oyss &apos; in all * .txt files under current directory and print the file paths along with the matches
Search for first match of the case insensitive regex &apos; re &apos; in all * .coffee files under current directory
Search for first match of the case insensitive regex &apos; re &apos; in all * .coffee files under current directory and print the file paths along with the matches
Search for hidden files non-recursively
Search for line 111 in file &quot; active _ record.rb &quot; with 2 lines of context
Search for line number 111 in file &quot; active _ record.rb &quot;
Search for lines that have zero or more whitespace characters before &quot; http : / / &quot; and number the uniquely sorted output
Search for non-empty files
Search for occurrences of string &quot; main ( &quot; in the .c files from the current directory tree
Search for occurrences of string &quot; main ( &quot; in the .c files from the current directory tree
Search for regular expression &apos; expr &apos; in all .c and .h files from the current directory tree
Search for regular file foo ignoring case
Search for regular files of the grooup &apos; users &apos; in the file system
Search for regular files of the user bluher in the file system
Search for symlinks pointing to anywhere within / mnt / oldname /
Search for the Perl regex &quot; &#91; \ x80- \ xFF &#93; &quot; in * .xml files under current directory tree
Search for the case insensitive pattern &apos; PATTERN &apos; in all files under current directory tree and display the matched files
Search for the case insensitive pattern &apos; search for me &apos; in all files with &apos; .p &apos; , &apos; .w &apos; and &apos; .i &apos; extension under current directory tree without descending into &apos; .svn &apos; and &apos; pdv &apos; directories
Search for the case insensitive regex &apos; STRING _ TO _ SEARCH _ FOR &apos; in all files under current directory
Search for the case insensitive regex expanded by $ 2 in all files named $ 1 ( to be expanded ) under current directory
Search for the case insensitive regex expanded by $ 2 in all files named $ 1 ( to be expanded ) under current directory
Search for the case insensitive regex expanded by $ 2 in all files named $ 1 ( to be expanded ) under current directory
Search for the extended grep regex &apos; expr &apos; in all files with &apos; .c &apos; and &apos; .h &apos; extension under current directory tree
Search for the extended regex expanded by &quot; $ MONTH \ / $ YEAR . * GET . * ad = $ ADVERTISER HTTP \ / 1 &quot; in the decompressed contents of the / var / log / apache2 / access * .gz files that are newer than . / tmpoldfile and older than . / tmpnewfile
Search for the extened regex &apos; expr &apos; in all files with &apos; .c &apos; and &apos; .h &apos; extension under current directory tree
Search for the files that are owned by user rooter or by user www-data
Search for the files / directories that were modified more than an hour ago
Search for the literal string &apos; v $ process &apos; in all files under current directory
Search for the pattern &apos; ^ use strict &apos; in all * .pl files under current directory
Search for the pattern &apos; search string &apos; in all the files in the &quot; / tmp folder and display the matched lines along with the file names
Search for the query &quot; filename &quot; in the current directory and any subdirectories
Search for the regex &quot; + \ S \ + &quot; in file &apos; in.txt &apos; and print the matches by replacing newlines with comma ( &apos; , &apos; )
Search for the regex &quot; \ $ wp _ version = &quot; in all the regular files that end with &apos; / wp-includes / version.php &apos; ( case insensitive ) in their paths in directories / files taken from the glob pattern &apos; / home / * / / public _ html / &apos; and show the matched lines along with the file names
Search for the regex &quot; \ $ wp _ version = &quot; in all the regular files that end with &apos; / wp-includes / version.php &apos; ( case insensitive ) in their paths in directories / files taken from the glob pattern &apos; / var / www / vhosts / * / httpdocs &apos; and show the matched lines along with the file names
Search for the regex $ greppattern in all files with &apos; .c &apos; or &apos; .h &apos; extension under $ searchpath with name pattern $ filepat and show the matched line numbers , file names and matched lines
Search for the regex &apos; - &gt; get ( \ &#124; # hyphenate &apos; in all files with &apos; .pl &apos; or &apos; .pm &apos; extension under &apos; / users / tom &apos; directory tree and only show the filenames
Search for the regex &apos; &#91; 0-9 &#93; &#91; 0-9 &#93; * &#91; . &#93; &#91; 0-9 &#93; &#91; 0-9 &#93; * &#91; . &#93; &#91; 0-9 &#93; &#91; 0-9 &#93; * &#91; . &#93; &#91; 0-9 &#93; &#91; 0-9 &#93; * &apos; in all files under / etc
Search for the regex &apos; ^ ERROR &apos; in all * .log files under current directory
Search for the regex &apos; pattern _ to _ search &apos; in all files under &apos; / directory / containing / files &apos; and show the matched lines as well as the file names
Search for the regex ... in the manual of the find command
Search for the regex ^ catalina in the first line of each file under current directory
Search for the regex expanded by the variable $ SEARCH in all regular files under $ DIR directory tree
Search for the regex expaned by the variable $ SEARCH in all regular files under $ DIR directory tree
Search for the string &quot; ERROR &quot; in all XML files in the current working directory tree
Search for the string &apos; device &apos; in all regular files in the entire filesystem
Search for the string &apos; foo &apos; in * .html files under / usr / src / linux directory
Search for the string &apos; git &apos; in all the files under current directory tree excluding paths and names that contain the string &apos; git &apos;
Search for the string &apos; git &apos; in all the files under current directory tree without traversing into &apos; .git &apos; folder and excluding files that have &apos; git &apos; in their names
Search for the string &apos; magic &apos; in all regular files under current directory tree and display long listing of them
Search for the wp-config.php file in / var / www and one level below
Search for utility &quot; foo &quot; in PATH , display its file type description .
Search history for &quot; part _ of _ the _ command _ i _ still _ remember _ here &quot;
Search in current directory downwards all files whose owner is aa1 and grop is grp .
Search in current directory downwards all files whose size is 10 bytes ( Characters ) .
Search in the current directory and all sub-directories except . / D and any further sub-directories also named D for the file named hi.dat
Search in the current directory and all sub-directories except . / D for the file named hi.dat
Search in the current directory and all sub-directories except . / D for the file named hi.dat .
Search level 3 of the current directory tree for the directories whose pathnames contain &quot; New Parts &quot;
Search my _ folder recursively for text files containing &quot; needle text &quot;
Search non-recursively directory tree &apos; MyApp.app &apos; for directories whose name is &apos; Headers &apos; and delete them in an optimized way
Search only for directories
Search only for regular files
Search recursively through / mydir , outputting only the base ( leaf ) name of each file , directory , symlink etc. without any containing directories , that is the part following the last slash .
Search regular files under ~ / mail for string &quot; Linux &quot;
Search subdirectory &apos; Linux &apos; in the current directory for file &apos; teste.tex &apos;
Search the &quot; katalogi &quot; directory tree for files named &quot; wzorzec &quot;
Search the &quot; test1 &quot; directory recursively for regular files
Search the &quot; test1 &quot; directory recursively for regular files named &quot; textfile.txt &quot;
Search the &quot; your / dir &quot; directory for empty subdirectories
Search the &apos; tmp &apos; directory for .mp3 files
Search the * .c files residing in the current directory tree for string &quot; blash &quot;
Search the * .cc files in the current directory tree for string &quot; xxx &quot;
Search the * .cc files in the current directory tree for string &quot; xxx &quot;
Search the * .code files from the current directory tree for string &apos; pattern &apos;
Search the * .code files from the current directory tree for string &apos; pattern &apos;
Search the * .txt files from the current directory tree for &quot; string &quot;
Search the . / bin directory recursively for files called &quot; cp &quot;
Search the .VER files from the current directory tree for Perl regular expression &quot; Model-Manufacturer : . \ n &quot; .
Search the .VER files from the current directory tree for string &quot; Test _ Version = &apos;
Search the .c files residing in the Lib / directory tree for lines beginning with &quot; PyErr &quot;
Search the .cs files of the current directory tree for string &quot; content pattern &quot;
Search the .css files in the / starting / directory tree for &quot; .ExampleClass &quot;
Search the .java files from the / Applications / directory tree for TODO lines
Search the .java files from the / Applications / directory tree for TODO lines
Search the .java files from the / Applications / directory tree for TODO lines
Search the .java files from the current directory tree for TODO lines
Search the .java files from the current directory tree for TODO lines
Search the .log files in the current directory tree for string &quot; The SAS System &quot;
Search the .py files residing in the current directory tree for &quot; something &quot;
Search the .sh files in the current directory tree for string &quot; ksh &quot;
Search the / Applications directory tree for * .app directories
Search the / Path directory tree for files matching pattern &quot; file _ name * &quot;
Search the / Path directory tree for files matching pattern &quot; file _ name * &quot; and containing &quot; bar &quot; in their pathnames
Search the / Path directory tree for files whose pathnames match pattern &quot; / Path / bar * &quot; and whose names match pattern &quot; file _ name * &quot;
Search the / Path / bar * directories recursively for files matching pattern &quot; file _ name * &quot;
Search the / dir directory tree for files whose names match regular expression &apos; . * 2015 . * \ ( album . * \ &#124; picture . * \ ) &apos;
Search the / dir directory tree for files whose names match regular expression &apos; 2015 . * ( album &#124; picture ) &apos;
Search the / etc directory tree for files accessed within the last 24 hours
Search the / etc directory tree for symbolic links
Search the / etc / apache-perl directory tree for files newer than / etc / apache-perl / httpd.conf
Search the / home / bozo / projects directory tree for files modified within the last 24 hours
Search the / home / pankaj directory for regular files whose status has changed within the last 5 minutes
Search the / home / sdt5z / tmp directory tree for files named &quot; accepted _ hits.bam &quot;
Search the / home / test directory tree for directories and files called &apos; .ssh &apos;
Search the / home / user1 directory tree for files whose names end in &quot; .bin &quot;
Search the / home / weedly directory tree for regular files named myfile
Search the / home / www directory tree for regular files
Search the / media / shared directory recursively for MP3 and OGG files
Search the / mnt / raid / upload directory tree for files that have been modified within the last 7 days
Search the / mnt / raid / upload directory tree for files that have not been modified within the last 5 days
Search the / myfiles directory tree for files last accessed more than 30 days ago
Search the / myfiles directory tree for files last modified 2 days ago
Search the / myfiles directory tree for files that are 5 512 byte blocks in size
Search the / myfiles directory tree for files whose names contain &quot; blue &quot;
Search the / myfiles directory tree for regular files with at least these permissions : 647
Search the / myfiles directory tree for regular files with read and write permissions set for &apos; others &apos;
Search the / path directory recursively for TXT files
Search the / path directory tree for files having permissions 777
Search the / path directory tree for files lacking the group writable bit
Search the / path directory tree for files lacking the group writable bit
Search the / path directory tree for files matching pattern &apos; * .foo &apos;
Search the / path directory tree for files missing g + w and o + w bits
Search the / path directory tree for files missing g + w or o + w bits
Search the / path directory tree for files that do not have a valid user or group
Search the / path directory tree for regular files
Search the / path tree for all executables
Search the / path / to / dir directory tree for .c files
Search the / path / to / directory tree for regular files modified 61 days ago and then remove them
Search the / root directory recursively for files named &quot; FindCommandExamples.txt &quot;
Search the / root directory recursively for the regular file named &quot; myfile &quot;
Search the / root directory recursively for the regular file named &quot; myfile &quot; ignoring &quot; work &quot; directories
Search the / root directory recursively for the regular file named &quot; myfile &quot; ignoring / root / work /
Search the / storage / sdcard0 / tencent / MicroMsg / directory tree for JPG files
Search the / tmp directory tree for files owned by user &apos; ian &apos;
Search the / tmp tree for files between 10kb and 20kb
Search the / tmp / directory recursively for files matching regular expression &quot; . * file &#91; 0-9 &#93; + $ &quot;
Search the / tmp / directory recursively for regular files
Search the / usr / directory tree for files newer than file / tmp / stamp
Search the / usr / bin directory tree for regular files accessed more than 100 days ago
Search the / usr / bin directory tree for regular files modified or created less than 10 days ago
Search the / usr / local / doc directory tree for .texi files
Search the / var / www / tree for files not owned by user &apos; apache &apos;
Search the / var / www / tree for files owned by root or unknown group and change their group to &apos; apache &apos;
Search the CSS files found in the current directory tree for string &quot; foo &quot;
Search the Movies folder in the user &apos; s home directory for files larger than 1024 megabytes in size .
Search the XML files from directories / res / values-en-rUS and / res / xml for string &quot; hovering _ msg &quot;
Search the &apos; images &apos; directory tree for regular files
Search the &apos; research &apos; directory and one level below for directories that are not owned by group &apos; ian &apos;
Search the bla directory recursively for * .so files
Search the current directory and all of its sub-directories for the file &apos; file1 &apos; .
Search the current directory and all of its sub-directory for any PDF files being careful to prevent the shell from expanding &quot; * &quot; before it &apos; s passed to find .
Search the current directory and all of its sub-directory for any PDF files being careful to prevent the shell from expanding anything in &apos; * .pdf &apos; before it &apos; ss passed to find .
Search the current directory and all of its sub-directory for any PDF files .
Search the current directory and all subdirectories for files that have 777 permissions and the permissions to 755
Search the current directory and directories below for .sql files
Search the current directory and its sub-directories for any file that has &quot; bsd &quot; somewhere in its name .
Search the current directory and two levels below for file &apos; teste.tex &apos;
Search the current directory for HTML files whose names begin with &quot; a &quot;
Search the current directory for PHP files
Search the current directory for all files with no &apos; read &apos; privilege for &apos; others &apos;
Search the current directory for all regular files executable by &apos; user &apos; , &apos; group &apos; , and &apos; others &apos;
Search the current directory for files whose names start with &quot; messages &quot; . ignoring SVN and CVS files
Search the current directory for files whose names start with &quot; messages &quot; . ignoring SVN files
Search the current directory for files whose names start with &quot; messages &quot; . ignoring SVN , GIT , and .anythingElseIwannaIgnore files
Search the current directory for files whose names start with &quot; messages &quot; . ignoring SVN , GIT , and .anythingElseIwannaIgnore files
Search the current directory for files whose names start with my
Search the current directory for regular files whose names start with my
Search the current directory recursively for * .txt files with lines that match regular expression &quot; ^ string &quot;
Search the current directory recursively for .m4a files
Search the current directory recursively for .sh files whose names begin with &quot; new &quot;
Search the current directory recursively for MOV files
Search the current directory recursively for MOV files , following symlinks
Search the current directory recursively for directories with the execute permission set for everybody
Search the current directory recursively for files containing &quot; needle text &quot;
Search the current directory recursively for files containing &quot; needle text &quot;
Search the current directory recursively for files containing &quot; needle text &quot;
Search the current directory recursively for files containing &quot; needle text &quot;
Search the current directory recursively for files containing &quot; string &quot;
Search the current directory recursively for files last modified within the past 24 hours
Search the current directory recursively for files last modified within the past 24 hours ignoring .swp files and &quot; en &quot; and &quot; es &quot; directories
Search the current directory recursively for files last modified within the past 24 hours ignoring .swp files and paths . / es * and . / en *
Search the current directory recursively for files last modified within the past 24 hours ignoring .swp files and paths . / es * and . / en *
Search the current directory recursively for files last modified within the past 24 hours ignoring .swp files and paths . / es * and . / en *
Search the current directory recursively for files last modified within the past 24 hours ignoring .swp files and paths . / es * and . / en *
Search the current directory recursively for files last modified within the past 24 hours ignoring paths . / es * and . / en *
Search the current directory recursively for files whose size is between 10 and 50 MB
Search the current directory recursively for files with the exact permissions u = rwx , g = rx , o = rx
Search the current directory recursively for files with the exact permissions u = rwx , g = rx , o = rx
Search the current directory recursively for files writable for &apos; others &apos;
Search the current directory recursively for regular files last accessed 2 days ago
Search the current directory recursively for regular files last accessed 2 minutes ago
Search the current directory recursively for regular files last accessed less than 2 days ago
Search the current directory recursively for regular files last accessed less than 2 minutes ago
Search the current directory recursively for regular files last accessed more than 2 days ago
Search the current directory recursively for regular files last accessed more than 2 minutes ago
Search the current directory recursively for regular files last changed 2 days ago
Search the current directory recursively for regular files last changed less than 2 days ago
Search the current directory recursively for regular files last changed more than 2 days ago
Search the current directory recursively for regular files last modified less than 2 days ago
Search the current directory recursively for regular files last modified more than 2 days ago
Search the current directory recursively for regular files modified 2 days ago
Search the current directory recursively for regular files that have been changed less than 3 days ago and print 5 of them .
Search the current directory recursively for regular files with the extension given as variable $ extension
Search the current directory recursively for regular files with the read permission set for everybody
Search the current directory recursively for regular files , skipping hidden files in the current directory
Search the current directory recursively for text files containing at least one character
Search the current directory recursively for text files containing at least one character
Search the current directory recursively for the largest files
Search the current directory tree for * .c and * .asm files , ignoring the case
Search the current directory tree for * .c and * .sh files
Search the current directory tree for * .conf and * .txt files
Search the current directory tree for * .wav files that have &quot; export &quot; in their pathnames
Search the current directory tree for * bash * files
Search the current directory tree for * bash * files printing them on a single line
Search the current directory tree for * cache , * xml , and * html files
Search the current directory tree for .VER files
Search the current directory tree for .aux files
Search the current directory tree for .rb files ignoring .vendor directories
Search the current directory tree for .rb files ignoring the &quot; . / vendor &quot; subdirectory
Search the current directory tree for PHP files changed less than 14 days ago
Search the current directory tree for TXT files skipping hidden ones
Search the current directory tree for a regular file named &quot; file _ name &quot;
Search the current directory tree for all .java files newer than the file build.xml
Search the current directory tree for all .java files that were last modified at least 7 days ago
Search the current directory tree for all files except SVN ones
Search the current directory tree for all files except SVN ones
Search the current directory tree for all files except SVN ones
Search the current directory tree for all files matching either pattern &quot; * .rb &quot; or pattern &quot; * .py &quot;
Search the current directory tree for all files matching pattern &quot; * .rb &quot;
Search the current directory tree for all files matching regular expression &quot; . * \ .rb $ &quot;
Search the current directory tree for all image files
Search the current directory tree for all regular files matching pattern &quot; * .rb &quot;
Search the current directory tree for all regular non-hidden files except * .o
Search the current directory tree for an html file having the text &apos; Web sites &apos; in it
Search the current directory tree for directories
Search the current directory tree for directories
Search the current directory tree for directories lacking execute permissions for user , group , or others
Search the current directory tree for directories that can be opened by noone
Search the current directory tree for executable files
Search the current directory tree for executable files and searchable directories
Search the current directory tree for executable regular files
Search the current directory tree for executable regular files
Search the current directory tree for file &quot; a.txt &quot;
Search the current directory tree for file &apos; teste.tex &apos;
Search the current directory tree for filenames matching the pattern &apos; &#91; mM &#93; &#91; yY &#93; &#91; fF &#93; &#91; iI &#93; &#91; lL &#93; &#91; eE &#93; * &apos;
Search the current directory tree for files AAA and BBB
Search the current directory tree for files and directories called &quot; test &quot;
Search the current directory tree for files and directories whose names begin with &quot; pro &quot;
Search the current directory tree for files and directories whose names do not end in &quot; .exe &quot; and &quot; .dll &quot;
Search the current directory tree for files and directories whose names do not end in &quot; .exe &quot; and &quot; .dll &quot;
Search the current directory tree for files and directories whose names do not end in &quot; .exe &quot; and &quot; .dll &quot;
Search the current directory tree for files and directories whose names do not end in &quot; exe &quot; and &quot; dll &quot;
Search the current directory tree for files and directories with permissions 775
Search the current directory tree for files containing &quot; album &quot; and &quot; vacations &quot; in their names and not containing &quot; 2015 &quot;
Search the current directory tree for files containing &quot; bash &quot; in their names
Search the current directory tree for files containing &quot; needle &quot; in their names
Search the current directory tree for files containing &quot; sh &quot; in their names
Search the current directory tree for files containing &quot; string &quot; in their path names
Search the current directory tree for files executable by at least someone
Search the current directory tree for files larger than 10MB but smaller than 50MB
Search the current directory tree for files last accessed more than 10 days ago
Search the current directory tree for files matching regular expression &apos; . * myfile &#91; 0-9 &#93; &#91; 0-9 &#93; ? &apos;
Search the current directory tree for files matching regular expression &apos; ^ myfile &#91; 0-9 &#93; &#91; 0-9 &#93; ? $ &apos;
Search the current directory tree for files matching sed regular expression &apos; . * myfile &#91; 0-9 &#93; \ { 1,2 \ } &apos;
Search the current directory tree for files modified less than 5 days ago
Search the current directory tree for files named &quot; accepted _ hits.bam &quot;
Search the current directory tree for files named &quot; accepted _ hits.bam &quot;
Search the current directory tree for files named &quot; somename &quot; , case insensitive
Search the current directory tree for files named &apos; Subscription.java &apos;
Search the current directory tree for files that are less than 50kb
Search the current directory tree for files whose name is &quot; .note &quot; , case insensitive
Search the current directory tree for files whose name is &quot; .note &quot; , case insensitive
Search the current directory tree for files whose name is &quot; .note &quot; , case insensitive
Search the current directory tree for files whose name is &quot; .note &quot; , case insensitive
Search the current directory tree for files whose names are not &quot; a.txt &quot;
Search the current directory tree for files whose names begin with &quot; my &quot; and end with &quot; p &quot; followed by any character
Search the current directory tree for files whose names begin with &quot; my &quot; and end with &quot; p &quot; followed by any character , ignoring path names containing &quot; test &quot;
Search the current directory tree for files whose names begin with &apos; my &apos;
Search the current directory tree for files whose names contain &quot; TextForRename &quot;
Search the current directory tree for files whose names contain &quot; bills &quot;
Search the current directory tree for files whose names do not end in &quot; .exe &quot; and &quot; .dll &quot;
Search the current directory tree for files whose names do not end in &quot; .exe &quot; and &quot; .dll &quot;
Search the current directory tree for files whose names do not end in &quot; 1 &quot; and &quot; 2 &quot;
Search the current directory tree for files whose names end in &quot; rb &quot; or &quot; js &quot;
Search the current directory tree for files whose names end in &quot; rb &quot; or &quot; js &quot;
Search the current directory tree for files whose names end in &quot; rb &quot; or &quot; js &quot; and which contain string &quot; matchNameHere &quot;
Search the current directory tree for files whose names match regular expression &apos; . * packet . * &apos; , ignoring the case
Search the current directory tree for files whose names start with &quot; f &quot;
Search the current directory tree for files without &quot; test &quot; in their path names
Search the current directory tree for hidden files
Search the current directory tree for hidden files skipping .htaccess
Search the current directory tree for regular .mkv files
Search the current directory tree for regular files changed less than 1 day ago
Search the current directory tree for regular files changed on the 10th of September
Search the current directory tree for regular files lacking read permissions for user , group , or others
Search the current directory tree for regular files last changed more than 14 days ago
Search the current directory tree for regular files modified within the past 24 hours whose names do not end with &quot; .DS _ Store &quot;
Search the current directory tree for regular files modified within the past 24 hours whose names do not end with &quot; .DS _ Store &quot;
Search the current directory tree for regular files named &apos; doc.txt &apos; and print &quot; found &quot; for each of them
Search the current directory tree for regular files omitting directory &apos; omit-directory &apos;
Search the current directory tree for regular files omitting directory &apos; omit-directory &apos;
Search the current directory tree for regular files omitting directory &apos; omit-directory &apos;
Search the current directory tree for regular files omitting directory &apos; omit-directory &apos;
Search the current directory tree for regular files owned by user &quot; www &quot;
Search the current directory tree for regular files that can be read by noone
Search the current directory tree for regular files that contain &quot; string &quot;
Search the current directory tree for regular files that contain &quot; string &quot;
Search the current directory tree for regular files that contain &quot; string &quot;
Search the current directory tree for regular files that were accessed $ FTIME days ago
Search the current directory tree for regular files that were changed $ FTIME days ago
Search the current directory tree for regular files that were modified $ FTIME days ago
Search the current directory tree for regular files whose names begin with &quot; orapw &quot;
Search the current directory tree for regular files whose names end in &quot; .shtml &quot; or &quot; .css &quot;
Search the current directory tree for regular files whose names end in &quot; .shtml &quot; or &quot; .css &quot;
Search the current directory tree for regular files whose names end in &quot; .shtml &quot; or &quot; .css &quot;
Search the current directory tree for regular files whose names end in &quot; .shtml &quot; or &quot; .css &quot;
Search the current directory tree for regular files whose names end in &quot; log &quot;
Search the current directory tree for regular files whose names end with &quot; keep . $ { SUFFIX } &quot; , where $ SUFFIX is a shell variable
Search the current directory tree for regular files whose names match pattern $ x
Search the current directory tree for regular files whose names match regular expression &quot; . + - &#91; 0-9 &#93; + x &#91; 0-9 &#93; + \ .jpg &quot;
Search the current directory tree for symbolic links named &quot; link1 &quot;
Search the current directory tree for symbolic links to files matching pattern &apos; * / test * &apos;
Search the current directory tree for symbolic links to files matching pattern &apos; * test * &apos;
Search the current directory tree for symlinks pointing at other symlinks
Search the current directory tree for symlinks whose contents match pattern &quot; * sysdep.c &quot;
Search the current directory tree for the files with extension &quot; trc &quot; and list them if they are more than three days old
Search the current directory tree for the files with extension &quot; trc &quot; and remove them if they are more than three days old
Search the current directory tree for the files with extension &quot; trc &quot; and remove them if they are more than three days old
Search the current directory tree recursively for the regular file named &quot; myfile &quot; ignoring &quot; work &quot; and &quot; home &quot; directories
Search the current directory up to depth level 2 for files and directories
Search the current directory , except the subdirectory tree &quot; .svn &quot; , for files whose name is &quot; foo.cpp &quot;
Search the current user &apos; s home directory and below for all .png files and copy those files in the directory imagesdir .
Search the current user &apos; s home directory and its sub-directories for any file that ends in .tar-gz and was modified after filename was last modified .
Search the current user &apos; s home directory and its sub-directories for any file that was modified less than 2 days ago or was modified after filename was last modified .
Search the current user &apos; s home directory and its sub-directories for any files accessed after alldata.tar was last accessed and add them to that same tar archive .
Search the current working directory tree for files whose names start with &quot; fileA _ &quot; or &quot; fileB _ &quot;
Search the dir _ data directory and all of its sub-directories for regular files and remove the execute permission for all while adding the write permission for the user .
Search the directories given as arguments to the Bash script for files whose name is not &quot; ss &quot;
Search the directories matching pattern &quot; / path / to / some / dir / * &#91; 0-9 &#93; &quot; for level 1 subdirectories
Search the directories that match pattern &apos; / path / to / directory / folder { ? , &#91; 1-4 &#93; ? , 50 } &apos; for .txt files
Search the directory $ path recursively for regular files with the given $ extension
Search the directory given as variable $ d for empty subdirectories
Search the directory tree / tmp for regular files using zero delimiter for output
Search the directory tree given as variable $ dir for regular files
Search the directory tree given as variable $ root _ dir for regular files
Search the entire file hierarchy for all regular files owned by olduser and change their ownership to newuser .
Search the entire file hierarchy for any file that begins with zsh and exists on the ext3 file systems .
Search the entire file hierarchy for files ending in &apos; .old &apos; and delete them .
Search the entire file hierarchy for files ending in &apos; .old &apos; and delete them .
Search the entire file hierarchy for files ending with &apos; ~ &apos; and print all matches except for those with &apos; / media &apos; in their pathnames .
Search the entire file hierarchy for files larger than 100 megabytes and delete them .
Search the entire file hierarchy for files named zsh that exist on ext3 file systems and print out detailed information about the file .
Search the entire file system for .jpg files .
Search the entire file system for any file that is writable by other .
Search the entire system for SUID or SGID files
Search the file hierarchy for files larger than 100000 KB without searching any mounted removable media
Search the file system for regular files whose names are shorter than 25 characters
Search the file system for regular files whose names are shorter than 25 characters
Search the file system for regular files whose names are shorter than 25 characters
Search the file system for regular files whose names are shorter than 25 characters
Search the files from directory tree &quot; dirname &quot; for string &quot; foo &quot;
Search the files from directory tree &quot; dirname &quot; for string &quot; foo &quot;
Search the files from the current directory tree for &quot; chrome &quot;
Search the files from the current directory tree for &quot; chrome &quot;
Search the files from the current directory tree for &quot; chrome &quot;
Search the files from the current directory tree for &quot; chrome &quot;
Search the files from the current directory tree for &quot; foo &quot;
Search the files from the current directory tree for &quot; foo &quot;
Search the files from the current directory tree for &quot; foo &quot;
Search the files from the current directory tree for &quot; foo &quot;
Search the files from the current directory tree for text &quot; documentclass &quot;
Search the files in the current directory tree for lines containing string &quot; vds admin &quot;
Search the files in the current directory tree that are named &quot; string to be searched &quot; for &quot; text &quot;
Search the files of the current directory tree for string &quot; searched-string &quot;
Search the files residing in the current directory tree whose names contain &quot; bills &quot; for &quot; put &quot;
Search the files residing in the current directory tree whose names contain &quot; bills &quot; for &quot; put &quot;
Search the files residing in the current directory tree whose names contain &quot; bills &quot; for &quot; put &quot;
Search the files under and below / directory / containing / files for &quot; pattern _ to _ search &quot;
Search the files under and below / directory / containing / files for &quot; text to search &quot;
Search the first 300 commands in history containing &quot; scp &quot; and ending in &quot; important &quot;
Search the given $ directory for files with permissions stored in $ permissions
Search the home directory for OGG and MP3 files
Search the home directory for filenames starting with &quot; xx &quot; except for &quot; xxx &quot; files
Search the home directory for files accessed more than 10 days ago
Search the home directory for files whose names begin with &quot; test &quot;
Search the home directory tree for .tar.gz files newer than file &quot; filename &quot;
Search the home directory tree for all .txt files
Search the home directory tree for files last modified less than 2 days ago or newer than file &quot; filename &quot;
Search the home directory tree for files last modified more than a year ago
Search the home directory tree for files matching pattern &apos; * .txt &apos;
Search the home directory tree for files modified less than 7 days ago
Search the home directory tree for files modified less than a day ago
Search the home directory tree for files owned by sam
Search the home directory tree for regular files modified yesterday
Search the home directory tree for video files
Search the home directory tree for video files
Search the local subdirectory tree of the current working directory and the / tmp directory tree for directories named mydir
Search the path given as the $ absolute _ dir _ path variable for regular files
Search the regular files from directory tree &apos; directory _ name &apos; for &quot; word &quot; and print the names of the matched files
Search the regular files from directory tree &apos; folder _ name &apos; for &quot; your _ text &quot;
Search the regular files of the current directory tree for string &quot; foo &quot;
Search the regular files of the current directory tree for string &quot; foo &quot;
Search the regular files of the current directory tree for string &quot; stringYouWannaFind &quot; , ignoring the case
Search the regular files of the current directory tree for string &quot; stuff &quot;
Search the regular files of the current directory tree for string &quot; texthere &quot;
Search the regular files of the current directory tree for string &quot; whatever &quot;
Search the regular files of the current directory tree for string &quot; whatever &quot;
Search the regular files of the current directory tree for string &quot; whatever &quot;
Search the specified group for the given &quot; filename
Search the specified user for the given &quot; filename &quot;
Search the src / directory recursively for .c and .h files
Search the system for * .rpm files ignoring removable media
Search the system for directories named &quot; needle &quot;
Search the system for files and directories owned by group &apos; managers &apos;
Search the system for files and directories owned by user &apos; admin &apos;
Search the system for files named &quot; findcommandexamples.txt &quot; , ignoring the case
Search the system for files whose names begin with letters &apos; a &apos; , &apos; b &apos; , or &apos; c &apos;
Search the system for regular files whose names are &quot; filename &quot; ignoring the case
Search the system for the file &apos; myfile &apos; ignoring permission denied errors
Search the system for the file &quot; testfile.txt &quot;
Search the system for the file &quot; testfile.txt &quot; ignoring the case
Search the xargstest / directory recursively for files matching pattern &apos; file ? ? &apos;
Search the ~ and &apos; Music &apos; directory trees for .mp3 files
Search the ~ / Books directory recursively for files named &quot; Waldo &quot;
Search the ~ / Books directory recursively for regular files named &quot; Waldo &quot;
Search three folders named foo , bar , and baz for all &quot; * .rb &quot; files
Search through the / usr directory for all files that begin with the letters Chapter , followed by anything else .
Search through the / usr / local directory for files that end with the extension .html , and print the file locations .
Search user1 &apos; s home directory tree for * .bin files
Searches for &apos; something &apos; in a large file and prints the matching line
Searches manual pages which descriptions contain &apos; postscript &apos; , and prints name and description of only ones that contain any-cased &apos; png &apos; pattern .
Searches the manual page names and descriptions
Searches the manual page names and descriptions by &apos; disk &apos; keyword .
Searches the manual pages with descriptions in section 3 , that name begins with lowercase letter .
Searches through the / usr / local directory for files that end with the extension .html. When these files are found , their permission is changed to mode 644 ( rw-r--r-- ) .
Searches through the htdocs and cgi-bin directories for files that end with the extension .cgi. When these files are found , their permission is changed to mode 755 ( rwxr-xr-x ) .
See all pages in section 3 .
See the word count of every * .txt file in the home directory
See what files are executable by the file &apos; s owner and group
Select everything selected by * without descending into any directories
Send 4 ping packets of size 2 to &quot; www.google.com &quot; on a Solaris machine
Send 4 ping requests to host &quot; google.comz &quot; , displaying only the summary info after the last request completed .
Send 5 ping requests to address 12.34.56.78 and print only the last 2 lines of the summary output .
Send Output From Find The Find Command To A File
Send SIGHUP ( hangup ) signal to nginx master process , causing it to re-read its configuration and restart child processes if necessary .
Send SIGKILL signal to process ID 16085 , killing it instantly .
Send SIGKILL signal to processes ID 18581 , 18582 , and 18583 , killing them instantly .
Send SIGTERM signal to first process sent to background by the current shell .
Send SIGTERM signal to last process sent to background by the current shell .
Send SIGWINCH process to current shell , causing it to update the LINES and COLUMNS variables which describe the size of the screen / window in characters .
Send TERM signal to process with id listed in &apos; / var / run / DataBaseSynchronizerClient.pid &apos; file
Send a single ping request with a TTL of 1 to &quot; 192.168.1.1 &quot;
Send an audible ping to &quot; 10.100.3.104 &quot;
Send at most 3 ping requests to &quot; 8.8.8.8 &quot; with a timeout of 3 seconds on interface &quot; eth9 &quot;
Send one ping request to host whose name or IP address is specified by variable &quot; ip &quot; , using network interface eth9 .
Send one ping request to host whose name or IP address is specified by variable &quot; remote _ machine &quot; .
Send one ping request to host with local address in the 10.0.0.x range , with last number specified by variable &quot; i &quot; , waiting 1 second for a reply , and output only lines containing &quot; from &quot; to standard output .
Send one ping request to host with local address in the 192.168.1.x range , with last number specified by variable &quot; COUNTER &quot; , and output only lines containing &quot; ms &quot; to standard output .
Send one ping request to local machine .
Send ping requests to &quot; yourhostname.local &quot;
Send ping requests to hostname specified by variable &quot; c &quot; for 1 second .
Send reverse requests to get domain name for each address in &apos; my _ ips &apos; list
Send two ping requests to &quot; www.google.com &quot;
Sends current job to the background .
Sends current job to the background .
Serach in root directory all files which have more than 2 links .
Serach for all the files containing grep in man pages
Serach for all the files starting with grep in man pages
Serach in current directory downwards all files which have not been modified since last 7 days
Set 444 permission to all regular files under current directory
Set 644 permission to all regular files under / home / my / special / folder directory
Set 644 permission to all regular files under / path
Set 644 permission to all regular files under current directory
Set 644 permission to all regular files under current directory
Set 644 permission to all regular files under current directory
Set 644 permission to all regular files under current directory
Set environment variables using assignments are listed in &apos; .env &apos; file and run &apos; rails &apos; command with defined environment
Set file permission to 664 and directory permission to 775 for all files and directories under htdocs
Set permission of &quot; file &quot; to read only for the owner
Set permission of all files in &quot; img &quot; , &quot; js &quot; , and &quot; html &quot; to 644
Set permissions for all direcotries under / var / www to 755
Set permissions for all regular files under / var / www to 755
Set permissions for directories in &apos; foldername &apos; and its subdirectories to 755
Set permissions for files in &apos; foldername &apos; and its subdirectories to 644
Set permissions for files in &apos; foldername &apos; to 777
Set permissions of all directories under &quot; / opt / lampp / htdocs &quot; to 711
Set permissions of all directories under &quot; / opt / lampp / htdocs &quot; to 755
Set permissions of all directories under &quot; / path / to / base / dir &quot; to 755
Set permissions of all files under &quot; / opt / lampp / htdocs &quot; to 644
Set permissions of command &quot; node &quot; to 755
Set permissions to 2770 for all directories in the current directory tree
Set permissions to 400 for regular files under the current directory
Set permissions to 500 for directories under the current directory
Set permissions to 600 for regular files under media /
Set permissions to 600 for regular files under var /
Set permissions to 644 for all regular files under the current directory tree that have permissions 755
Set permissions to 660 for all regular files in the current directory tree
Set permissions to 700 for directories under media /
Set permissions to 700 for directories under var /
Set permissions to 700 for every subdirectory of the current directory
Set permissions to 755 for every subdirectory of the current directory
Set permissions to ug = rw , o = for files inside the . / default / files tree
Set permissions to ug = rw , o = for files under the $ d directory tree
Set permissions to ug = rwx , o = for directories inside the . / default / files tree
Set permissions to ug = rwx , o = for directories under the $ d directory tree
Set prompt to the system host name and history number
Set read , write and execute permission for all ( owner , group , other ) for the files / directories in foldername directory tree
Set shell option &apos; checkwinsize &apos; .
Set shell option &apos; dotglob &apos; .
Set shell option &apos; histverify &apos; .
Set the bash environmental variable &quot; PROMPT _ COMMAND &quot; to save the output of the last executed command to variable &quot; LAST &quot; and file &apos; / tmp / x &quot;
Set the environment variable &quot; DISPLAY &quot; to the system host name followed by &quot; : 0 skype &quot;
Set the environment variable &quot; DISPLAY &quot; to the system host name followed by &quot; : 0 skype &quot;
Set the executable bit for all users on all .sh scripts from directory trees lib , etc , debian
Set the executable bit for all users on all regular files from directories arch / x86 / usr / sbin , arch / x86 / usr / X11R6 / bin , usr / sbin /
Set the group to &quot; username &quot; for all files with GID = 1000 in the current directory tree
Set the host name to &quot; myServersHostname &quot;
Set the host name to the contents of &quot; / etc / hostname &quot;
Set the modification timestamp of file &apos; filename &apos; to specified date / time .
Set the permissions of all directories inside the current directory tree to u = rwx , g = rx , o = x
Set the permissions of all directories inside the current directory tree to ug = rwx , o =
Set the read bit for &quot; other &quot; on all * rc.conf files in the current directory tree
Set the setgid bit on all directories in the repository &quot; / git / our _ repos &quot;
Set the setup connection timeout to 3 seconds for connecting to &quot; user @ ip &quot; via ssh
Set the shell prompt to &quot; host : pwd &gt; &quot;
Set the system date to Sat May 11 06 : 00 : 00 IDT 2013
Set the timestamp of B to the same one as A
Set the value of &quot; to _ sort &quot; to &quot; $ 1 &quot; in a subshell which no longer exists after the pipeline completes
Set the variable &quot; me &quot; to the name of the running script , or shell , login shells have a hyphen appended to the beginning of the name , such as &quot; -bash &quot; .
Set the variable &quot; me &quot; to the name of the running script .
Set timestamp of B to the timestamp in stat format specified by variable &quot; old _ time &quot;
Set timestamp of all PHP files in current directory to date specified .
Set timestamp of old _ file.dat to specified timestamp .
Set trace prompt to print seconds , nnoseconds , script name , and line number
Set trace prompt to print seconds.nanoseconds
Set up SSH connection forwarding in the background with no terminal or command execution from localhost port 8888 to &quot; proxyhost &quot; port 8888 and a reverse connection from &quot; officefirewall &quot; port 22222 to &quot; localhost &quot; port 22
Set up a local SSH tunnel from port 80 to port 3000
Set up a local SSH tunnel from port 80 to port 3000
Set up a remote port forward from port 10022 on host &quot; server &quot; to port 22 on localhost
Set up local port forwards in the background with no terminal or command execution from port 4431 to host &quot; www1 &quot; port 443 and port 4432 to host &quot; www2 &quot; port 443 via the host &quot; colocatedserver &quot;
Set variable &quot; architecture &quot; to machine architecture , ie. x86 _ 64
Set variable &quot; extract _ dir &quot; to list of top-level directories and files contained in tar archive specified by variable FILE .
Set variable &quot; filename &quot; to only the name of document specified by URL , in this case &quot; pic.jpg &quot;
Set variable &quot; finalName &quot; to the second-to-last slash-separated path component of variable &quot; path &quot;
Set variable &quot; fname &quot; to the basename of path specified in variable &quot; f &quot; , that is remove everything up to the last slash if present .
Set variable &apos; file &apos; to the base name of first argument to script or function , that is the part following the last slash .
Set variable &apos; file &apos; to the base name of first argument to script or function , that is the part following the last slash .
Set variable &apos; path &apos; to name of current directory ( without the containing directories ) converted to lowercase .
Set variable &apos; path &apos; to name of current directory ( without the containing directories ) .
Set variable &apos; rav &apos; to the contents of &apos; var &apos; spelled backwards .
Set variable BZIP2 _ CMD to the full path of command &quot; bzip2 &quot;
Set variable GZIP to the full path of command &quot; gzip &quot;
Set variable OS to the name of the operating system , ie . &quot; Linux &quot;
Set variable OS to the name of the operating system , ie . &quot; Linux &quot;
Set variable PING to 1 if it &apos; s possible to ping host ADDRESS , to 0 otherwise .
Set variable PacketLoss to first digit of percentage of packet loss occurring when pinging host specified by TestIP
Set variable value to current kernel release name .
Sets &apos; extglob &apos; shell option .
Sets &apos; extglob &apos; shell variable .
Sets &apos; globstar &apos; shell option .
Sets shell option &apos; dotglob &apos; .
Sets shell option &apos; extglob &apos; .
Sets shell option &apos; globstar &apos; .
Sets shell option &apos; nounset &apos; .
Sets shell option &apos; nullglob &apos; .
Sets shell options &apos; extglob &apos; and &apos; nullglob &apos; .
Sets shell options &apos; globstar &apos; and &apos; nullglob &apos; .
Sets shell options &apos; globstar &apos; , &apos; dotglob &apos; and &apos; nullglob &apos; .
Setup a local SSH tunnel from port 1234 to &quot; remote2 &quot; port 22 via connection to &quot; remote1 &quot; as &quot; user1 &quot; on port 45678
Show a listing of files not modified in over 20 days or not accessed in over 40 days
Show a long listing of files not modified in over 20 days or not accessed in over 40 days
Show a long listing of the latest file or directory under current directory
Show all files in / etc that are owned by root have been modified within the last minute
Show all files in user &apos; s home directory that have read , write and execute permissions set for user , group and others .
Show all files that have not been accessed in the $ HOME directory for 30 days or more
Show all running processes with a name matching &quot; postgres &quot;
Show all values ( without the names ) of variables whose name or value contains &quot; VARIABLE _ NAME &quot;
Show all variables whose name or value contains &quot; PATH &quot; , sorted in reverse alphabetical order .
Show current date in &quot; % Y- % m- % d &quot; format
Show directory sizes in KB and sort to give the largest at the end
Show directory sizes in KB and sort to give the largest at the end
Show file type information for all regular files under &apos; / home &apos; directory tree
Show file type information for files in / usr / bin
Show filename and filetype description of all PHP files in all directories contained in current directory whose name or filetype description includes &quot; UTF &quot;
Show filename and filetype description of all PHP files in current directory whose name or filetype description includes &quot; UTF &quot;
Show files in / home owned by group &apos; test &apos;
Show find &apos; s version
Show human-readable file type description of file &quot; / mnt / c / BOOT.INI &quot;
Show logged in users with idle time of each one
Show long listing of current directory by deleting all digits from the output
Show ls &apos; s detailed output for all files named &quot; something &quot;
Show manual for the find command
Show manual of the find command
Show manual of the find utility
Show manual page for the find utility
Show manual page of find
Show manual page of find utility
Show process tree with command-line arguments of a process that has id 20238 .
Show system information : kernel name , hostname , kernel release and version , machine architecture , processor type , hardware platform , and operating system type .
Show the current UTC date in &apos; % Y- % m- % dT % k : % M : % S % z &apos; format
Show the date in default format for tomorrow + 2 days + 10 minutes
Show the epoch in default date / time format
Show the explanation of find &apos; s debugging options
Show the files or directories in the current directory whose names are not &quot; MyCProgram.c &quot;
Show the last 10 .conf files found by &apos; find &apos; in the / etc directory
Show the last 10 .conf files found by &apos; find &apos; in the / etc directory and 1 level below
Show the list of all files on the system whose names do not end in &quot; .c &quot;
Show the list of directories in the / mnt / raid directory tree
Show the list of files larger than 100 MB
Show the list of files modified less than a minute ago
Show the list of files modified more than 31 days ago
Show the list of files that are not owned by user wnj or are not newer than file &apos; ttt &apos;
Show the list of files that are owned by user wnj or are newer than file &apos; ttt &apos;
Show the list of user wnj &apos; s files that are newer than file &apos; ttt &apos;
Show the number of lines for each .php and .phtml file in the current directory tree
Show the number of lines for each PHP file in the current directory tree
Show the number of regular files in the current directory tree
Show the subdirectories of the current directory
Show the subdirectories of the current directory
Show the value of variable &quot; list &quot; , discarding consecutive duplicates and adding number of occurrences at the beginning of each line .
Show version information of the find utility
Show what content owned by root has been modified within the last day
Show who is logged on
Shows MAC address of network interface eth0 .
Shows only process trees rooted at processes of this user .
Shows size of compressed file in .bz2 archive .
Shows state of &apos; extglob &apos; shell option .
Shows state of &apos; globstar &apos; shell option .
Shows state of shell option &apos; extglob &apos; .
Shows status of a shell option &apos; compat31 &apos; .
Shows status of a shell option &apos; dotglob &apos; .
Shows status of a shell option &apos; nullglob &apos; .
Shows strings that NOT match regex &apos; ^ ( $ &#124; \ s * # &#124; \ s * &#91; &#91; : alnum : &#93; _ &#93; + = ) &apos;
Silently and recursively change the ownership of all files in the current directory to &quot; www-data &quot;
Silently read $ char number of symbols from file descriptor 4 , without backslash escaping , and store received input in &apos; line &apos; variable
Silently read a line from standard input into variable &quot; REPLY &quot; without backslash escapes and using the prompt $ &apos; Press enter to continue ... \ n &apos;
Silently read a line into variable &quot; passwd &quot; with prompt &quot; Enter your password : &quot;
Silently read a single character from standard input into variable &quot; REPLY &quot; without backslash escapes , with a timeout of 5 seconds , and using the prompt $ &apos; Press any key or wait 5 seconds to continue ... \ n &apos;
Silently read a single character from standard input into variable &quot; key &quot; without backslash escapes and using the prompt $ &apos; Press any key to continue ... \ n &apos;
Silently read a single character into variable &quot; REPLY &quot;
Silently read exactly 1 character ignoring any delimiters into variable &quot; SELECT &quot;
Silently read standard input until the escape key is pressed ignoring backslash escapes and using the prompt $ &apos; Press escape to continue ... \ n &apos;
Simulate a full login
Sort &quot; $ file &quot; and output the result to &quot; $ file &quot;
Sort &quot; &quot; , delimited lines in &quot; file &quot; by the first field preserving only unique lines
Sort &quot; : &quot; delimited lines in &quot; test.txt &quot; by the first and third field preserving only unique lines
Sort &quot; file &quot; using a buffer with a size 50 % of main memory
Sort &quot; file1.txt &quot; and output the result to &quot; file1.txt &quot;
Sort &quot; some _ data &quot; by the first and second &quot; ; &quot; delimited entries and stabilizing the sort
Sort &quot; some _ data &quot; by the first and second &quot; ; &quot; delimited entries , outputing unique lines and stabilizing the sort
Sort a file &apos; file &apos; preserving only unique lines and change the file in-place
Sort all directories under current directory placing the file with least modification time at first
Sort all directory names matching folder _ * and go to the last one .
Sort all files / directories under current directory according to modification time and print only the recent 7 of them
Sort and compare files &quot; $ def.out &quot; and &quot; $ def-new.out &quot;
Sort and display the file name and creation month of top 11 files in the entire file system ( Sort in the order of month )
Sort and print each unique line in &quot; myfile.txt &quot;
Sort and remove duplicate lines in the output of &quot; finger &quot;
Sort content of files &apos; file1 &apos; and &apos; file2 &apos; by second of dot-separated fields .
Sort file &quot; a.csv &quot; by the first comma separated value of each line and print only unique entries
Sort file &quot; file &quot; by line
Sort file &quot; foo.txt &quot; by line to standard output
Sort file pointed by variable $ filename , removing duplicate entries but ignoring the last N characters of each line .
Sort file.txt ignoring the last 10 characters of each line .
Sort file1 and file2 then display differences between them .
Sort lines in &quot; FILE &quot; to standard output preserving only unique lines
Sort lines in &quot; set1 &quot; and &quot; set2 &quot; to standard output preserving only unique lines
Sort numerically and compare files &quot; ruby.test &quot; and &quot; sort.test &quot;
Sort standard input in alphabetical order
Sort strings of &apos; test.txt &apos; file by second from the end field
Sort tab separated file &quot; file &quot; using a version sort for field 6 and a numeric sort for field 7
Sort the contents of file &quot; ips.txt &quot; , eliminate duplicate entries , and prefix each entry with number of occurrences .
Sort the lines of the file &apos; inputfile &apos; , keep only the uniq lines and change it in-place
Sort the lines of the file &apos; temp.txt &apos; and change it in-place
Sort the lines of the file &apos; temp.txt &apos; and change it in-place
Sorts content of the $ tmp file and filters out all strings with &apos; : 0 &apos; .
Split &quot; $ 1 &quot; into files of at most &quot; $ 2 &quot; or default 10000 using a numeric suffix of length 6
Split &quot; $ 1 &quot; into files of at most &quot; $ 2 &quot; or default 10000 using a numeric suffix of length 6 and suffix &quot; $ { tdir } / x &quot;
Split &quot; $ FILENAME &quot; into files with at most 20 lines each with a prefix &quot; xyz &quot;
Split &quot; $ INFILE &quot; into files of at most &quot; $ SPLITLIMT &quot; with a numeric suffix and a prefix &quot; x _ &quot;
Split &quot; $ ORIGINAL _ FILE &quot; into files of at most &quot; $ MAX _ LINES _ PER _ CHUNK &quot; lines each with a prefix &quot; $ CHUNK _ FILE _ PREFIX &quot;
Split &quot; $ SOURCE _ FILE &quot; into files of at most 100 lines each
Split &quot; $ file &quot; into files with at most 1000 lines each and use a prefix length of 5
Split &quot; $ { fspec } &quot; into 6 files with about equal number of lines each and use prefix &quot; xyzzy &quot; .
Split &quot; / etc / gconf / schemas / gnome-terminal.schemas &quot; into 1000000 files of about equal size
Split &quot; / path / to / large / file &quot; into files with at most 50000 lines and use prefix &quot; / path / to / output / file / prefix &quot;
Split &quot; / tmp / files &quot; into files of at most 1000 lines each
Split &quot; / usr / bin / cat &quot; into 10000 files of about equal size
Split &quot; / usr / bin / firefox &quot; into 1000 files of about equal size
Split &quot; / usr / bin / gcc &quot; into 100000 files of about equal size
Split &quot; ADDRESSS _ FILE &quot; into files containing at most 20 lines and prefix &quot; temp _ file _ &quot;
Split &quot; INPUT _ FILE _ NAME &quot; into files of at most 500 MiB each with a numeric suffix of length 4 and prefix &quot; input.part &quot; .
Split &quot; abc.txt &quot; into files with at most 1500000000 bytes each and use prefix &quot; abc &quot;
Split &quot; bigfile &quot; into files of at most 1000 lines each with prefix &quot; / lots / of / little / files / here &quot;
Split &quot; complete.out &quot; into files with at most &quot; $ lines _ per _ file &quot; lines each
Split &quot; data.tsv &quot; into files of at most 100 MiB preserving lines and use a prefix of &quot; data.tsv &quot; . and numeric suffixes
Split &quot; data.tsv &quot; into files of at most 5000000 lines each with prefix &quot; _ tmp &quot;
Split &quot; database.sql &quot; into files of at most 100000 lines each with prefix &quot; database- &quot;
Split &quot; date.csv &quot; into files with at most 100 lines each
Split &quot; domains.xml &quot; into files of at most 50000 lines each with a numeric suffix of length 4 and prefix of &quot; domains _ &quot;
Split &quot; file &quot; into 10 files of about equal size without splitting lines
Split &quot; file.tar.gz &quot; into files of size 1024 MB
Split &quot; file.tar.gz &quot; into files of size 1024 MB with a prefix of &quot; file.tar.gz.part- &quot;
Split &quot; file.txt &quot; excluding the first line into files of at most 4 lines each and with a prefix &quot; split _ &quot;
Split &quot; file.txt &quot; excluding the first line into files with at most 20 lines each and a prefix &quot; split _ &quot;
Split &quot; file.txt &quot; into files of at most 1 MiB in size with a numeric suffix and prefix &quot; file &quot;
Split &quot; file.txt &quot; into files of at most 1 MiB in size with a numeric suffix , prefix &quot; file &quot; , and additional suffix &quot; .txt &quot;
Split &quot; file.txt &quot; into files of at most 20 lines each with a prefix &quot; new &quot;
Split &quot; filename &quot; into files of at most 200000 lines each
Split &quot; foo.txt &quot; into files with 1 line each and use a suffix length of 5
Split &quot; hugefile.txt &quot; into files with 100000 lines each starting with &quot; part &quot; . and using numeric suffixes
Split &quot; infile &quot; into 2 files of about equal size
Split &quot; input.txt &quot; into files of at most 10 bytes each with prefix &quot; / tmp / split-file &quot;
Split &quot; input.txt &quot; into files of at most 10 bytes each with prefix &quot; xxx / split-file &quot;
Split &quot; input.txt &quot; into files with 1 line each and use a prefix &quot; output &quot; . and a suffix length of 5
Split &quot; input _ file &quot; into files of at most 100 lines each with prefix &quot; output _ file &quot;
Split &quot; list.txt &quot; into files with at most 600 lines each
Split &quot; mybigfile.txt &quot; into files of at most 200000 lines each
Split &quot; randn20M.csv &quot; into files of at most 5000000 lines each with prefix &quot; _ tmp &quot;
Split &quot; system.log &quot; into files of at most 10 MiB in size with a numeric suffix and prefix &quot; system _ split.log &quot;
Split &quot; t.txt &quot; into files with at most 30000000 lines each and use a prefix &quot; t &quot; and numeric suffixes of length 2
Split &quot; your _ file &quot; into files with at most 9 lines each
Split a file &quot; file.tar.gz &quot; into pieces named as &quot; file.tar.gz.part-NNN &quot; with size 1024 MB where NNN is a numeric suffix
Split a file &quot; file.tar.gz &quot; into pieces with size 1024 MB
Split a file ADDRESSS _ FILE into pieces per 20 lines named with prefix &quot; temp _ file _ and numeric suffixes
Split all files in the directory tree &quot; / dev / shm / split / &quot; into files of at most 1000 lines each and use the filename as the prefix
Split standard input into files of at most 1000 lines each
Split standard input into files of at most 3400000 lines each
Split standard input into files with at most 75 lines each
Split the contents of &quot; file1 file2 ... file40000 &quot; into 1445 files in a round robin fashion with prefix &quot; outputprefix &quot; and numeric suffixes
Split the contents of all &quot; .txt &quot; excluding the first 1000 lines into files of at most 1000 lines each
Split the output of &quot; ls &quot; into files of at most 500 lines each with prefix &quot; outputXYZ &quot; .
Split the output of &quot; tar &#91; your params &#93; &quot; into files of at most 500 MiB in size and use prefix &quot; output _ prefix &quot;
Split the sorted and unique lines in files &quot; emails _ * .txt &quot; into files with at most 200 lines each with numeric suffixes of length 4
Start &apos; top &apos; to monitor all processes with the default settings .
Start program &apos; scriptname &apos; with an empty environment .
Store N symbols of input into variable &apos; buffer &apos;
Store content of uncompressed file &quot; $ file.fastq &quot; in variable &quot; reads &quot;
Store info about all mounted file systems , printing all sizes in powers of 1000
Stores system load average number in the &apos; proc _ load _ average &apos; variable .
Stores system load average number in the &apos; proc _ load _ average &apos; variable .
Strip all &apos; \ &apos; and newlines from $ output and save the result to variable &apos; output &apos;
Strips last section from the path $ pathname , and prints basename of the rest part .
Strips two last sections from the path $ pathname , and prints basename of the rest part .
Suffix all files and folders in the current directory with &quot; _ SUF &quot;
Synchronize &quot; / home / user1 / &quot; to &quot; wobgalaxy02 : / home / user1 / &quot; including hidden files
Synchronize &quot; / path / to / dir _ a &quot; with files in &quot; / path / to / dir _ b / &quot; if the files are newer
Synchronize &quot; / path / to / dir _ b &quot; with files in &quot; / path / to / dir _ a / &quot; if the files are newer
Synchronize &quot; xxx-files &quot; to &quot; different-stuff / xxx-files &quot; recursively preserving metadata with a bandwidth limit of 2000 KiB / s
Take a file path from standard input and remove it .
Take a file path from standard input and remove it .
Take first text field from file &apos; file.txt &apos; as a domain name and get short A record for this one .
Take the last slash-separated section of variable &quot; FILE &quot; and copy it to variable &quot; NAME &quot; .
Take the section of variable &quot; FILE &quot; between the last slash and the following dot , if any , and store that section in variable &quot; NAME &quot; .
Takes folder path from string &apos; / path / to / copy / file / to / is / very / deep / there &apos; and created it with all parents .
Takes path list from &apos; .exportfiles.text &apos; file , cuts off first two path segments and last one .
Test if &quot; file.tar.gz &quot; is corrupt
Test if a file named &apos; file &apos; in the current directory is more than 1 hour old
Test if a file named &apos; file &apos; in the current directory is more than 1 hour old
The command runs all the directories ( -type d ) found in the $ LOGDIR directory wherein a file &apos; s data has been modified within the last 24 hours ( -mtime + 0 ) and compresses them ( compress -r { } ) to save disk space .
The cpio command is a copy command designed to copy files into and out of a cpio or tar archive , automatically preserving permissions , times , and ownership of files and subdirectories .
The file &quot; files _ to _ find.txt &quot; contains a list of filenames , create each file or update its timestamp if it exists .
This command find displays the files which are modified in the last 15 minutes . And it lists only the unhidden files. i.e hidden files that starts with a . ( period ) are not displayed in the find output .
This find command ignore the case when searching for file name , to ignore the case in this example all .py &amp; .PY file will search
This will remove all files ( type f ) modified longer than 14 days ago under / root / Maildir / recursively from there and deeper ( mindepth 1
Time stamp every ping request to 8.8.8.8 in Unix epoch format
To descend at most one levels of directories below the command line arguments pass the -maxdepth 1 option . This will avoid deleting nested directories :
To match only hidden dot directories
Traverse the filesystem just once , listing setuid files and directories into / root / suid.txt and large files into / root / big.txt .
Traverse the filesystem just once , listing setuid files and directories into / root / suid.txt and large files into / root / big.txt .
Treat each line of &quot; list-of-entries.txt &quot; as a value to be put in one cell of the table that &quot; column &quot; outputs
Truncate all non-empty regular files under the current directory
Try to determine the type of contents in &quot; myfile &quot; located in user &apos; s home directory .
Turns on network interface eth0 .
Type unique list of all directories contiaining each file named &apos; myfile &apos; under the / home directory
Uncompress &quot; archive.tar.gz &quot; and extract the archive to &quot; / destination &quot;
Uncompress and unarchive &quot; data.tar.gz &quot;
Ungzip and untar all files matching &quot; www-backup.tar. * &quot;
Unpack all * .gz archives in the current directory tree
Unset the executable bit of all regular files from directory trees arch , etc , lib , module , usr , xpic
Unsets &apos; history &apos; shell option .
Unsets shell option &apos; extglob &apos; .
Unzip &quot; bigfile.txt.gz &quot; to standard output , search for patterns in &quot; patterns.txt &quot; , and list the unique matches
Unzip &quot; daily _ backup.sql.gz &quot; and search for lines matching &quot; &apos; x &apos; &#124; / x / &quot;
Unzip &quot; file.gz &quot; to standard output and execute in bash with arguments &quot; -n wordpress &quot;
Unzip &quot; file.gz &quot; to stdout
Unzip &quot; file.gz &quot; , list the unique first comma separated field prefixed by the number of occurrences , sort from least frequent to most frequent
Unzip &quot; file.gz &quot; , list the unique lines matching regex pattern &apos; &quot; searchstring &quot; : &quot; &#91; ^ &quot; &#93; * &quot; &apos; prefixed by the number of occurrences , sort from least frequent to most frequent
Unzip all &quot; .gz &quot; files in the current directory tree excluding files containing &quot; dvportgroups &quot; , &quot; nsanity &quot; , &quot; vcsupport &quot; , &quot; viclient &quot; , and &quot; vsantraces &quot;
Unzip all &quot; .gz &quot; files in the current directory tree to their respective directories
Unzip all files matching &quot; / homes / ndeklein / mzml / * .gz &quot;
Unzip all files matching &quot; test1 / * / * .gz &quot;
Unzip all files that match &quot; * .gz &quot; in the current directory and subdirectories to stdout and search for &quot; test &quot;
Unzip and expand tar archive &quot; compressFileName &quot;
Unzip and merge all &quot; small- * .gz &quot; files into files of 2000000 lines
Unzip and untar &quot; 4.56 _ release.tar.gz &quot; to standard output
Unzip and untar &quot; file.tar.gz &quot;
Unzip and untar &quot; myarchive.tar.gz &quot; and check for corruption
Unzip and untar &quot; openssl-fips-2.0.1.tar.gz &quot;
Unzip and untar &quot; tarball.tar.gz &quot;
Unzip every &quot; .gz &quot; file in the current directory
Unzip every &quot; .gz &quot; file in the current directory tree
Unzip every &quot; .gz &quot; file in the current directory tree
Unzip file &quot; $ empty _ variable &quot;
Update the archive &apos; 2009.tar &apos; with the files from the data / directory tree that match pattern &apos; filepattern- * 2009 * &apos;
Update the archive &apos; 2009.tar &apos; with the files from the data / directory tree that match pattern &apos; filepattern- * 2009 * &apos;
Update the archived copy of the home directory , &quot; alldata.tar &quot;
Update the history file in the current session
Update the timestamp of &apos; / tmp / $ $ &apos; to the current month and day
Update the timestamp of &apos; filename &apos; , or create an empty file if it doesn &apos; t exist .
Update timestamps of all files ( not directories ) under current directory .
Update timestamps of all files ( not directories ) under current directory . Also works on older Unix systems with obsolete &apos; find &apos; command .
Update timestamps of all files and directories under current directory .
Update timestamps of all files and directories under directory / path / to / dir .
Update timestamps of all files in entire filesystem which are not newer than / tmp / timestamp
Update timestamps of all regular files ( ie. excluding directories , symlinks , sockets , etc . ) under / your / dir
Use &quot; $ BYTES &quot; amount of RAM for &quot; $ SECONDS &quot; seconds with no output
Use &quot; $ BYTES &quot; amount of RAM with no output
Use &quot; / var / log / wtmp &quot; and print IPs and search for &quot; ^ msw . * 127.0.0.1 &quot;
Use &quot; vagrant-ssh &quot; as the config file and ssh into &quot; default &quot; host
Use multiple -exec command in find . Find all .txt files &amp; grep banna in .txt files .
Use the octal form to find and print detailed information about all regular files in your home directory and below that have only the group permission set .
Variable PID contains a process ID , check if this process exists - resulting exit status from this command will be zero if it does and current user has permission to send it signals .
Variable PID contains a process ID , send SIGTERM to this process if it exists .
Verbosely change ownership of &quot; $ file &quot; to &quot; root &quot;
Verbosely compresses all files on fifth and sixth depth level keeping original files in place .
Verbosely compresses all files on fourth and fifth depth level keeping original files in place .
Verbosely compresses all files on second and third depth level keeping original files in place .
Verbosely compresses all files on seventh and eighth depth level keeping original files in place .
Verbosely compresses all files on sixth and seventh depth level keeping original files in place .
Verbosely compresses all files on third and fourth depth level keeping original files in place .
Verbosely compresses all files on third and fourth depth level keeping original files in place .
View line 500 to line 500 + 501 in gzipped file &quot; bigfile.z &quot;
View lines 116 through 120 of history
View manual page of find utility
View manual page of the find command
View the man page of find
Views text content of compressed FileB file in TarFile archive .
Wrap each line in &quot; file &quot; to fit in 80 characters and count the number of lines
Wrap each line in &quot; file.txt &quot; to fit in 80 characters
Wrap each line in &quot; file.txt &quot; to fit in 80 characters
Wrap each line in &quot; longline &quot; to a maximum of 30 characters
Wrap each line in &quot; longline &quot; to a maximum of 30 characters breaking at spaces
Wrap standard input to fit in 10 characters per line
Write &quot; 127.0.0.1 ad.doubleclick.net &quot; to the console and append to &quot; / etc / hosts &quot; as root
Write &quot; 2-1 &quot; to standard output and to &quot; / sys / bus / usb / drivers / usb / unbind &quot;
Write &quot; 2-1.1.1 &quot; to standard output and to file &quot; / sys / bus / usb / drivers / usb / unbind &quot;
Write &quot; Australia / Adelaide &quot; to standard output and to &quot; / etc / timezone &quot;
Write &quot; Hello , world &quot; to standard output and to &quot; / tmp / outfile &quot;
Write &quot; Some console and log file message &quot; to standard output and &quot; / dev / fd / 3 &quot;
Write &quot; &#91; some repository &#93; &quot; to standard output and append to &quot; / etc / apt / sources.list &quot; as root
Write &quot; \ n / usr / local / boost _ 1 _ 54 _ 0 / stage / lib &quot; to standard output and append to &quot; / etc / ld.so.conf &quot;
Write &quot; deb blah ... blah &quot; to standard output and append to &quot; / etc / apt / sources.list &quot; as root
Write &quot; deb http : / / downloads-distro.mongodb.org / repo / ubuntu-upstart dist 10gen &quot; to standard output and append to &quot; / etc / apt / sources.list.d / 10gen.list &quot; as root
Write &quot; error &quot; to standard output
Write &quot; fifo forever &quot; infinitely using the named pipe &quot; fifo &quot; by writing its contents to standard output and to &quot; fifo &quot;
Write &quot; foo &quot; to the real path of the current command &apos; s standard input
Write &quot; foo &quot; to the real path of the current command &apos; s standard output
Write &quot; hello world &quot; to the console and print number of bytes , symbols and strings in provided input .
Write &quot; suspend &quot; to standard output and to file &quot; / sys / bus / usb / devices / usb3 / power / level &quot;
Write &apos; &quot; myname = &quot; Test &quot; &apos; to the console and append to &quot; $ CONFIG &quot; as root
Write a random list of numbers to / tmp / lst and stdout .
Write contents of &quot; / sys / kernel / debug / tracing / trace _ pipe &quot; to standard output and to &quot; tracelog.txt &quot; executing as a root user
Write current directory listing to standard output and to &quot; files.txt &quot;
Write every two lines in &quot; infile &quot; on a single line separated by a comma
Write every two lines in &quot; infile &quot; on a single line separated by a space
Write out the entire directory hierarchy from the current directory
Write out the entire directory hierarchy from the current directory
Write output and error of &quot; bash myscript.sh &quot; to standard output and to &quot; output.log &quot;
Write output of &quot; ls -a &quot; to standard output and to &quot; output.file &quot;
Write output of &quot; ls -hal / root / &quot; to standard output and to &quot; / root / test.out &quot;
Write output of &quot; ls -lR / &quot; to standard output and append to &quot; output.file &quot;
Write output of &quot; ls -lR / &quot; to standard output and to &quot; output.file &quot;
Write standard input to standard output and file &quot; / tmp / arjhaiX4 &quot;
Write standard input to standard output and to &quot; foobar.txt &quot;
Write the common third space separated fields in &quot; file1.sorted &quot; and &quot; file2.sorted &quot; to &quot; common _ values.field &quot;
Write the current date and time followed by &quot; 0 &quot; to the console and append to &quot; log.csv &quot;
Write the current date and time followed by &quot; 1 &quot; to the console and append to &quot; log.csv &quot;
Write the lines appended to &quot; xxxx &quot; as it appears to the console and append to &quot; yyyy &quot; in the background
add read permission to others for the files in the current folder having the name &quot; rc.conf &quot; in their name .
add read , write permissions to all the files in the current folder which have the permission 600
all .jpg or .png images modified in the past week
all the files that end with .mp3 and end with .jpg
archive all files in a current directory modified in the last 30 days
archive all the normal / regular files in the current directory which have been modified in the last 24 hours .
as root , find from / all files called &quot; file.txt &quot;
ask user confirmation and delete all the files in the directory / mydir which have not been accessed in the last 100 * 24 hours
bind &quot; \ C-i &quot; to &quot; complete &quot; function
bind key &quot; \ x61 &quot; to insert itself
bind word &quot; foobar &quot; to key code &quot; \ e &#91; 24 ~ &quot;
bind word &quot; pwd \ n &quot; to key code &quot; \ e &#91; 24 ~ &quot;
calculate the disk usage for all the files which have been modified in the last 24 hours in ~ / tmp folder and display the file sizes
change cgi files to mode 755
change cgi files to mode 755 under htdocs or cgi-bin directories
change group of the file / tmp / php _ session to group daemon
change group of the file / var / lib / php / session to group lighttpd
change group of the file myfile to group friends
change html files to mode 644
change owner and group of all files and directory into current directory to user and group apache
change owner and group of the all files with group owner vboxusers into home directory to user and group kent
change owner and group of the current directory and all files into it to user and group andrew
change owner and group of the file &quot; / path / to / yourapp &quot; to root
change owner and group of the file &quot; file &quot; to user &quot; user &quot; and group &quot; group &quot;
change owner and group of the file dir1 to user root and group specialusers
change owner and group of the file it to user and group root
change owner and group of the file script.sh to user root
change owner and group of the file uid _ demo to user and group root
change owner of all files into current directory except files named as &apos; . / var / foo * &apos; to user www-data
change owner of the file &quot; file &quot; to user user _ name
change owner of the file / home / bob to user root
change owner of the file destination _ dir to user &quot; user :
change owner of the file file.sh to user root
change owner of the file my _ test _ expect.exp to user el
change owner of the file process to user root
change owner of the files into directory &quot; / mydir &quot; with &quot; .txt &quot; extension to user root
change owner of the files into directory &quot; / mydir &quot; with &quot; .txt &quot; extension to user root
change owner of the files into directory dir _ to _ start except directory dir _ to _ exclude to user owner
change permission of all the files in the entire file system which have permissions 777 .
change permission of all the files in the entire file system which have the permissions 777 .
change permissions for directories in the entire file system
change permissions of all the script files in a directory
change permissions of files older than 30 days
change the extension of all the &quot; .abc &quot; files in the folder &quot; / the / path &quot; to &quot; .edefg &quot; and do not change in the sub directories
change the extension of all the &quot; .abc &quot; files in the folder &quot; / the / path &quot; to &quot; .edefg &quot; and do not change in the sub directories. execdir ensures that the command after it is executed only in the folder where the file is found
change the extension of all the &quot; .lst &quot; files in the current folder to &quot; a.lst &quot;
change the extension of all the files in the current folder to html excluding those html files and those which are present in another disk partition
change the group of all directories in the current folder
change the group of all regular / normal files in the current directory
change the group of all the files in the file system which belong to the group with the gid 999
change the group of all the files in the folder / u / netinst / to staff
change the group of all the files which belong to the user edwarda to pubs
change the group to &quot; new _ group &quot; and permissions to 770 for all the files in the current folder
change the group to &quot; new _ group &quot; and permissions to 770 for all the files in the current folder
change the owner and group of all the directories in the current folder and / home / admin / data / to admin &amp; admin
change the owner and group of all the files in the folder / usr / lpp / FINANCIALS
change the owner and group of all the normal / regular files in the current folder and / home / admin / data / to admin &amp; admin
change the owner of all the files in folder / u / netinst to netinst
change the owner of all the files in the current directory
change the owner of all the files in the file system which belong to the user with the uid 999
change the owner of all the regular / normal files which belong to the root user to &quot; tom &quot; in the current folder
change the owner of the files which belong to the group 1000 to username and modify only the symbolic link not the originally pointed file
change the ownership of all directories in the current folder
change the ownership of all regular / normal files in the current directory
change the ownership of all regular / normal files in the current directory
change the ownership of all regular / normal files in the current directory after users confirmation
change the ownership of all regular / normal files in the current directory ( print0 is used to handle all the files which have spaces or new lines in their names )
change the ownership of all the files in the file system from edwarda to earnestc
change the ownership of all the files in the file system from edwarda to earnestc
change the permission of all directories in current folder to 755 .
change the permission of all php files in current folder
change the permission of all php files in current folder . Plus symbol at the end is used to give multiple files as input to the chmod command
change the permission of all the directories to 755 in the current folder
change the permission of all the files in the current directory to 664 and change the permission of all the directories in the current folder to 775 .
change the permission of all the normal / regular files from 777 to 755 in the folder &quot; / home / user / demo &quot;
change the permission of all the normal / regular files to 644 in the current folder
change the permission of all the php files in the folder / var / www / to 700
change the permission of all the regular files in the folder / home to 700
change the permission of all the regular / normal files in the current folder from 777 to 755
change the permission of all the rpm files in the entire file system to 755
change the permissions of al the directories in the current folder
change the permissions of all regular / normal files in the current directory
change the permissions of all regular / normal files in the current directory
change the permissions of all regular / normal files in the current directory , print0 is used for handling files with newlines in their file name
change the permissions of all regular / normal files in the file system
change the permissions of all the directories to 775 in the current folder
change the permissions of all the directories in the current folder
change the permissions of all the directories in the current folder
change the permissions of all the directories in the current folder
change the permissions of all the directories in the current folder , print0 is used for handling files with newlines in their file name
change the permissions of all the directories in the folder &quot; / path / to / someDirectory &quot; to 755
change the permissions of all the directories in the folder root _ dir to 555
change the permissions of all the directories to 755 in the folder &quot; / home / nobody / public _ html &quot;
change the permissions of all the files ending with &quot; fits &quot; in the folder &quot; / store / 01 &quot;
change the permissions of all the files ending with &quot; fits &quot; in the folder &quot; / store / 01 &quot; and save the output file names to a log file
change the permissions of all the normal files in a directory
change the permissions of all the regular files in the current folder
change the permissions of all the regular files in the folder root _ dir to 444
change the permissions of all the regular / normal files in the current folder
change the permissions of all the regular / normal files in the current folder
change the permissions of all the regular / normal files in the folder &quot; / path / to / someDirectory &quot; to 644
change the permissions of all the regular / normal files to 644 in the folder / home / nobody / public _ html
change the permissions of all the regular / normal files to 664 in the current folder
change the permissions of mp3 files in the folder / var / ftp / mp3 to 644
change the permissions of the directories from 777 to 755 in the folder &quot; / var / www / html &quot;
change the word &quot; GHBAG &quot; to &quot; stream-agg &quot; in all the file names in current folder which have the word &quot; -GHBAG- &quot; in their name
change user and group of the file &quot; / var / run / docker.sock &quot; to user root and group dockerroot
change user and group of the file / usr / bin / aws to user amzadm and group root
change user and group of the file bin to user and group root : wheel
change user of the direct public _ html to user owner and group nobody
check find version
check if myfile has 0644 permissions
check if there any files from the .git folder after excluding it using the prune command
check readline bindings for &quot; \ x61 &quot;
check the type of files in the folder / usr / bin
compare each C header file in or below the current directory with the file / tmp / master
compress all the non-compressed files in the current directory .
compresses all the files in the current folder with default depth
concatenates file1.txt , file2.txt , and file3.txt with the filenames printed at the beginning of file contents
convert epoch second timestamp to date
cope * .mp3 files to / tmp / MusicFiles
copy a files from one folder to all the folder in the / raid which have an extension local _ sd _ customize .
copy all files which do not have execute permission to another folder
copy all the files with the extension &quot; .type &quot; from one folder to a target directory
copy all the log files in the current folder which have not been accessed in the last 30 * 24 hours to the folder old
copy all the mp3 files from current folder to another folder
copy all the regular files in the current directory to the temporary diectory .
copy all the regular / normal files from temp folder which have been modified in the last 30 * 24 hours to / tmp / backup
copy the entire contents of the current directory to another directory , while preserving the permissions , times , and ownership of every file and sub-directory
copy the file header.shtml to each directory under dir1 , dir2 , dir3 , or dir4
copy the file header.shtml to those dirs
count all the html files having a specifc word in a folder .
count all the regular files that are present in a directory
count amount of jobs running
count lines of C or C + + or Obj-C code under the current directory
count lines of C or C + + or Obj-C or Java code under the current directory
count the lines of java code for all the java files in the current directory
create a backup of all the files in the current folder excluding those that are present in the .snapshot sub directory and excluding the swap files ( files ending with ~ )
create a backup of all the files in the current folder to the floppy and save the file list in the file / tmp / BACKUP.LOG
create a backup of all the files in the home folder on a partition and save the log to a file
create a backup of all the files which have been modified in the last 48 hours
create a compressed archive &quot; compressFileName.tar.gz &quot; with verbose output
create a compressed archive &quot; filename.tar.gz &quot; with verbose output
create a compressed archive in my _ dir directory matching &apos; . &#91; ^ . &#93; * .. ? * &apos; glob pattern
create a compressed archive with files newer than 1st of January 2014 , 18 : 00 : 00 .
create a cpio archive of the entire contents the current directory while preserving the permissions , times , and ownership of every file and sub-directory
create a gzip of all the files in the current folder excluding the already gzipped files
create a gzip of all the files in the current folder excluding the already gzipped files .
create a hard link as directory named &quot; new _ hard _ link &quot; to the directory &quot; existing _ dir &quot; as root
create a link to all the html or htm files in the current folder which have been changed in the last 30 * 24 hours
create a list of all files in all subdirectories
create a md5sum for all the instances of the file MyCProgram.c in current folder
create a soft link of the files in the folder / media / movies which have been modified in the last 30 days
create a symbolic link in current directory named &quot; environments &quot; to file &quot; .. / config / environments &quot;
create a symbolic link in current directory named &quot; my _ db &quot; to file &quot; / media / public / xampp / mysql / data / my _ db &quot;
create a symbolic link named &quot; $ ORACLE _ HOME / include &quot; to file &quot; / usr / include / oracle / 11.2 / client &quot;
create a symbolic link named &quot; -pdf-kundendienst &quot; to &quot; local--pdf-kundendienst &quot; file
create a symbolic link named &quot; / usr / bin / my-editor &quot; to file &quot; / usr / share / my-ditor / my-editor-executable &quot;
create a symbolic link named &quot; / usr / lib / jvm / default-java &quot; to file &quot; / usr / lib / jvm / java-7-oracle &quot;
create a symbolic link named &quot; test &quot; to file &quot; .bashrc &quot;
create a symbolic link named &quot; www &quot; to file &quot; www1 &quot;
create a symbolic link with absolute path &quot; / cygdrive / c / Program Files &quot; to file &quot; / cygdrive / c / ProgramFiles &quot;
create a symbolic link with absolute path &quot; / cygdrive / c / Users / Mic / mypics &quot; to file &quot; / cygdrive / c / Users / Mic / Desktop / PENDING - Pics / &quot;
create a tar ball of all pdf files in current folder
create a tar ball of all the jpg and png images in the current folder
create a tar file of all the songs on my system that have been modified in the last 180 days ( which is essentially six months )
create a tar of all png &amp; jpg images in the current folder
create a tar.gz compress file with all the jpg files in the entire file system
create a zip of all the files in the current folder which are bigger than 100Kb and do not go more than 2 levels during search
create a zip of log files in the current directory which have not been accessed in the last 3 days ( -p is for parallel processing for a 4 cpu machine )
create a zip of log files in the current directory which have not been accessed in the last 3 days ( -p is for parallel processing for a 4 cpu machine , -n is for maximum work units )
create an archive excluding files matching patterns listed in / path / to / exclude.txt
create an archive using 7zhelper.sh as a compress program
create an archive using pbzip2 as a compress program
create an archive using pbzip2 as a compress program
create and list contents of the archive
create archive &quot; backup.tar.gz &quot; from / path / to / catalog
create backup of all the text files present in the current folder
create directories a b c d e
create directories bravo _ dir and alpha _ dir
create directories foo and bar
create directories mnt and point
create directory &quot; .hiddendir &quot;
create directory / cpuset
create directory / data / db
create directory / etc / cron.15sec
create directory / etc / cron.5minute
create directory / etc / cron.minute
create directory / path / to / destination
create directory / tmp / foo
create directory / tmp / new
create directory / var / svn as user root
create directory TestProject
create directory aaa
create directory aaa / bbb
create directory backup
create directory certs
create directory destdir
create directory dir
create directory dir1
create directory dirname with permissions 777
create directory es if it is not exist and create direcoty LC _ MESSAGES
create directory foo
create directory foo
create directory log into home directory
create directory new _ dir
create directory practice into home directory
create directory public _ html into home directory
create directory saxon _ docs
create directory subdirectory
create directory tata
create directory temp into home directory
create directory testExpress
create symbolic links in current directory to all files located in directory &quot; / original &quot; and have filename extension &quot; .processname &quot;
create symbolic links in current directory to all files located in directory &quot; / original &quot; and have filename extension &quot; .processname &quot;
create symbolic links in directory &quot; / usr / local / symlinks &quot; to all files located in directiry &quot; incoming &quot; and that have been modified earlier then 5 days and owned by user &quot; nr &quot;
create symbolic links in directory &quot; / your / dest / dir / &quot; to all files located in &quot; / your / source / dir / &quot; and have filename extension &quot; txt.mrg &quot;
create the compressed tar archive images.tar.gz containing all jpg files found under /
delete a hard link and create a symbolic link to file named &quot; $ link &quot;
delete all empty files in the current directory ( empty file = size 0 bytes )
delete all files in $ DIR that have not been accessed in at least 5 days
delete all files in the home directory which ahve the name core in them
delete all files that have the extension &quot; bam &quot; in current directory
delete all instances of the file &quot; bad &quot; if its size is 0 bytes
delete all normal / regular files in the current folder which are empty
delete all text files from current folder
delete all text files in the entire file system
delete all text files in the home folder after user confirmation
delete all the &quot; .bak &quot; or swap files in kat folder
delete all the &quot; .doc &quot; files in the current folder
delete all the &quot; wmv &quot; &quot; wma &quot; files in the currnet folder ,
delete all the backup files in current directory
delete all the broken symbolic links from the folder / usr / ports / packages
delete all the core files in the folder / prog which are bigger than 1KB
delete all the directories empty directories in the current folder
delete all the empty directories in the current folder
delete all the empty files in the current directory
delete all the empty files in the current directory only if they are ok and the user has the permission to delete them
delete all the empty files ( files with size 0 bytes ) in the current folder
delete all the empty in the current folder and all its sub directories
delete all the empty in the current folder do not search in sub directories
delete all the files ending with &quot; ~ &quot; in current folder
delete all the files ending with &quot; ~ &quot; in current folder
delete all the files ending with &quot; ~ &quot; in current folder
delete all the files in the current folder
delete all the files in the current folder
delete all the files in the current folder which do not belong to any user
delete all the files in the current folder which are bigger than 1KB
delete all the files in the current folder which do not belong to any user
delete all the files in the current folder which end with &quot; .bak &quot; or &quot; .backup &quot; and which have not been accessed in the last 30 days
delete all the files in the current folder which have been modified in the last 14 * 24 hours
delete all the files in the file system which belong to the user edwarda
delete all the files in the file system which belong to the user edwarda after user confirmation
delete all the files which start with &quot; Tes &quot; in the current folder
delete all the log files in the current folder
delete all the log files in the current folder
delete all the log files in the current folder
delete all the log files which have not been modified in the last 5 days after user confirmation
delete all the mp3 files in the current folder .
delete all the mp3 files in the home folder
delete all the mp4 files in the folder / home which are bigger than 10MB
delete all the normal files in the current directory whcih have the word &quot; gui &quot; in their content .
delete all the normal files in the current folder and do not delete those in the subfolders
delete all the normal / regular files in the current folder
delete all the php files in the folder / var / www
delete all the regular files in the temp folder which have not been changed in the last 15 * 24 hours
delete all the regular files in the temp folder which have not been modified in the last 24 hours
delete all the regular files in the temp folder which have not been modified in the last 24 hours
delete all the regular files in the temp folder which have not been modified in the last 24 hours
delete all the regular files in the temp folder which have not been modified in the last 24 hours + at the end gives bulk input to the rm command
delete all the text files from the current folder after user confirmation
delete all the text files in the current folder
delete all the text files in the current folder .
delete all the text files starting with the name &quot; oldStuff &quot; in the file system
delete all the tmp files ( files with the extension tmp ) in the / tmp folder
delete all the tmp files ( files with the extension tmp ) in the / tmp folder . Print0 is used to display all those files which have newline in their names or files whose name is only spaces .
delete all the trace files ( &quot; .trc &quot; ) from the folder $ DBA / $ ORACLE _ SID / bdump / which have not been accessed in the last 7 * 24 hours
delete all the trace files ( &quot; .trc &quot; ) which have not been been accessed in the last 30 * 24 hours
delete recursively , without prompting , any files or directories under the current directory that case insensitively match the filename &quot; .svn &quot;
delete recursively , without prompting , any files or directories under the current directory that case insensitively match the filename &quot; .svn &quot;
delete recursively , without prompting , any files or directories under the current directory that case insensitively match the filename &quot; .svn &quot;
delete what was typed in the command line and run &quot; pwd &quot; when button &quot; \ e &#91; 24 ~ &quot;
dispaly a long listig of all the files in the current folder which are bigger than 100KB
dispaly a long listing of all the files in the current folder which have been modified in the last 14 days
dispaly all the empty regular / normal files in the current folder
display a list of all files in the folder passed as argument to a script
display a list of all java or jsp files in the current folders
display a list of all regular / normal files in the current folder
display a list of all the files in the home folder which have been modified today
display a list of all the files in the file system which do not belong to any group and search only in jfs and jfs2 file systems
display a list of all the files in the file system which do not belong to any user and search only in jfs and jfs2 file systems
display a list of all the normal / regular files in the file system , excluding the folder proc which have the suid or sgid bit set
display a long ilsting of all the files in the file system which are bigger than 1KB and which have not been modified in the last 30 * 24 hours
display a long list of all regular / normal files in the file system which belong to the root and with suid bit set
display a long list of all the directories which have files ending with &quot; .todo &quot;
display a long list of all the directories which have files ending with &quot; .todo &quot;
display a long list of all the files in the directory &quot; / mydir &quot; which have not been modified in the last 20 * 24 hours or which have not been accessed in the last 40 * 24 hours
display a long list of all the files that are bigger than 10KB in current folder
display a long list of all the jpg files in the home folder
display a long list of all the jpg files in the home folder ( plus at the end is used to give bulk data as input )
display a long list of the files in the current folder which have the word fuddel in all the files in the current folder and then search for the word fiddel in the previously matched files
display a long listing of all files in the entire file system which are bigger than 1MB
display a long listing of all fles in current folder which have been modified in the last 60 minutes
display a long listing of all images with the name &quot; articles &quot; in the current folder
display a long listing of all images with the name &quot; articles &quot; in the current folder ( print0 is used to preserve file names with new line in their name )
display a long listing of all regular files in current folder which have been modified in the last 60 minutes
display a long listing of all regular files in current folder which have been modified in the last 60 minutes
display a long listing of all regular files in current folder which have been modified in the last 60 minutes
display a long listing of all the &quot; Trash &quot; files in the folder / home
display a long listing of all the directories in current directory
display a long listing of all the directories in the current folder
display a long listing of all the directories in the entire file system
display a long listing of all the empty files in the entire file system which are empty
display a long listing of all the files in the / var folder which are bigger than 10MB. print0 is used to handle the files which have new lines in their names
display a long listing of all the files in the current directory
display a long listing of all the files in the current folder
display a long listing of all the files in the current folder in sorted order , which are bigger than 10KB
display a long listing of all the files in the current folder that have been accessed in today from the start of the day
display a long listing of all the files in the current folder which are bigger than 10KB
display a long listing of all the files in the current folder which have been modified in the last 24 hours
display a long listing of all the files in the current folder which have been modified in the last 24 hours
display a long listing of all the files in the home folder which are bigger than 200MB
display a long listing of all the files that begin with the name &quot; Metallica &quot; in the entire file system
display a long listing of all the java files in the current folder in sorted order
display a long listing of all the log files in the current folder which are bigger than 1MB
display a long listing of all the normal / regular files in the current folder ( print0 is used to handle files which have newlines in their names or files with the name only as spaces )
display a long listing of all the regular / normal files in the current folder
display a long listing of all the regular / normal files in the file system which have set uid bit or set gid bit enabled .
display a long listing of all the xls or csv files in the entire file system
display a long listing of all the xls or csv files in the entire file system
display a long listing of the files all non emoty files in current folder which have been modified 60 minutes ago
display a long listing of the files in current folder which have been modified in the last 60 minutes
display a long listing of the files in current folder which have been modified in the last 60 minutes
display all directories in a folder
display all directories in current folder
display all directories in current folder
display all directories in current folder and do not search in sub directories
display all directories in current folder excluding those that are present in .git folder
display all directories in the current folder
display all directories in the entire file system
display all directories in the folder &quot; $ ORIG _ DIR &quot;
display all directories in the folder &quot; / myfiles &quot;
display all directories in the folder &quot; PROD &quot; and do not search in the sub directories
display all directories in the folder Symfony
display all directories in vim folder do not search in sub directories
display all directories which have not been accessed in the last 24 * 3 hours
display all empty files in the current folder
display all empty files ( files with sisze 0 bytes ) in home folder
display all executable files in the folder / home
display all file in the folder / dir / to / search except &quot; .c &quot; files
display all file in the folder / dir / to / search except &quot; .c &quot; files
display all file in the home folder except &quot; .c &quot; files
display all file in the home folder except &quot; .c &quot; files
display all file names in current folder
display all files expect directories in the current folder
display all files ending with &quot; .ext &quot; in current folder and append the file contents of list.txt and sort them based on name and display only uniq items
display all files ending with &quot; ini &quot; in current folder
display all files in a folder
display all files in current folder
display all files in current folder and follow the symbolic links and display the pointed file
display all files in current folder ending with &quot; ~ &quot; or &quot; # &quot; using regular expression
display all files in current folder excluding current folder ( . )
display all files in current folder excluding text files
display all files in current folder excluding those that have the word &quot; git &quot; in their name and display files that have git in their path names
display all files in current folder using regular expression
display all files in current folder which are bigger than 1 MB
display all files in current folder which are bigger than 100KB but are less than 500KB
display all files in current folder which have been modified in the last 60 minutes
display all files in current folder which have not been modified in the last 60 minutes
display all files in current folder with NULL separating each file
display all files in the current directory excluding those that are present in the directories whose name starts with &quot; efence &quot; and do not search in the sub directories
display all files in the current folder
display all files in the current folder
display all files in the current folder ( $ @ contains the variables passed as argument to the function )
display all files in the current folder after pruning those in the current folder ( dot is the output of this command )
display all files in the current folder along with their last access timestamps
display all files in the current folder along with their last accessed timestamps
display all files in the current folder and do not search in the sub directories
display all files in the current folder expect text files
display all files in the current folder that have been modified in the last 24 hours whose name has only 1 letter
display all files in the current folder which are not empty
display all files in the current folder which do not belong to the user john
display all files in the current folder which do not match the regular expression
display all files in the current folder which end with extension &quot; myfile &quot; followed by one digit or two digits
display all files in the current folder which end with extension &quot; myfile &quot; followed by one digit or two digits
display all files in the current folder which end with extension &quot; myfile &quot; followed by two digits
display all files in the current folder which start with met
display all files in the current folder with the name test excluding those that are present folder test
display all files in the current folder with the name test excluding those that are present in the sub folders of the test folder
display all files in the directory &quot; dir &quot; which have been accessed in the last 60 minutes
display all files in the directory &quot; dir &quot; which have been changed in the last 60 minutes
display all files in the entire file system
display all files in the entire file system excluding the directories / proc , / sys , / dev and those files which are writable and which are not symbolic links and which are not sockets and which do not have the sticky bit set
display all files in the entire file system excluding those that are in the transfer directory
display all files in the file system which are bigger than 50MB and having size &quot; filename &quot; in them
display all files in the folder / usr and its sub directory ( do not search beyond the sub directory )
display all files in the folder / usr / src excluding those ending with &quot; , v &quot;
display all files in the folder bar only in the path / foo / bar / myfile ( no output is generated )
display all files which have been modified between two dates in current folder
display all hidden files in the current folder
display all html files in current folder
display all instances of the file tkConfig.sh in the folder / usr
display all instances of &quot; foo.cpp &quot; file in the current folder which are not in the sub directory tree &quot; .svn &quot;
display all instances of the .profile file in the entire file system
display all jpg files in the current folder
display all mp3 files in the file system which have not been accessed in the last 24 hours
display all non empty directories in current folder
display all normal / regular files in current folder in reverse order
display all normal / regular files in a folder
display all normal / regular files in a folder
display all normal / regular files in current folder
display all normal / regular files in current directory
display all normal / regular files in current directory
display all normal / regular files in current folder
display all normal / regular files in current folder
display all normal / regular files in current folder in sorted order
display all normal / regular files in current folder which have readable permission
display all normal / regular files in the folder &quot; $ ORIG _ DIR &quot;
display all normal / regular files in the folder &quot; pathfolder &quot;
display all normal / regular files or directories in the folder &quot; $ ORIG _ DIR &quot;
display all pdf files in the current folder
display all php , xml and phtml files in current folder
display all regular files in current folder excluding search in the directories that are ending with &quot; git , svn &quot;
display all regular files in current folder which have spaces in their name
display all regular files in the folder image-folder
display all regular / normal files in a directory
display all regular / normal files in current folder
display all regular / normal files in temp folder and display the filename along with file size
display all regular / normal files in the current folder ending with the word ummy
display all regular / normal files in the current folder that were accessed exactly 7 * 24 hours back
display all regular / normal files in the current folder which are accessed in the last 7 * 24 hours
display all regular / normal files in the current folder which are not accessed in the last 7 * 24 hours
display all regular / normal files in the current folder with the name dummy
display all regular / normal files in the folder &quot; dir &quot; and display the filename along with file size
display all regular / normal files in the folder / Users / david / Desktop /
display all regular / normal files in the folder Symfony
display all regular / normal files which have been modified in the last 30 minutes
display all scala files in the directory &quot; src / main &quot;
display all scala files in the directory &quot; src / main &quot;
display all scala files in the directory &quot; src / main &quot;
display all shell scripts in current folder
display all soft links in current folder
display all sqlite files in the current directory along with their timestamp
display all symbolic links in current folder
display all symbolic links in the folder &quot; myfiles &quot;
display all symbolic links in the folder &quot; myfiles &quot; and follow them
display all text files in a folder
display all text files in current folder
display all text files in current folder
display all text files in the current folder
display all text files in the folder / home / you which have been modified in the last 60 * 24 hours ( case insensitive search )
display all text files in the folder / tmp / 1
display all text files in the folder / tmp / 1 excluding those which do not have spaces in their names
display all text files in the folder / user / directory which have been modified in today
display all text , mpg , jpg files in the folder / Users / david / Desktop
display all the &quot; .c &quot; files in the current directory
display all the &quot; .c &quot; files in the current folder excluding those that are present in all the sub directories
display all the &quot; .c &quot; files in the current folder excluding those that are present in the .svn sub folder
display all the &quot; .c &quot; files in the folder &quot; / home / david &quot; which have been accessed in the last 48 hours
display all the &quot; .c &quot; files which have been modified in the last 10 minutes
display all the &quot; .mov &quot; files in the current folder
display all the &quot; .mov &quot; video files in the current folder in the format filename and folder path
display all the &quot; .sh &quot; files in the current folder
display all the &quot; C &quot; files in the current folder
display all the .sh scripts and perl files in the current folder
display all the .sh scripts and perl files in the current folder
display all the .sh scripts in the folder / usr
display all the .sh scripts in the folder / usr
display all the C files or Python files in the folder &quot; euler &quot;
display all the C , CPP , Header files in the kat folder
display all the c files and the header files in the path / some / dir and do not search in sub directories
display all the configuration files in &quot; / etc &quot; folder along with their last access and modified timestamps
display all the configuration files in the current folder which are in the current tree structure
display all the configuration files in the etc folder
display all the details of empty files in current folder
display all the directories in the current folder
display all the directories in the current folder
display all the directories in the current folder excluding those that are present in the .svn directory tree
display all the directories in the current folder excluding those that are present in the aa directory tree
display all the directories in the current folder excluding those that are present in the aa directory tree
display all the directories in the current folder excluding those that are present in the folder secret
display all the directories in the current folder excluding those that have the name &quot; node _ modules &quot;
display all the directories in the current folder for the files which have not been accessed in the last 48 hours
display all the directories in the current folder which are atleast one level deep
display all the directories in the current folder which start with processor followed by digit and ends with .1 or .2
display all the directories in the current folder which start with processor followed by digit and ends with .1 or .2
display all the directories in the folder / path / to / dest except tmp and cache directories
display all the directories in the folder / path / to / dest except tmp directory
display all the directories in the folder / usr / share
display all the directories in the folder / var and do not go beyond 2 levels during search
display all the directories in the folder master-
display all the doc files in the current folder ( files ending with &quot; .doc &quot; )
display all the empty files in current folder
display all the empty files in the current folder ( files of size 0 bytes )
display all the empty files in the entire file system
display all the empty files in the folder / opt ( file size 0 bytes )
display all the file in the folder / home / david / which start with the word &quot; index &quot;
display all the file in the folder / home / david / which start with the word &quot; index &quot; ( case insensitive search )
display all the files in the current folder excluding the current folder and do not search in the sub directories
display all the files in the current folder excluding the perl files
display all the files in the current folder excluding those which are present in &quot; . / src / emacs &quot; folder
display all the files in the current folder which have colon in their name
display all the files along with their group name in the folder / home which do not belong to the group test
display all the files and directories with the name &quot; CVS &quot; from / usr / src folder that are at least seven levels deep and do not descend onto the folders
display all the files ending with &quot; .foo &quot; excluding those that are in the directory &quot; .snapshot &quot;
display all the files ending with &quot; .foo &quot; including those that are in the directory &quot; .snapshot &quot; , this is the wrong way of using prune .
display all the files ending with &quot; .user &quot; in / var / adm / logs / morelogs / and excluding all regular files
display all the files ending with &quot; .user &quot; or beginning with &quot; admin &quot; or ending with &quot; .user.gz &quot; in / var / adm / logs / morelogs / and excluding all regular files
display all the files ending with .c in the current folder
display all the files having spaces in the current folder
display all the files having spaces in the current folder
display all the files having the word &quot; searched phrasse &quot; in their name in the current folder excluding those from the paths &quot; / tmp / &quot; and &quot; . / var / log &quot;
display all the files in current folder
display all the files in current folder which are bigger than 10KB
display all the files in current folder which have been accessed in the last 15 days
display all the files in current folder which have been changed in the last 2-6 days
display all the files in current folder which have been changed in the last 24 hours
display all the files in current folder which have not been modified in the last 7 days
display all the files in current folder which have write permission to all the users
display all the files in current folder which start with &quot; file2015-0 &quot;
display all the files in the / usr folder which have the permissions 777
display all the files in the current directory and do not search in sub directories
display all the files in the current directory and do not search in the sub directories
display all the files in the current directory excluding the paths &quot; targert &quot; , &quot; tools &quot; , &quot; git &quot;
display all the files in the current directory excluding those that are in the &apos; secret &apos; directory
display all the files in the current folder
display all the files in the current folder
display all the files in the current folder
display all the files in the current folder
display all the files in the current folder along with the change time and display file names of the last 10 changed files
display all the files in the current folder along with the hidden files with the depth
display all the files in the current folder along with the modification time and display file names of the last 10 modified files
display all the files in the current folder and do not search in sub directories and move them to the directory / directory1 / directory2 .
display all the files in the current folder and traverse from the sub directories
display all the files in the current folder except those whose name is &quot; PERSONAL &quot;
display all the files in the current folder excluding search in the paths containing the folder having the word &quot; mmm &quot;
display all the files in the current folder excluding the directory aa
display all the files in the current folder excluding the file states _ to _ csv.pl and those that are present in the directories whose name starts with &quot; .git &quot;
display all the files in the current folder excluding the files with the name mmm
display all the files in the current folder excluding those ending with &quot; .disabled &quot; in sorted order
display all the files in the current folder excluding those that are present in the folder &quot; secret &quot;
display all the files in the current folder excluding those that are present in the path &quot; . / etc &quot;
display all the files in the current folder excluding those that are present in the sub directory aa and display those files that start with the word &quot; file &quot;
display all the files in the current folder excluding those which are in the path of &quot; .git &quot;
display all the files in the current folder expect perl shell and python fiels
display all the files in the current folder for the files which have been accessed in the last 24 hours
display all the files in the current folder for the files which have not been accessed in the last 24 hours
display all the files in the current folder in a single line separated by null command
display all the files in the current folder that are at least one week old ( 7 days ) but less then 30 days old
display all the files in the current folder that end with &quot; .ksh &quot;
display all the files in the current folder that have been modified in the last 24 hours
display all the files in the current folder which are bigger than 100MB and save the output list to the file / root / big.txt
display all the files in the current folder which are in the path &quot; . / sr * sc &quot;
display all the files in the current folder which are in the path ending with the folder f
display all the files in the current folder which are present in the path &quot; . / sr * sc &quot;
display all the files in the current folder which are present in the path &quot; . / src / emacs &quot;
display all the files in the current folder which contains form feed ( ^ L ) and does not contain NULL
display all the files in the current folder which do not belong to any group
display all the files in the current folder which do not belong to any user
display all the files in the current folder which end with &quot; .bash &quot;
display all the files in the current folder which hare in the sub directory trees of the folders which begin with the word &quot; kt &quot; followed by a digit
display all the files in the current folder which have are bigger than 1KB
display all the files in the current folder which have been accessed in the last 60 minutes
display all the files in the current folder which have been modified after the files &quot; / bin / sh &quot;
display all the files in the current folder which have been modified between two dates
display all the files in the current folder which have been modified in one hour ago
display all the files in the current folder which have been modified in the last 14 * 24 hours
display all the files in the current folder which have been modified in the last 2 days
display all the files in the current folder which have been modified in the last 24 hours
display all the files in the current folder which have been modified in the last 24 hours
display all the files in the current folder which have been modified in the last 24 hours excluding all directories
display all the files in the current folder which have been modified in the last 5 * 24 hours
display all the files in the current folder which have not been modified in the last 7 days and which are not in the list &quot; file.lst &quot;
display all the files in the current folder which have the permissions 777 and which have been modified in the last 24 hours .
display all the files in the current folder which have the permissions 777 and which have been modified in the last 24 hours .
display all the files in the current folder which have the word &quot; bills &quot; in their name
display all the files in the current folder which start with either &quot; fileA _ &quot; or &quot; fileB _ &quot;
display all the files in the current folder .
display all the files in the directory modules
display all the files in the entire file system
display all the files in the entire file system
display all the files in the entire file system which are bigger than 10MB
display all the files in the entire file system which begin with &quot; apache-tomcat &quot;
display all the files in the entire file system which have set uid bit set .
display all the files in the file system excluding all the &quot; .c &quot; files
display all the files in the file system which are changed a minute ago
display all the files in the file system which are present in nfs system
display all the files in the file system which are smaller than 20 bytes
display all the files in the file system which belong to no group
display all the files in the file system which belong to no user
display all the files in the file system which belong to the group lighttpd
display all the files in the file system which belong to the user &quot; user1 &quot;
display all the files in the file system which belong to the user &quot; wnj &quot; and which are modified after the file &quot; ttt &quot;
display all the files in the file system which belong to the user &quot; wnj &quot; or which are modified after the file &quot; ttt &quot;
display all the files in the file system which belong to the user with the id 1005
display all the files in the file system which do not belong to the user &quot; wnj &quot; and which are modified before the file &quot; ttt &quot;
display all the files in the file system which have been modified in the last 10 minutes
display all the files in the folder &quot; $ ORIG _ DIR &quot;
display all the files in the folder &quot; / Users / Me / Desktop &quot; which belong to the user &quot; popo &quot; and which have the permission 777
display all the files in the folder &quot; / Users / Me / Desktop &quot; which have read permission to them
display all the files in the folder &quot; / home / mywebsite &quot; which have been changed in the last 7 * 24 horus
display all the files in the folder / etc / srv excluding those that are present in the path of . / srv / tftp / pxelinux.cfg * and / etc / mtab
display all the files in the folder / home which do not belong to the group test
display all the files in the folder / home which do not belong to the group test
display all the files in the folder / home which have the setuid bit enabled
display all the files in the folder / mp3-collection which are bigger than 10MB or which start with the name &quot; Metallica &quot;
display all the files in the folder a
display all the files in the folders / etc / srv excluding the paths / etc / mtab and / srv / tftp / pxelinux.cfg
display all the files in the folders mydir1 , mydir2 which are bigger than 2KB and have not been accessed in the last 30 * 24 hours
display all the files in the home folder
display all the files in the home folder except text files
display all the files in the home folder excluding directories which have been modified in the last 24 hours
display all the files in the home folder that have been modified in the last 24 hours
display all the files in the home folder that have been modified in the last 7 * 24 hours
display all the files in the home folder which are smaller than 500 bytes
display all the files in the home folder which are smaller than 500 bytes
display all the files in the home folder which begin with &quot; arrow &quot;
display all the files in the home folder which begin with &quot; arrow &quot; and end with &quot; xbm &quot;
display all the files in the home folder which belong to the suer &quot; bruno &quot; and end with &quot; .sxw &quot; and have been accessed in the last 3 * 24 hours
display all the files in the home folder which end with &quot; .xbm &quot;
display all the files in the home folder which have not been modified in the last 365 * 24 hours
display all the files in the home folder which have read permission to the user
display all the files in the kat folder
display all the files in the user folder which have been modified after the files / tmp / stamp $ $
display all the files in the usr folder and those that are in the path local
display all the files in the usr folder which have been modified after Feburary 1st
display all the files on the current folder excluding those that are present in the folder &quot; . / src / emacs &quot;
display all the files only in the path &quot; . / sr * sc &quot;
display all the files with the names &quot; name1 &quot; and &quot; name2 &quot; in the current folder and do not search in the sub directories
display all the header files and cpp files in the current folder
display all the header files and cpp files in the current folder
display all the header files and cpp files in the current folder
display all the hidden directories in the directory &quot; / dir / to / search / &quot;
display all the hidden files in the directory &quot; / dir / to / search / &quot;
display all the hidden files in the folder / home
display all the home folder which end with the extension &quot; sxw &quot; and which have been accessed in the last 3 * 24 hours and which belong to the user bruno
display all the html files in the current folder
display all the html files in the current folder
display all the html files in the current folder excluding search in the path . / foo
display all the html files in the current folder excluding search in the paths . / foo , . / bar .
display all the html files in the current folder that have been modified exactly 7 * 24 hours ago
display all the html files in the current folder that have been modified in the last 7 * 24 hours
display all the html files in the current folder that have not been modified in the last 7 * 24 horus
display all the html files in the folder / var / www
display all the ip addresses in all the files that are present in / etc folder
display all the ip addresses in all the files that are present in / etc folder
display all the jars in the current folder
display all the java script files in a folder
display all the java script files in the current folder
display all the java , xml and action scripts ( .as ) files in a directory
display all the jpg files in the current folder and do not search in sub directories
display all the jpg files in the current folder which belong to the user nobody
display all the jpg images in current folder
display all the log files in the folder / var / log , print0 is used to handle files with only spaces in their names or which have newlines in their names
display all the normal / regular files in a directory
display all the normal / regular files in the current folder
display all the normal / regular files in the current folder and do not go beyond 3 levels
display all the normal / regular files in the current folder which are empty
display all the normal / regular files in the directory FOLDER1
display all the php files in the current folder which do not have the permission 644
display all the php files in the entire file system
display all the regular files in current folder
display all the regular files in current folder excluding all the directories and all the sub directories having &quot; normal &quot; in their name
display all the regular files in current folder that belong to the user &quot; tom &quot;
display all the regular files in the current folder and do not search in sub folders
display all the regular files in the current folder excluding those that are present in the path &quot; git &quot;
display all the regular files in the current folder excluding those that are present in the path &quot; git &quot;
display all the regular files in the current folder that are bigger than 10KB
display all the regular files in the current folder that are exactly 10KB
display all the regular files in the current folder that are less than 10KB
display all the regular files in the current folder that are modified after the file &quot; file.log &quot;
display all the regular files in the current folder which dont not have the permission 777
display all the regular files in the current folder which have the permission 777
display all the regular files in the folder &quot; $ ( FOLDER ) &quot; which are modified in the last $ ( RETENTION ) * 24 hours and excluding hidden files
display all the regular / normal files in a folder
display all the regular / normal files ending with &quot; .mod &quot; in a folder
display all the regular / normal files in a folder
display all the regular / normal files in a folder
display all the regular / normal files in current directory
display all the regular / normal files in current folder
display all the regular / normal files in current folder
display all the regular / normal files in current folder which have been modified exactly 60 minutes before
display all the regular / normal files in the / root folder which are bigger than 500MB
display all the regular / normal files in the current directory
display all the regular / normal files in the current directory which are atleast 2 levels deep
display all the regular / normal files in the current folder excluding the files &quot; bbb &quot; and &quot; yyy &quot;
display all the regular / normal files in the current folder excluding the files with the name mmm
display all the regular / normal files in the current folder that are not accessed in the last 10 minutes
display all the regular / normal files in the current folder which are modified after a file
display all the regular / normal files in the current folder which have been modified in the last 24 hours
display all the regular / normal files in the entire file system
display all the regular / normal files in the folder &quot; / home / user / demo &quot; which have the permission 777 .
display all the regular / normal files in the folder / path / which have not been modified today ( from day start ie , 00 : 00 )
display all the regular / normal files in the home folder that have been modified in the last 1 day ( from the start of day ie , from 00 : 00 )
display all the soft links in a folder which are not broken
display all the symbolic links in the current folder
display all the symbolic links in the current folder
display all the tex files in the current folder
display all the tex files in the current folder
display all the text and pdf files in the current folder
display all the text files in the current folder
display all the text files and hidden files in the home folder
display all the text files and pdf files in the current folder
display all the text files from the current folder and skip searching in skipdir1 and skipdir2 folders
display all the text files in a folder
display all the text files in current folder
display all the text files in current folder
display all the text files in the current folder
display all the text files in the current folder and do not search in the bin directory
display all the text files in the current folder except readme files
display all the text files in the current folder which have been modified in the last half minute ( 30 seconds )
display all the text files in the home folder
display all the text files in the home folder ( case insensitive search )
display all the text files in the temp folder
display all the trace files ( &quot; .trc &quot; ) from the folder $ DBA / $ ORACLE _ SID / bdump / which have not been accessed in the last 7 * 24 hours
display all the users in the current folder that belong to the group &quot; sunk &quot;
display all the users in the current folder which do not belong to the user root
display files ending with &quot; .ext &quot; in current folder excluding those that are present in the list list.txt
display files ending with &quot; .ext &quot; in current folder which are present in the file &quot; foo &quot;
display files in current folder ending with &quot; pdf &quot; or &quot; PDF &quot;
display in a list of all the files that are bigger than 10KB in current folder
display list of all the C files ( fuiles with &quot; .c &quot; extension ) in current folder
display list of all the files in the / tmp folder
display list of all the files in the current directory
display list of all the files in the current directory ( print0 handles file names with newlines or spaces )
display list of all the files in the current folder which are empty .
display list of all the hidden directories in the directory &quot; / dir / to / search / &quot;
display list of all the hidden directories in the directory &quot; / dir / to / search / &quot;
display list of all the hidden files in the directory &quot; / dir / to / search / &quot;
display list of all the hidden files in the home folder
display list of all the hidden regular / normal files in the directory &quot; / dir / to / search / &quot;
display list of all the regular / normal files in the current folder which start with &quot; my &quot;
display list of all the regular / normal files in the home folder which are bigger than 512 kb
display list of all the regular / normal files in the home folder which are exactly 6579 bytes
display long list of all the files in the folder / home / peter which belong to no user and change the owner , group of all these files ( after user confirmation ) to &quot; peter &quot; &quot; , peter &quot;
display long list of all the perl files in the current folder
display long listing of all files in the current directory whose size is 24 or 25 bytes ( doesnt display inode information ) .
display long listing of all files in the current directory whose size is 24 or 25 bytes .
display long listing of all normal / regular files in the current directory which have been modified in the last 2 days .
display long listing of all regular / normal files whose size is less than 50 bytes .
display long listing of all the empty files in the current folder
display long listing of all the files in the folder &quot; / myfiles &quot;
display long listing of all the files in the root folder which are bigger than 3KB
display long listing of all the files that have been changed in the last 4 days , daystart is used to compare from the starting of day i.e , at 00 : 00
display long listing of all the regular hidden files in the folder Musica
display long listing of all the symbolic links in the current folder
display long listing of all the text files in the current folder
display long listing of all the text files in the current folder ( plus at the end executes quickly by sending bulk data as input to the command in exec )
display long listing of first 10 directories in the current folder
display only the file names of all the files which end with &quot; .deb &quot;
display table of files with their name , owner , and size in bytes .
display ten files in the current directory
display ten files in the tmp directory
display the amount of disk space used by all the log files in the folder / usr / local / apache / logs /
display the base name ( name without extension ) of all the &quot; .NEF &quot; files in the current folder
display the base name ( name without extension ) of all the &quot; .flac &quot; files in the current folder
display the change owner command for all the regular files in the current folder .
display the commands to force delete all jpg files in current directory which are less than 50KB and do not search in the sub directories
display the contents of all the files in the current folder which start with test ( case insensitive search )
display the contents of all the files in the current folder which start with test ( case insensitive search )
display the contents of all the text files in the current directory
display the count of all normal / regular files in current directory
display the count of all the directories in the current folder
display the count of all the directories present in a folder
display the count of all the files in the current folder
display the count of all the normal / regular files in the current directory
display the count of number html files in the current folder
display the count of number of files in the current folder
display the count of regular / normal files in the current folder do not search in sub directories
display the count of total number of empty files in the current folder
display the count of total number of non empty files in the current folder
display the count of total number of text files in the folder / home / you which have been modified in the last 60 * 24 hours
display the directory name along with the modified time for all the files / var
display the file name and creation month of top 11 files in the entire file system
display the file name and the file type of all the files in the current directory
display the filenames which do not have begin with dot ( . )
display the files along with the size of all the files in the current which are bigger than 100MB
display the help of find command
display the html , javascript and text files in the current folder ( print0 is used to preserve the filenames of all the files which have newlines in their names )
display the list of all the files in the current directory which have been accssed in the last 500 days exluding hidden files
display the list of all the normal files excluding hidden files which have been accessed in the last 500 days
display the list of all the text files present in the current directory excluding the search in certain paths .
display the long listing detials of all the files in the folder junk which is in home folder .
display the long listing of all files in / var / log which were modified 60 days or more ago .
display the manual page of find
display the name of all directories in the current folder and do not search in sub directories
display the name of all directories in the current folder and do not search in sub directories ( mindepth ensures that the current folder name is removed from the output )
display the names without extensions of all the data files in current folder and do not search in sub folders and which have not been changed in the last 60 mins
display the names without extensions of all the data files in current folder which have not been changed in the last 60 mins
display the names without extensions of all the data files in current folder which have not been changed in the last 60 mins
display the number of lines in all the &quot; .c &quot; files in the current folder
display the number of lines in all the &quot; .c &quot; files in the current folder
display the number of lines in all the &quot; .c &quot; files in the current folder
display the number of lines in all the files in the current folder
display the number of lines in all the files in the current folder
display the number of lines in all the header files in the current folder
display the number of lines in all the php files in the current folder
display the three largest files by size in current folder
display the three smallest files by size in a folder .
display the top 20 biggest files in the current folder which are present in the same partition as that of the current folder
display the type of all the regular / normal files in the entire file system
display the version of find
display the version of find command
display the version of find command
display top 11 files along with the last access date for all the files in the file system
displays all files in the current directory
displays all the files in the current folder
download a file &quot; http : / / download.oracle.com / otn-pub / java / jce / 8 / jce _ policy-8.zip &quot; using cookies &quot; oraclelicense = accept-securebackup-cookie &quot;
download content from &quot; http : / / 127.0.0.1 : 8000 &quot; and output to &quot; index.html &quot;
download content from &quot; http : / / example.com / textfile.txt &quot; and output to &quot; textfile.txt &quot;
download contents from &quot; https : / / raw.github.com / creationix / nvm / master / install.sh &quot; and execute
download contents from &quot; https : / / www.npmjs.com / install.sh &quot; and execute
download contents of a website &quot; http : / / example.com / &quot;
download contents of a website &quot; https : / / get.scoop.sh &quot;
download file &quot; https : / / raw.githubusercontent.com / creationix / nvm / v0.31.0 / install.sh &quot; and execute it
dsisplay all files inthe current folder
exclude vendor and app / cache dir , and search name which suffixed with php
execute command &quot; who &quot; when key &quot; \ eW &quot; is pressed
explicitly list all files in the current directory
extract &quot; backup.tar.gz &quot; with verbose output
extract &quot; filename.tar.xz &quot; with verbose output
extract &quot; passwd.tar.gz &quot; with verbose output
extract &quot; phantomjs-1.9.0-linux-x86 _ 64.tar.bz2 &quot;
extract &apos; archive.tar.gz &apos; to / destination
extract &apos; archive.tar.gz &apos; to / destination
extract / path / to / my _ archive.tar.xz to / path / to / extract and preserve permissions .
extract archive stored in $ 1
file all the Sticky Bit set files whose permission are 551
files all files which expect directories and display count of them
filter output of bind -p by regex
find case-insensitive StringBuffer in all * .java files
find directory which case-insensitive name is too in currect directory
find file which case-insensitive name is too in currect directory
find files which full path name is / tmp / foo / bar under foo directory and print
find files which full path name is / tmpfoo / bar under / tmp / foo directory and print
find files which full path name is / tmpfoo / bar under foo directory and print
find files which full path name is foo / bar under foo directory and print
find files which full path name is foo / bar under foo directory and print
find js file which name is not &apos; glob-for-excluded-dir &apos; under current directory .
find symbolic link file that name match &apos; * sysdep.c &apos;
find &quot; .flac &quot; files in current folder using regular expressions
find * .gif files under the currently directory and sub-directories and list them using the ls command
find -name &apos; * .js &apos; -not -path &apos; . / node _ modules / * &apos; -not -path &apos; . / vendor / * &apos;
find .bmp or .txt files
find .gif files in / var / www and below that were last changed between 90 and 180 days ago
find CSS files , omitting results containing &quot; CVS &quot;
find StringBuffer in all * .java files
find StringBuffer in all * .java files , ignoring case
find Texinfo source files in / usr / local / doc
find Texinfo source files in / usr / local / doc
find a &apos; fool.scala &apos; named regular file under / opt / usr / var those directories .
find a difference between website content of &quot; http : / / tldp.org / LDP / abs / html / &quot; and &quot; http : / / www.redhat.com / mirrors / LDP / LDP / abs / html / &quot;
find a specfic video file in the current directory
find a.out , * .o and core files under the current directory and sub-directories and delete them .
find al the files that are modified exactly 2 days ago
find al the tmp directories in the current directory and create a dump of it
find all * .csv files which modify within last 2 days in / home directory then zip ( archive ) -
find all files that match &quot; &#91; a-f0-9 \ - &#93; { 36 } \ .jpg &quot; of grep
find all tools generated files a.out , * .o and core dump files which not required to us these all junk files &amp; delete from current directory .
find all &quot; .flac &quot; files in current folder starting with &quot; cmn- &quot;
find all &quot; .flac &quot; files starting with &quot; cmn- &quot; and search for files having CJK characters using unicodes
find all &quot; .flac &quot; files starting with &quot; cmn- &quot; and search for files having CJK characters using unicodes
find all &apos; * .c &apos; files under $ HOME directory which context contains sprintf
find all &apos; js &apos; suffix files exclue the path * exclude / this / dir * &apos; under current dirctory
find all * .java files / directories under current directory
find all * .java files / directories under current directory
find all .bak files in or below the current directory and move them to ~ / .old.files directory :
find all .pm , .pl files in / users / tom and search for multiple pattern in same files and display the matched file names
find all CSS files that do something with your HTML ID # content
find all PDFs owned by user &quot; seamstress &quot;
find all c , cpp files in current folder
find all c , cpp files in current folder
find all class files or sh script files in the current folder
find all configuration files in a folder
find all data files in current folder which have not been changed in the last 60 minutes and display their name without extension
find all directories in the current directory
find all directories in the current directory
find all directories in the current directory which have the name foo and do not have the extension &quot; bar &quot;
find all directories in the current folder
find all directories in the current folder and do not search in sub directories
find all directories named build under the current directory
find all directories that names are &apos; apt &apos; and display details
find all directories that names are &apos; project.images &apos;
find all directories that names are &apos; project.images &apos; and display details
find all directories with the name &quot; lib64 &quot; in the usr folder and replace space with &apos; : &apos;
find all directories with the name root in the entire file system .
find all directories with the name test in a directory
find all directory list which have empty list in / tmp directory
find all directory list which have empty list in / tmp directory .
find all empty files
find all empty files in / tmp directory .
find all empty files in home directory
find all empty files in the current directory ( empty file = size 0 bytes )
find all executable files
find all executable files in / home directory .
find all files that names are &apos; apt &apos;
find all files that names are &apos; apt &apos; and display detailed list
find all files the current folder which have not been accessed in the last 7 days and which are bigger than 20KB
find all files &amp; dircetiry in current directory which have .tmp extension and delete them .
find all files and directories that have been modified in the last seven days
find all files and directories under the current directory and display the inode of each one , using printf
find all files beneath the current directory that begin with the letters &apos; Foo &apos; and delete them .
find all files ending with &quot; js.compiled &quot; in current folder
find all files ending with &quot; js.compiled &quot; in current folder ( print0 is used to handle files with newlines in their names )
find all files ending with &quot; js.compiled &quot; in current folder and rename them .
find all files having certain word in its name in the current folder
find all files in / usr / bin and run the &quot; file &quot; command on them .
find all files in and under the current directory that have read , write and execute permissions set for all users .
find all files in current folder and display the total lines in them
find all files in current folder having the name pattern &quot; some _ pattern &quot; and move them to folder target _ location ( GNU VERSION )
find all files in current folder having the name pattern &quot; some _ pattern &quot; and move them to the folder target _ location ( GNU VERSION )
find all files in current folder using name patterns
find all files in current folder which are bigger than 1 MB and move them to another folder
find all files in current folder which are bigger than 1 MB and move them to another folder
find all files in current folder which are bigger than 1 MB and move them to another folder after user confirmation
find all files in current folder which are bigger than 1MB
find all files in current folder which are bigger than 270MB and less than 300MB
find all files in current folder which are exactly 300MB
find all files in current folder which are less than 300MB
find all files in current folder which are more than 300MB
find all files in current folder which have been accessed exactly 10 minutes ago
find all files in etc which have been changed in the last 1 day
find all files in etc which have been changed in the last 25 hours
find all files in home folder which have been modified after a timestamp
find all files in home folder which have been modified exactly 1 day before
find all files in the a direcotry which have been modified in exactly 1 day back
find all files in the current directory and sub-directories that were accessed after modifying / etc / hosts
find all files in the current directory and sub-directories that were modified after the / etc / passwd file was modified
find all files in the current directory do not display the files which are not readable
find all files in the current directory do not display the files which do not have read permission to all users
find all files in the current directory excluding those that end with .js or have the words .min or console in their name
find all files in the current directory that are less than 1 byte size
find all files in the current directory which are bigger than 2MB
find all files in the current directory which are bigger than 4MB
find all files in the current directory whose size is 24 or 25 bytes .
find all files in the current folder and search for a word in them .
find all files in the current folder that are modified exactly 1 minute ago
find all files in the current folder that are modified exactly 2 minutes ago
find all files in the current folder that are not modified in the last 10 minutes
find all files in the current folder that are not modified in the last 240 hours
find all files in the current folder that end with &quot; , txt &quot;
find all files in the current folder that have a single letter in their name and have not been modified today
find all files in the current folder which are bigger than 10MB and less than 50 MB
find all files in the current folder which are bigger than 10bytes
find all files in the current folder which are of size 0 bytes .
find all files in the current folder which are of size 0 bytes .
find all files in the current folder which end with macs
find all files in the current folder which have been accessed in the last 30 minutes
find all files in the current folder which have been modified after / etc / passwd
find all files in the current folder which have been modified in the last 24 hours
find all files in the current folder which have been modified in the last 24 hours and whose file name is of length 1
find all files in the current folder which have not been accessed in the last 30 days in the current folder
find all files in the current folder which have not been accessed in the last 7 days or which are bigger than 20KB
find all files in the current folder which have not been changed in the last 48 hours
find all files in the current folder which have not been modified today and whose file name is of length 1
find all files in the current folder which have only the write permission for the others
find all files in the current folder which start with pro
find all files in the current folder whose size is less than 50KB
find all files in the current folder with the permission 777 and modify the permissions as 755 .
find all files in the entire file system whose size is more than 100MB
find all files in the file system having the name &quot; filename &quot;
find all files in the file system which are modified after the file / tmp / checkpoint
find all files in the file system which belong to no user or which have no user
find all files in the file system which belong to the group users and having the word &quot; filename &quot; in their name .
find all files in the file system which belong to the user pat and having the word &quot; filename &quot; in their name .
find all files in the file system which have been accessed in the last 24 hours
find all files in the file system which have no user and no group
find all files in the file system which have not been accessed in the last 2 days
find all files in the file system whose size is bigger than 3GB
find all files in the file system whose size is exactly 2KB
find all files in the file system with the permissions 777 and having the word &quot; filename &quot; in their name .
find all files in the folder &quot; myfiles &quot; which are exactly 5 bytes
find all files in the folder &quot; myfiles &quot; which have not been accessed in the last 30 * 24 hours
find all files in the folder / etc which have been modified after / tmp / foo
find all files in the folder / path / to / dir which have been modified between two dates
find all files in the home folder that are modified in the last 24 hours
find all files in the home folder that are modified in the last 7 days
find all files in the home folder which are modified in the last 2 days .
find all files in the home folder which have been modified between 72 and 96 hours before
find all files named &apos; linux &apos; on the system
find all files not ending in &quot; .html &quot;
find all files read less than 1 minute ago
find all files starting with capital letter in the current folder
find all files that are readable and writable by their owner
find all files that are readable or writable by their owner
find all files that belong to root user
find all files that do not have execute permission to all
find all files that do not have read permission to all
find all files that have been used more than two days since their status was last changed
find all files that names are dir-name-here
find all files that names are game
find all files that were modified between 90 to 100 days ago in home directory and delete then .
find all files under &quot; / usr &quot;
find all files under the / etc directory and display IP address patterns in them
find all files under the / etc directory and display any IP address patterns in them
find all files under the / etc / sysconfig directory that were accessed in the last 30 minutes
find all files under the current directory , filtering the output through a regular expression to find any lines that contain the word foo or bar .
find all files under the current folder except dir1 dir2 dir3 folder
find all files which name contain &apos; foo &apos; and path is not dir1 or dir2
find all files with pattern &apos; &apos; * .mp3 &apos;
find all files with pattern &apos; &apos; * .mp3 &apos; and send output into nameoffiletoprintto file
find all files with the first letter &quot; e &quot; or &quot; f &quot; and last one x in / usr / bin directory :
find all files without 777 permision
find all foo.bar files in the entire file system
find all foo.bar files in the entire file system and which are present in the same partition as root .
find all gif files in the file system
find all gzip files in a folder
find all headers file * .h in / nas / projects directory
find all hidden files in the current folder which have been modified after profile file
find all html or cgi files in current folder
find all java files in the current folder and search for the pattern REGEX
find all javascript files under the current folder
find all jpg files in current folder
find all jpg files in the current folder
find all jpg files in the folder which are in the path &quot; / 201111 / &quot; and sort them based on name
find all jpg , png , jpeg , pdf , tif , tiff , bmp and other image formats using regular expressions excluding those ending with &quot; _ ocr.pdf &quot;
find all js files under the build direcotry except build / external and build / log directory .
find all js files under the build direcotry except build / external directory .
find all js files which path does not contain . / node _ modules / * nor &apos; . / vendor / * &quot;
find all js files which path neither . / dir1 nor . / dir2
find all log files larger then 100MB in / home directory and delete them .
find all normal / regular files in current folder and display the total lines in them
find all normal / regular files in current folder and display the total lines in them
find all normal / regular files in current folder which end with &quot; ~ &quot; or which begin and end with &quot; # &quot; and and and delete them
find all normal / regular files in current folder which end with &quot; ~ &quot; or which begin and end with &quot; # &quot; and and move them to temp folder
find all normal / regular files in the current directory
find all normal / regular files in the entire file system having the word &quot; filename &quot; in their name .
find all of the executable files on your computer
find all of the files that are readable
find all pdf files in the current folder
find all php files in the folder / var / www /
find all png files in the current folder
find all posix-extended regex &quot; &#91; a-f0-9 \ - &#93; \ { 36 \ } \ .jpg &quot; files
find all raw images in the current folder and pass them one at a time to the xargs command and enable parallel processing of the files
find all read me files in a folder
find all readable files
find all readme files in a folder
find all regex &quot; . * / &#91; a-f0-9 \ - &#93; \ { 36 \ } \ .jpg &quot; files
find all regex &apos; \ . / &#91; a-f0-9 \ - &#93; \ { 36 \ } \ .jpg &apos; files
find all regex &quot; . / &#91; a-f0-9 \ - &#93; \ { 36 \ } \ .jpg &quot; files
find all regular file and create jw-htmlfiles.tar
find all regular files then display the number of occurrences of banana without lines not proper end
find all regular files exclude .o and exclude * .swp and output line number of soc _ attach if it has
find all regular files under the / etc / sysconfig directory that were accessed in the last 30 minutes
find all regular files which have been modified in the last 48 hours in home folder
find all regular / normal files in current folder which have been modified in the last 60 minutes
find all regular / normal files in the current folder
find all regular / normal files in the current folder that have been modified in the last 120 hours
find all regular / normal files in the current folder whose name has the word photo or picture and which have been modified in the last 30 minutes
find all regular / normal files in the folder &quot; myfiles &quot; which have read and write permission to the other users
find all regular / normal files which have cpp folder in their path
find all regular / normal files which have execute permission in current folder and copy them to another folder
find all sqlite files in the current directory .
find all symbolic links in the current folder
find all symbolic links under / usr
find all teh script files in a directory
find all text files in current folder and delete all the files that have the word foo in their name
find all text files in current folder and delete them
find all text files in current folder and display all files that have the alphabet a in their name
find all text files in current folder ; which have been modified exactly 5 days ago
find all text files in the current directory
find all text files in the current directory and compress them to a cpio file
find all text files in the current directory and display them page wise
find all text files in the current folder
find all text files in the current folder excluding those that are presenti n the folder &quot; / svn &quot; and search for a pattern .
find all text files in the current folder which have been modified after the file / tmp / newerthan
find all text files in the folder &quot; FFF &quot; and find the md5sum for them
find all text files in user / directory / which have been modified today and display the last line of these files
find all text files which have extra extensions in the current folder
find all the &quot; .JPG &quot; files in current folder and display their count
find all the &quot; .c &quot; files in the folder &quot; / home / you &quot; which have been accessed in the last 30 * 24 hours
find all the &quot; .c &quot; files in the folder / home / david which have been modified in the last 48 hours
find all the &quot; .jpg &quot; files in current folder and display their count
find all the &quot; .sh &quot; files in the current folder ( case insensitive search )
find all the &quot; .wma &quot; files in the folder &quot; $ current _ directory &quot;
find all the &quot; error _ log &quot; files in the folder &quot; / home &quot; which are bigger than 5MB and force delete them
find all the &quot; jpg &quot; file in a folder .
find all the &quot; passwd &quot; files in the entire file system
find all the * .conf files under / ( root )
find all the .jpg files in / and copy them to the current folder .
find all the backup files in the current folder and delete them
find all the backup files in the current folder and delete them
find all the backup files in the current folder and delete them after user confirmation
find all the config ( .conf files ) files in the folder / home / pat
find all the configuration files in / etc folder along with the last access &amp; modification time
find all the configuration files in the file system
find all the configuration files which have been accessed in the last 30 minutes .
find all the configuration or text files in current directory
find all the core files in the entire file system and delete them
find all the core files in the temp folder and force delete them
find all the cpp files in current folder
find all the cpp files in the current folder
find all the cpp files in the current folder and move them to another folder
find all the cpp files in the current folder and move them to another folder ( plus takes the bulk output of the find command and gives it as input to the move command in exec )
find all the cpp ( C + + source files ) , java , header files in the current directory
find all the css files
find all the database files in the folder / var / named
find all the direcories in the current folder
find all the directories with the name &quot; c &quot; in the current folder which are at least 3 levels deep and which are not present in the path &quot; / p / &quot; .
find all the directories with the name &quot; c &quot; in the current folder which are at least 3 levels deep and which are not present in the path &quot; / p / &quot; .
find all the directories in current folder and delete them
find all the directories in current folder and do not search in sub directories
find all the directories in current folder which start with test
find all the directories in the $ LOGDIR folder which have been modified in the last 24 hours and compress them
find all the directories in the current directory which dont have the execute permission .
find all the directories in the current folder
find all the directories in the current folder
find all the directories in the current folder and create the same directory structure in a remote machine using ssh
find all the directories in the current folder excluding search in the sub directories and create these directories in another path
find all the directories in the current folder that are empty ( size 0 bytes )
find all the directories in the current folder which begin with the words &quot; kt &quot; and end with a digit
find all the directories in the current folder which have been modified in 24 hours and move them to the folder / path / to / target-dir
find all the directories in the current folder which have been modified in 24 hours and move them to the folder / path / to / target-dir
find all the directories in the current folder which have been modified in 24 hours and move them to the folder / path / to / target-dir
find all the directories in the current folder which have been modified in 24 hours and move them to the folder / path / to / target-dir
find all the directories in the different folders excluding search in the sub directories and create these folders in the current directory
find all the directories in the entire file system whose size is greater than 50KB
find all the directories in the file system which begin with &quot; man &quot;
find all the directories in the file system which have read , write and execute to all the users
find all the directories in the folder $ LOGDIR which have been modified in the last 5 days and delete them .
find all the directories in the folder / raid with the extension local _ sd _ customize .
find all the directories in the home folder do not search in sub directories
find all the directories starting with the name &quot; someNamePrefix &quot; which have not been modified in the last 10 days and force delete them
find all the directories with the name &quot; DIRNAME &quot; in the current folder and force delete them
find all the directories with the name &quot; some-dir &quot; in the current folder and move them to another folder and do not search in subfolders
find all the directories with the name &quot; uploads &quot; in current folder
find all the empty directories in current folder and delete them
find all the empty directories in the current folder
find all the empty directories in the current folder and all its sub directories too
find all the empty files and folders in your system
find all the empty in the current folder do not search in sub directories
find all the empty regular / normal files in the current folder and delete them
find all the error , access , ssl _ engine and rewrite logs which are bigger than 300MB and are less then 5GB in the folder / opt
find all the file that have been modified exactly 3 days ago ( considers day starting not 24 hours )
find all the file that have been modified in the last 3 days ( considers day starting not 24 hours )
find all the file that have not been modified in the last 3 days ( considers day starting not 24 hours )
find all the file which name ( name can contains space ) end with c or h and content contain &apos; thing &apos;
find all the file which name end with c or h and content contain &apos; thing &apos;
find all the files in the folder / opt which have been changed in the last 120 minutes
find all the files ( under root file system / ) that were changed within the last 24 hours
find all the files ( under root file system / ) that were updated in the last 24 hours
find all the files ending with &quot; .coffee &quot; in the current folder and search for the words &quot; re &quot; in each line
find all the files ending with &quot; .foo &quot; in the folder / usr
find all the files ending with &quot; .sh &quot; in the folder / dir excluding those wth the names foo and bar .
find all the files ending with &quot; clj &quot; in the current folder and search for a pattern
find all the files ending with &quot; clj &quot; in the current folder and search for a pattern
find all the files ending with &quot; mkv &quot; in current folder
find all the files ending with &quot; rb &quot; and display the first 10000 lines from these files .
find all the files ending with &quot; ~ &quot; in current folder and move them to temp folder
find all the files ending with .ini in the current directory .
find all the files ending with .mp3 or .jpg
find all the files ending with jpg in current folder and display their count ( case insensitive )
find all the files ending with jpg in current folder and display their count ( case insensitive )
find all the files from root folder which have nogroup or noname and dispaly their details .
find all the files in current directory of size exactly 6MB .
find all the files in current directory of size greater than 10MB and less than 20 MB .
find all the files in current directory of size greater than 2GB .
find all the files in current directory of size smaller than 10KB .
find all the files in current folder ending with &quot; ini &quot; and search for a word in all these files
find all the files in current folder which end with a speicifc regular expression and display their count
find all the files in current folder which have been updated in the last 60 minutes
find all the files in home folder which have been modified in the last 24 hours
find all the files in the / usr folder that have been modified after the file / usr / FirstFile .
find all the files in the / usr folder which have modification date less than or equal to the file &quot; / FirstFile &quot;
find all the files in the current directory and change the permissions to 775 .
find all the files in the current directory and display them
find all the files in the current directory and print them excluding those that have the name SCCS .
find all the files in the current directory and search for the word &quot; pw0 &quot; in them .
find all the files in the current directory and sub-directories whose status was changed after / etc / fstab was modified
find all the files in the current directory and sub-directories , that were edited within the last 1 hour and execute the list command with long listing format
find all the files in the current directory ending with &quot; .i &quot;
find all the files in the current directory that have the extension &quot; bar &quot; and donot search in the subdirecotries directories .
find all the files in the current directory that have the word &quot; bash &quot; in their name
find all the files in the current directory that have the word &quot; lib &quot; in them
find all the files in the current directory which are bigger than 1000MB
find all the files in the current directory which end with orig
find all the files in the current directory which have been accessed in the last 1 day and move them to TMP folder .
find all the files in the current directory which have been modified after a file
find all the files in the current directory which have been modified in the last 6 days .
find all the files in the current directory which have been modified in the last 24 hours
find all the files in the current directory which have been modified in the last 30 days and display the contents .
find all the files in the current directory which have the inode number 31246 and remove them .
find all the files in the current directory which have the size 40 bytes in the current disk partition .
find all the files in the current directory which start with t and have been modified between one hour ( 60 minutes ) and 12 hours ( 720 minutes ) ago .
find all the files in the current directory whose size is equal to exactly 126MB .
find all the files in the current directory with the name &quot; wagoneer &quot; which are in the current device .
find all the files in the current folder ( handles files which contain newlines or only spaces in their names )
find all the files in the current folder and display adding quotations to each file
find all the files in the current folder and display adding quotations to each file and replace spaces with new line
find all the files in the current folder and display them in the sorted order of their name
find all the files in the current folder and display those that are not present in the list &quot; file.lst &quot;
find all the files in the current folder and search for the word &quot; vps admin &quot; in them .
find all the files in the current folder that are modified after the modification date of a file
find all the files in the current folder that end with the word bar
find all the files in the current folder that have a single letter in their name which have been modified in the last 3 days but not today
find all the files in the current folder that have been accessed in today
find all the files in the current folder that have been accessed in today from the start of the day
find all the files in the current folder that have been modified exactly 24 * 3 hours ago
find all the files in the current folder that have been modified in the last 24 * 3 hours
find all the files in the current folder that have been modified in the last 7 days
find all the files in the current folder that have not been modified in the last 24 * 3 hours
find all the files in the current folder which are bigger than 10MB and less than 50MB
find all the files in the current folder which are bigger than 1MB
find all the files in the current folder which are bigger than 9MB
find all the files in the current folder which are exactly 1234 bytes
find all the files in the current folder which are modified after / bin / sh .
find all the files in the current folder which are readable
find all the files in the current folder which are smaller than 9MB
find all the files in the current folder which are writable
find all the files in the current folder which belong to the user root .
find all the files in the current folder which do not belong to any user
find all the files in the current folder which do not have the execute permission
find all the files in the current folder which do not have the read permission
find all the files in the current folder which end with &quot; ext1 &quot; or &quot; ext2 &quot; or &quot; ext3 &quot;
find all the files in the current folder which end with .o or with the name a.out and display them .
find all the files in the current folder which have a set uid set
find all the files in the current folder which have been accessed in the last 24 hours
find all the files in the current folder which have been accessed in the last 60 minutes
find all the files in the current folder which have been changed in the last 60 minutes
find all the files in the current folder which have been modified after the file disk.log
find all the files in the current folder which have been modified for the ffiles that are at least one week old ( 7 days ) but less then 30 days old
find all the files in the current folder which have been modified in the 10 minutes ago
find all the files in the current folder which have been modified in the last 60 minutes
find all the files in the current folder which have been modified in the last 60 minutes , which are atleast 1 level deep and display a long listing of these files
find all the files in the current folder which have been modified in the last one day
find all the files in the current folder which have been modified in the last one minute
find all the files in the current folder which have executable permission to all the users and display the ten files
find all the files in the current folder which have execute permission
find all the files in the current folder which have execute permission to all the users
find all the files in the current folder which have not been modified in the last 90 days and force delete them
find all the files in the current folder which have set guid bit on and list the top 10 files .
find all the files in the current folder which have the name net or comm in them
find all the files in the current folder which have the word cache in them and do not search in the sub directories of the folder .
find all the files in the current folder which which have been modified yesterday and day before yesterday and whose name is of length 1
find all the files in the current folder whose name starts with 2 alphabets and ends with 2 digits .
find all the files in the current folder with the name &quot; test-a &quot; and move them to the folder test-10
find all the files in the current folder with the name &quot; test-a &quot; and move them to the folder test-10. execdir runs the command in the directory where the file is found .
find all the files in the directory which is pointed by $ 1 variable ending with the name held in the variable $ 2 or having the extension of value saved in the argument $ 2 .
find all the files in the entire file system excluding the folder proc , which do not belong to any user or any group
find all the files in the entire file system starting with the word top
find all the files in the entire file system that have been accessed exactly 50 days ago
find all the files in the entire file system that have been accessed in the last 60 days ago
find all the files in the entire file system that have been changed exactly 60 days and display ten files
find all the files in the entire file system that have been modified between 50 to 100 days and display ten files
find all the files in the entire file system that have been modified exactly 50 days ago
find all the files in the entire file system that have been modified exactly 7 days before which end with &quot; conf &quot;
find all the files in the entire file system that start with the word top and have 3 letters next to it .
find all the files in the entire file system that start with top
find all the files in the entire file system that were modified in the last 10 minutes
find all the files in the entire file system which belong to the group &quot; staff &quot;
find all the files in the entire file system which belong to the user &quot; roger &quot;
find all the files in the entire file system which have been modified in the last 120 hours
find all the files in the entire file system which have been modified in the last 48 hours
find all the files in the entire file system which have been modified in the last 5 days
find all the files in the entire file system whose size is between 50Mb to 100MB
find all the files in the entire file system whose size is exactly 15MB
find all the files in the entire file system whose size is greater than 20MB
find all the files in the entire filesystem which belong to the group root and display the ten files .
find all the files in the entire filesystem which belong to the user root and display the ten files .
find all the files in the file system that belong to the user www
find all the files in the file system that start with &quot; win &quot; and searched only in the mounted file systems
find all the files in the file system whcih have been modified in the last 1 day
find all the files in the file system which are bigger than 3 bytes
find all the files in the file system which belong to the groep &quot; users &quot; and with the name &quot; dateiname &quot;
find all the files in the file system which belong to the user &quot; pat &quot; and with the name &quot; dateiname &quot;
find all the files in the file system which hae set uid enabled and save them to / root / suid.txt and those which have size greater than 100MB save them to / root / big.txt
find all the files in the file system which have been accessed in the last 1 day
find all the files in the file system which have been changed 1 minute ago .
find all the files in the file system which have been changed in the last 24 hours .
find all the files in the file system which have been modified in the last 10 minutes
find all the files in the file system which have been modified in the last 30 * 24 hours
find all the files in the file system which have been modified in the last 60 minutes
find all the files in the file system which have not been modified in the last 100 * 24 hours
find all the files in the file system which have read permission to the user and display the ten files
find all the files in the file system which have sticky bit enabled to the user
find all the files in the file system which have the permission 777 and with the name &quot; dateiname &quot;
find all the files in the filesystem which do not belong to any group
find all the files in the folder &quot; / mp3-collection &quot; which are bigger than 10MB excluding those that start with the word Metallica
find all the files in the folder &quot; / u / bill &quot; which have been accessed in the last 2-6 minutes
find all the files in the folder &quot; / usr / app / etl / 01 / OTH / log / tra &quot; which have been modified in the last 240 hours excluding hidden files and those with the name &quot; / usr / app / etl / 01 / CLE / par / files _ to _ skip.par &quot;
find all the files in the folder &quot; myfiles &quot; which have been modified exactly 48 hours back .
find all the files in the folder &quot; myfiles &quot; which have not been accessed in the last 30 days
find all the files in the folder . / machbook and change the owner of them to the user with id &quot; 184 &quot;
find all the files in the folder .home / calvin which have been modified in th last 45 minutes
find all the files in the folder / home which are bigger than 10MB and smaller than 50 MB
find all the files in the folder / home which are exactly of size 10MB
find all the files in the folder / opt which have been accessed exactly 20 days ago
find all the files in the folder / opt which have been modified between 20 to 50 days ago
find all the files in the folder / opt which have been modified exactly 20 days ago
find all the files in the folder / path / to / dir which have been modified after a specific date ( Feb 07 )
find all the files in the folder / usr / bin which have been modified in the last 10 days
find all the files in the folder / work which belong to the user &quot; olivier &quot;
find all the files in the folder Musica and display them in a single line null separated
find all the files in the folder ~ / Music which begin with &quot; Automatically Add &quot;
find all the files in the home folder that are modified day before yesterday
find all the files in the home folder that have been modified between 24 to 48 hours
find all the files in the home folder that have not been modified in the last one year
find all the files in the home folder which are bigger than 2MB and zip them
find all the files in the home folder which are empty ( Size 0 bytes )
find all the files in the home folder which are less than 300Bytes
find all the files in the home folder which are less than 42 Bytes
find all the files in the home folder which end with &quot; .tex &quot;
find all the files in the home folder which have been modified after a file
find all the files in the home folder which have been modified in 1 year or more ( which are not modified in the last 1 year ) .
find all the files in the home folder which have been modified in the last 24 hours
find all the files in the home folder which have been modified in the last 30 minutes
find all the files in the home folder which have been modified in the last 7 days
find all the files in the home folder which have been modified today
find all the files in the home folder which have not been modified in the last 1 year .
find all the files in the present directory which have the group staff and check if is a symbolic link and display it .
find all the files in the root folder which have been modified in the last 24 hours and print them
find all the files older than 30 days
find all the files starting with &quot; config &quot; in the folder Symfony
find all the files starting with &quot; config &quot; in the folder Symfony ( case insensitive search )
find all the files that are modified exactly one day ago
find all the files that are modified in the last 1 day
find all the files that are modified in the last 1 day
find all the files that are modified in the last 7 days
find all the files that are not modified in the last 7 days
find all the files that have been changed exactly 24 hours ago
find all the files that have been changed today
find all the files that have been modified exactly 1 day ago
find all the files that have been modified exactly 2 days ago
find all the files that have been modified exactly 24 hours ago
find all the files that have been modified exactly yesterday ( from 00 : 00 to 23 : 59 yesterday )
find all the files that have been modified in exactly 7 * 24 hours ago
find all the files that have been modified in the last 1 day
find all the files that have been modified in the last 1 day ago
find all the files that have been modified in the last 12 hours
find all the files that have been modified in the last 2 day
find all the files that have been modified in the last 2 days
find all the files that have been modified in the last 24 hours
find all the files that have been modified in the last 4 days ( daystart is used to check files according to date i.e , all files modified from currentDay-4 00 : 00 : 00 to current day ) and copy them to folder .
find all the files that have been modified in the last 60 minutes
find all the files that have been modified in the last 7 days ,
find all the files that have been modified since the last time we checked
find all the files that have been modified today
find all the files that have been modified today
find all the files that have been modified today ( from the strart of the day )
find all the files that have not been modified in the last ( 24 * 7 ) hours .
find all the files that have not been modified in the last 2 days
find all the files that have not been modified in the last 24 hours
find all the files that have the word &quot; fstab &quot; in their name in a folder
find all the files that were modified two days ago
find all the files that were modified yesterday in the current directory .
find all the files under &apos; / usr / local &apos; directory tree which have been modified exactly 24 hours ago
find all the files which are of size 0 bytes .
find all the files which end with &quot; .deb &quot; and display their base name ( strip the extension )
find all the files which end with &quot; .deb &quot; and display their base name ( strip the extension )
find all the files which have been accessed after modifying the file / etc / hosts
find all the files which have been changed after the modification of a file .
find all the files which have been modified in the last 15 minutes excluding hidden files .
find all the files which have size 0 bytes in temp folder
find all the files which have the write permission to the group and remove the write permission .
find all the files which start with the name &quot; Metallica &quot; in the folder &quot; / mp3-collection &quot; and which are bigger than 10MB
find all the files with the name &quot; datainame &quot; in the file system which are bigger than 50MB
find all the files with the name september ( case insensitive )
find all the files with the name test in the current folder ( case insensitive )
find all the files within your home folder accessed more than 100 days ago
find all the findme.txt files in the file system
find all the fles that have .ssh in the end and redirect the output to ssh-stuff
find all the header files in / usr / include which have been modified in the last 399 days and display the number of lines , number of files , number of characters of all these files
find all the header files in / usr / include which have been modified in the last 400 days
find all the hidden files in the temp folder
find all the html files in the current folder
find all the html files in the current folder and rename them to .var files
find all the html files in the current folder which have been modified exactly 7 days ago
find all the html files in the current folder which have been modified excatly 7 days before
find all the html files in the current folder which have been modified in the last 7 days
find all the html files in the current folder which have not been modified in the last 7 days
find all the html files that are acces in the last 24 hours in the current folder
find all the html files which are modified in the last 7 days
find all the html , javascript and text files in the current folder
find all the javascript files in current folder using regular expressions
find all the jpg files in current folder and sort them
find all the jpg files in the directory / ftp / dir which are bigger than 500KB
find all the links in somedirectory and print them in a single line ( to avoid the problem of files having newline in their names )
find all the links in the current folder and following it to the pointed path
find all the links in the current folder which are broken
find all the log files in the file system
find all the log files in the file system which are present in the current partition
find all the mp3 files in the current folder and move them to another folder
find all the mp3 files in the entire file system whose size is bigger than 10MB
find all the mp3 files in the file system
find all the mp3 files in the home folder which have been modified today
find all the non compressed files in the current directory and compress them .
find all the normal files in the home directory which have been accesed in the last 30 days with the size greater than or equal to 100k .
find all the normal / regualar files in the current folder which have a size of 10KB and display a long listing details of them .
find all the normal / regular files in / etc / sysconfig which have been accesses in the last 30 minutes
find all the normal / regular files in current folder and search for a pattern
find all the normal / regular files in the current directory
find all the normal / regular files in the current directory and search for the word mail and display the file names
find all the normal / regular files in the current directory which have been modified in the last 24 hours
find all the normal / regular files in the current folder which are present in the pattern file &quot; file _ list.txt &quot;
find all the normal / regular files in the current folder which have been accessed in the last 24 hours and display a long listing of them
find all the normal / regular files in the current folder which have been modified in the last 24 hours and display a long listing of them
find all the normal / regular files in the current folder which have been modified in the last day and display a long listing of them
find all the normal / regular files in the current folder which have been modified two days ago and display a long listing of them
find all the normal / regular files in the folder &quot; pathfolder &quot; excluding all hidden files and display the count
find all the normal / regular files in the folder &quot; pathfolder &quot; which are 2 levels deep , excluding all hidden files and display the count
find all the normal / regular files in the folder main-directory
find all the ogg files in the current directory which have the word &quot; monfichier &quot; in their name
find all the patch files in current folder and copy them to separate folder patches
find all the perl files in / var / www
find all the perl files in / var / www ( case insensitive search )
find all the perl files in the current folder
find all the perl files in the current folder and search for a pattern
find all the perl files in the current folder , print0 is used to handle files with new lines in their names or only spaces
find all the php files
find all the php files in current folder and search for multiple patterns in these files
find all the php files in current folder and search for multiple patterns in these files and display the file names
find all the php files in current folder using regular expressions
find all the php files in the current folder
find all the php files in the current folder
find all the php files in the current folder ( discards any directory which has an extension of &quot; .php &quot; )
find all the php / javascript files in current folder using regular expressions
find all the png files in the current folder which are present in the pattern list search .txt
find all the png files in the current folder which begin with the word image
find all the reglar files which ahve been changed in the last 5 minutes and do not search in the sub directories .
find all the reguar / normal php files in current directory .
find all the regular files in current folder , that have been changed in the last 3 days and display last 5 files
find all the regular files in the current directory which do not have a read permission
find all the regular files in the current folder which start with a &quot; some text &quot;
find all the regular / normal files in all the directories in the / some / dir and delete them
find all the regular / normal files in the / path folder and delete them
find all the regular / normal files in the / path folder and delete them
find all the regular / normal files in the / path folder and delete them
find all the regular / normal files in the current direcoty which have not been accessed in the last 30 days .
find all the regular / normal files in the current directory and print them skip searching all the directories in the current folders .
find all the regular / normal files in the current directory which do not have the extension comment and and redirect the output to / tmp / list
find all the regular / normal files in the current folder
find all the regular / normal files in the current folder and do not search in the sub directories
find all the regular / normal files in the current folder and rename them to html files
find all the regular / normal files in the current folder which belong to the group &quot; flossblog &quot;
find all the regular / normal files in the current folder which belong to the user &quot; sedlav &quot;
find all the regular / normal files in the current folder which belong to the users with the user id &apos; s between 500 and 1000
find all the regular / normal files in the folder &quot; myfiles &quot; which have the permission 647 .
find all the regular / normal files in the folder / travelphotos which are bigger than 200KB and which do not have the word &quot; 2015 &quot; in their name
find all the shell scripts or perl files in the current directory
find all the swap files ( files ending with ~ ) in the current folder and delete them
find all the swap files ( files ending with ~ ) in the current folder and delete them
find all the symbolic links in the current folder
find all the symbolic links in the current folder and check the file type and display the output of those files which are broken
find all the symbolic links in the current folder and follow to the original file
find all the symbolic links in the current folder and follow to the pointing file
find all the symbolic links in the current folder that are broken
find all the text files in the current folder and do not search in somedir , bin directories
find all the text files in the current folder and do not search in somedir , bin directories
find all the text files in current folder and force delete them
find all the text files in current folder and move all these to another folder appending &quot; .bar &quot; at the end of these files
find all the text files in the current directory which have been modified in the last 4 days and not today and copy them to another folder
find all the text files in the current folder
find all the text files in the current folder
find all the text files in the current folder
find all the text files in the current folder and display their Permissions and size along with their name
find all the text files in the current folder and do not search in the sub directories
find all the text files in the current folder expect those which are in the path &quot; sk &quot;
find all the text files in the current folder starting with &quot; somefiles- &quot;
find all the text files in the entire filesystem which belong to the user root and display the ten files .
find all the text files in the file system and search only in the disk partition of the root .
find all the text files in the file system and search only in the disk partition of the root .
find all the text files in the folder / home / calvin and do not search beyond 2 levels
find all the text files in the folder / home / calvin which are atleast below 2 levels
find all the text files in the home directory
find all the text files in the home folder
find all the text files present in the current directory excluding the search in certain paths .
find all the text files that have modified in the last 2 days and not modified today
find all the text files which are present in the current directory excludinghidden files .
find all the undo files in the current folder and display the toal lines , words , characters
find all the video files in the home folder
find all the wav files in the current folder and do not search in the sub directories
find all the word press configuration php files in the folder / var / www
find all the word press configuration php files in the folder / var / www and do not search beyond two levels
find all the xml files in current folder and which are present in the pattern list file &quot; / tmp / a &quot;
find all the xml files in the current folder except those that are present in the workspace folder and create a tarball of these files
find all the xml files in the current folder which are present in the pattern text file
find all the zip files in the current folder
find all the zip files in the current folder and create a tar ball of these zip files
find all txt files under the current folder except . / directory folder
find all txt files under the current folder except . / misc folder
find and delete all the empty directories in the current folder and all its sub directories too
find and delete all the files in the entire file system whose size is greater than 100MB .
find and image in current folder ( case insensitive search )
find any files in the current directory that begin with a number
find any files or directories called &quot; .svn &quot; under the current directory and run a recursive delete ( without prompting ) command on each one .
find case-insentive example.com file , and whole dose not contain beta
find case-insentive example.com file , omit . / beta path
find dirctory files which modification time is 7 days ago
find directories that have been modified in the last seven days
find directories in the folder / usr / spool / uucp
find directories under the $ LOGDIR directory where there has been no modifications within the last 24 hours and compresses the files .
find directories under the $ LOGDIR directory where there have been no modifications for 5 days and deletes them .
find directory names starts with &apos; bar &apos;
find directory which case-insensitive name is foo in current directory .
find directory which name is Cookbook under / users / al
find file end with &apos; .txt &apos; in current directory .
find file named foo.txt under current directory .
find file named foo.txt under root / directory .
find file which case-insensitive name is foo in current directory .
find file which name like &apos; foo . * &apos; in current directory .
find files ( under root file system / ) that were accessed within the last 24 hours
find files changed in the last 1 day
find files ending with .jpg
find files having the extension &quot; bam &quot; in current directory
find files in $ HOME ending in &quot; txt &quot; or &quot; html &quot; and case insensitive search for the word &quot; vpn &quot;
find files in / dir / path / look / up directory that names are dir-name-here
find files in / dir / path / look / up directory that names are dir-name-here
find files in / tmp directory that named are core and deletes them
find files in / tmp directory that named are core and deletes them , single or double quotes , spaces or newlines are correctly handled
find files in / u / bill directory which are access an 2 to 6 minutes ago
find files in / usr directory which are modified after February 1 of the current year
find files in current directory that names are game
find files in current folder ending with &quot; .c &quot; or &quot; .h &quot; or &quot; .ch &quot; and search for a word in these files and enable color highlighting of the matched text
find files in home directory that accessed more than 100 days ago
find files in home directory that names are game
find files in home directory which are modified yesterday
find files in root directory that names are game
find files in the / usr / src directory with pattern &apos; * .c that larger than 100 Kilobytes
find files in the current directory and sub-directories , that changed within last hour
find files in the current directory and sub-directories , that were accessed within last hour
find files in the current directory and sub-directories , whose content was updated within the last hour
find files in the current directory having name &quot; filename &quot;
find files in the current directory with pattern &apos; &apos; * . &#91; ch &#93; &apos; which are contain &quot; thing &apos; string and print file names
find files in the current directory with pattern &apos; &apos; * . &#91; ch &#93; &apos; which are contain &quot; thing &apos; string and print file names which can contain spaces
find files in the home folder which have been modified in the last day . ( -daystart measures times from the beginning of today rather than from 24 hours ago . )
find files in the users home directory and for each one , ask the user to confirm to delete the file .
find files under the current directory called &quot; foo &quot; or &quot; bar &quot;
find files under the current directory containing a space in the filename and delete them
find files under the current directory ending in &quot; txt &quot; and list them , or ending in &quot; html &quot; but do nothing .
find files which do not have all permissions to all the users in the current directory
find files which full path name is / tmp / foo / bar under / tmp / foo directory and print
find files which full path name is / tmp / foo / bar under foo directory and print
find files which full path name like &apos; * / * config &apos; at current directory and print
find files which full path name like &apos; * f &apos; at current directory and print
find files which have all permissions to all the users in the current directory
find files which modification time is 7 days ago
find files which modification time is one day ago
find files with pattern &apos; &apos; * .h &apos; and print comparison between file and / tmp / master directory
find files with the extension .conf in the / etc directory
find foo , Foo , FOo , FOO , etc .
find foo , Foo , FOo , FOO , etc . , but only dirs
find foo , Foo , FOo , FOO , etc . , but only files
find for a filename with multiple patterns in the current folder
find for a word in all the regular files in the current directory
find for a word in all the regular files in the current directory
find for lighttpd in / var
find for the word &quot; dba _ 2pc _ pending &quot; in all the files of current fodler having the word &quot; sql &quot; in their name
find for xml files in current folder using regular expressions
find httpd.conf file in / etc directory
find in $ HOME files ending in &quot; txt &quot; and do nothing with them , or files ending in &quot; html &quot; and list them null separated .
find in the entire file system for the file mysql
find in the entire file system for the files which have sticky bit .
find in the file system for the directories with the name &quot; httpdocs &quot;
find list of all files with file permission , link , owner , group , reation time , size , file name
find md5sum of &apos; string to be hashed &apos;
find md5sum of &apos; string to be hashed &apos;
find md5sum of 401
find md5sum of an empty string
find md5sum of content from &quot; www.google.com &quot;
find md5sum of string &apos; hi &apos;
find md5sums of files named &quot; file * .txt &quot;
find non-hidden files ( ones that do not start with the period &quot; &quot; . chartacter ) that were are modified in the last 15 minutes .
find not case sensitive all directories that names are &apos; apt &apos;
find not case sensitive all directories that names are &apos; apt &apos; and display details
find not case sensitive all directories that names are &apos; project.images &apos;
find out what group a given user has
find regular file named foo.txt under root / directory .
find regular file named foo.txt under root / directory .
find regular files and directories that have been modified in the last seven days
find regular files in the &quot; mail &quot; folder under the user &apos; s home directory , displaying filenames and lines that contain the text &quot; Linux &quot;
find regular files in the current directory , without descending into sub-directories and display as a null separated list .
find regular files under the current directory and execute an md5sum command on each one
find regular files which modification time is 7 days ago
find regular which case-insensitive name is foo in current directory
find regular / normal files in the current folder
find setuid files and directories writing the details to / root / suid.txt , and find large files writing the details to / root / big.txt , traversing the filesystem just once
find suffix tcl files under all directories started with &apos; n &apos;
find symbolic links with pattern &apos; &apos; * sysdep.c &apos;
find the &quot; MyCProgram.c &quot; file ( case insensitive find ) under the current directory
find the MyCProgram.c ( case insensitive find ) under the current directory and run the md5sum command against it
find the biggest files only ( but not directories )
find the count of all the charcters of the list of regular files present in the current folder
find the count of all the regular files in a directory
find the count of text files that are present in the current working directory .
find the depth of all the files in current folder and display the depth and file name
find the file &quot; MyCProgram.c &quot; in the current folder
find the file &quot; dateiname &quot; in the current folder ( case insensitive search )
find the file &quot; dateiname &quot; in the entire file system ( case insensitive search )
find the file &quot; filename.txt &quot; in the entire file system
find the file &quot; filename.txt &quot; in the usr folder
find the file &quot; foo.txt &quot; in the current folder and assign the output to a variable
find the file &quot; httpd.log &quot; in the entire file system
find the file &quot; httpd.log &quot; in the folder / home / web-server /
find the file &quot; httpd.log &quot; in the folder / home / web-server / ( case insensitive search )
find the file &quot; myfile.txt &quot; in the folder / home / user / myusername /
find the file arrow.jpg in the entire file system
find the file with inode $ inum under the current directory and delete it
find the file with the name &quot; esxcfg-firewall &quot; in the current folder
find the file with the name &quot; file &quot; in the entire file system
find the md5 sum of all the regular files in multiple folders and display them in sorted order
find the most recently changed files under current directory
find the oldest normal file in the current directory
find the oldest normal file in the current directory
find the oldest normal file in the current directory and display its contents
find the oldest normal file in the current directory and display with its timestamp
find the path of a specfic video file in the current directory
find the regular js files which path does not contains &apos; * / test / * &apos; and name does not contains &apos; * -min- * &apos; or &apos; * console * &apos;
find the regular / normal file &quot; myfile &quot; in the folder / root
find the ten biggest files
find the top 25 files in the current directory and its subdirectories
find the type &amp; description of all the regular / normal files in the home folder
find the type of all the regular / normal files in the current folder
find the type of all the regular / normal files in the current folder
find the type of all the regular / normal files in the current folder ( plus takes bulk of files as input to the file command )
finda all the hidden files excluding those having the extension htaccess
finda ll the files in the current folder that are modified today .
finds all directories named CVS , and deletes them and their contents .
finds all files modified within a certain time frame recursively
force create hard link between $ GIT _ DIR / .. / apresentacao / apresentacao.pdf and $ GIT _ DIR / .. / capa / apresentacao.pdf
force delete all the core files in the home folder
force delete all the directories the folder &quot; test folder &quot;
force delete all the files in the current folder expect xml files
force delete all the files that have been modified in the last 3 days
force delete all the files which have not been accessed in the last 240 hours in the temp folder
force delete all the regular files with the name &quot; test.txt &quot;
force delete all the regular / normal files in the current folder
force delete all the temp files which are of size 0 bytes and which have not been accessed in the last 10 days
force remove all the c files in the current folder
force remove all the c files in the current folder , print0 is used to handle all files with new lines in their names or files with only spaces in their name
force remove all the directories with the name logs in the folder / var / www
force remove all the regular / normal files which begin with sess in the temp folder
force remove all the text files that have not been modified in the last 89 days
forcible create a symbolic link named &quot; / etc / file.conf &quot; to file &quot; / etc / configuration / file.conf &quot;
forcibly and verbosely create a symbolic link named &quot; target &quot; to file &quot; source &quot;
forcibly and verbosely create symbolic links in directory &quot; ~ / Library / LaunchAgents &quot; to all files located in / usr / local / opt / mongodb / and that have filename extension &quot; .plist &quot;
forcibly change owner to all files and directories in current directory to user www-data
forcibly create a symbolic link named &quot; linkname &quot; to file &quot; new _ destination &quot;
generates a list of all files beneath the current directory whose filename DOES NOT end in .html , so it matches files like * .txt , * .jpg , and so on .
get a PID of a process
get all files in a current directory modified in the last 7 days
get all files in a current directory modified in the last 7 days
get all the files that are exactly 30 days old
get all the files that have been modified within the last 30 days
get second-to-last comma-separated field of each line in file.txt
get the count of all the files that have been accessed in the last 30 days
get the git user access
get the root access
get the root access
get the root user access
get year-month-day from date
get year-month-day hour : minute : second from date
gives the chars in line 5 and chars 5 to 8 of line 5 , in tst.txt
grep for the last occurrence of text between two tags
grep from bottom of file
insert &quot; e &quot; when it &apos; s pressed
keep only read access to all the files in a directory .
keep only read access to all the files in a directory .
kill a number of background jobs
kill all active jobs
kill all background jobs
kill all background processes
kill all jobs
kill group leader
lines.txt contains a list of line numbers , one entry per line - output only these lines from text.txt omitting the rest of the file .
list * .bmp and * .txt files under the / home / user / Desktop directory .
list * .pdf files under the / home / user / Desktop directory .
list * .pdf , * .bmp and * .txt files under the / home / user / Desktop directory .
list PID of a group leader
list all * .java files under the src directory
list all * .txt files in the user &apos; s home directory .
list all .c or .sh regular files .
list all CSS files ( and directories ending with &quot; .css &quot; ) under the current directory
list all CSS files under the current directory
list all active jobs and its IDs
list all files
list all files in / home / bozo / projects directory tree that were modified exactly one day ago .
list all files in / home / bozo / projects directory tree that were modified within the last day
list all files in the current directory recursively
list all files under the current directory called cookies.txt
list all java file that StringBuff in context .
list all javascipts file expect files under proc folder
list all javascipts file which whole name does not contain &quot; directory &quot;
list all javascipts file which whole name does not contain excludeddir
list all javascipts file which whole name does not contain excludeddir or excludedir2 or excludedir3
list all js files under currect directory exculde the directory which path contain &quot; / path / to / search / exclude _ me &quot; or name isexclude _ me _ too _ anywhere
list all processes with its PIDs
list all regular files under the directory &quot; $ directory &quot;
list all regular files which path is not dir1 or dir2
list all regular files which path is not dir1 or dir2
list all regular files which path is not dir1 or dir2
list all running jobs
list all samba files in / var / l * directory ( / var / lib or / var / log )
list all the &quot; .ksh &quot; files in the current directory
list all the directories in the folder httpdocs
list all the drectories present in the current directory and do not search in the sub directories .
list all the files in the current directory which are of size 0 bytes .
list all the files in the file system excluding proc folder and excluding symbolic links which have write permission for the user
list all the sqlite files in the current folder
list all zero-length files under the current directory
list any files modified since / bin / sh was last modified
list complete path name to process associated with pid &quot; $ 1 &quot;
list directories owned by group ID 100 in the file system
list files found under the current directory ending in &quot; txt &quot; or ending in &quot; html &quot;
list files in / u / bill that were last read from 2 to 6 minutes ago
list files in / usr modified after February 1 of the current year
list files in / usr modified after the time which / tmp / stamp $ $ modified
list files in the directory &quot; $ directory &quot; with permissions &quot; $ permissions &quot;
list files that the user does not have permissions to read , do not try to descend into directories that cannot be read .
list files that the user does not have permissions to read , do not try to descend into directories that cannot be read .
list in long format all files from / whose filename ends in &quot; jbd &quot; , not descending into directories that are not readable while searching , and not descending into directories on other filesystems
list in long format all files from / whose filename ends in &quot; jbd &quot; , not descending into directories that are not readable while searching .
list jobs including its PIDs
list names of bind functions containing &quot; / &quot;
list regular file which file name end with &apos; * .c &apos; or &apos; * .sh &apos; in current directory
list regular file which file name end with &apos; cache &apos; &apos; xml &apos; or &apos; html &apos; in current directory
list regular file which file name is NOT end with &apos; .html &apos; in current directory in current directory
list regular files ending in .mbox
list regular files under the current directory
list regular files under the current directory ending in .mbox putting a null between each file found
list regular files under the user &apos; s home directory that are over 100KB and have not been accessed in over 30 days .
list symbolic links under the directory &quot; $ directory &quot;
list symbolic links under the directory &quot; $ directory &quot; using contents of the $ IFS variable between output of each one
list the details of all the directories in the current folder
list the files with a name ending with &apos; .mp3 &apos; or &apos; .jpg &apos; and beginning with &apos; foo &apos;
list the regular files in your home directory that were modified yesterday
list txt files older than 5 days or html files of any age , null separated
lists txt or html files older than 5 days , null separated
locate large files ( &gt; 100 MB ) in / home / for &apos; cleaning &apos;
locate large files ( &gt; 100 MB ) in / home / for &apos; cleaning &apos;
login as user postgres
login as user root
long list al the files in the current directory which have all the permissions
long list al the files in the current directory which have only read permission to the group
long list al the files in the current directory which have read permission to the group
long list all the files in the curent folder starting with &quot; Tes &quot;
long list the detials of all the shell scripts in current directory
looks for all files larger than 10 megabytes ( 10485760 bytes ) within / home
make directory &quot; / etc / cron.15sec &quot;
modify the permissions of all the folders in a directory
move all files in the current folder another folder and do not move the files in the sub folder
move all the files in the current folder to temp folder and search atleast in one subfolder
move all the files in the current folder to temp folder and search atleast in one subfolder
move all the html files from current folder to another folder and if a symbolic link is found copy the original referenced file and not the link
move files accessed more than one day ago to directory TMP
only get md5sum of a file
perform a case insensitive search
prevents curl from returning error ( 23 ) Failed writing body when grepping for foo
print all filenames of files under current dir containing &apos; foo &apos; , case-insensitive
print all files in the current directory and all subdirectories
print all files in the current directory and all subdirectories
print all files in the directories except the . / src / emacs directory
print all files in the file system excluding those ending with &quot; .c &quot;
print all readline bindings
print apparent size rather than disk usage
print bindings for &quot; p &quot; and &quot; e &quot; with no case sensitivity
print disk usage of files or folders in current directory
print readline bindings that use key code &apos; \ \ e \ \ C-k &apos;
print the line containing TERMINATE and everything after in &apos; file &apos;
print the names of all of the unstripped binaries in the / usr / local directory tree . Builtin tests avoid running file on files that are not regular files or are not executable
print top 10 largest files and directories
prints a number stored among text in $ filename
prints absolute file paths for files in current directory
prints first line of $ bigfile
prints the last non-empty line of a file
prints the last non-empty line of a file
prints the names of all files in the directory tree rooted in / usr / src whose name ends with &quot; .c &apos; and that are larger than 100 Kilobytes .
prune all the files in the current directory , only current directory ( . ) is the output
read all history lines not already read from the history file
recall the second argument from a previous command by pressing alt-shift-y
recursively change owner and group of the directory / opt / antoniod / to user and group antoniod
recursively change owner and group of the directory / vol / html and all files into it to user ec2-user and group apache
recursively change owner and group of the directory / your / directory / to / fuel / and all files into it to user and group nginx
recursively change owner and group of the directory and all files into it to user &quot; user &quot; and group &quot; www-data &quot;
recursively change owner and group of the directory and all files into it to user root and group root
recursively change owner and group of the directory and group of the directory and all files into it to user and group dev _ user
recursively change owner of the directory / Users / xxx / Library / Developer / Xcode / Templates and all files to user xxx
recursively change owner of the directory / tmp to the current user
recursively change owner of the directory / usr / lib / node _ modules / to the current user
recursively change owner of the directory / usr / local to the current user
recursively change owner of the directory / usr / local / lib to the current user
recursively change owner of the directory / usr / local / lib / node _ modules / to the current user
recursively change owner of the directory and all files into it to user nobody
recursively change owner of the directory testproject and all files into it to user ftpuser
recursively change owner of the directory ~ / .npm to the current user
recursively change user of the direct / home / test / and all files into it to user test
recursively change user of the direct public _ html and all files into it to user owner
recursively delete , without prompting , directories under / data / bin / test , that are older than 10 days and where the name starts with a number
recursively delete , without prompting , directories under / data / bin / test , that are older than 10 days and where the name starts with a number
recursively finds all files newer than a date
recursively look for files ending in either .py or .py.server
recursively look for files ending in either .py or .py.server
remote copy all text files from one location to another
remove all &quot; Foo * &quot; files under current dir
remove all core dump files from user &apos; s home directory
remove all core files in the file system
remove all core files in the file system
remove all files that &apos; s older than 30 days in &apos; / tmp &apos;
remove all subdirectories named &quot; CVS &quot; under current dir
remove all text files from the current folder
remove all text files from the current folder . Print0 is used to handle files whose names have only spaces or those files which have newlines in their names
remove all the &quot; .core &quot; files in the file system
remove all the &quot; .core &quot; files in the file system
remove all the &quot; core &quot; files in the current folder which have not been changed in the last 4 days .
remove all the DS _ Store files in the current directory
remove all the core files from / usr folder which have not been accessed in the last 7 * 24 hours
remove all the core files in the current directory
remove all the core files in the home folder
remove all the core files in the temp file after user confirmation
remove all the files in current folder which have the extension &quot; DS _ Store &quot;
remove all the files in the current folder which have not been changed in the last 30 * 24 hours
remove all the files in the current folder which have not been modified in the last 10 days
remove all the files in the current working directory which have a specifc inode number
remove all the files in the folder &quot; myfiiles &quot; which have not been accessed in the last 30 * 24 hours
remove all the files in the present directory which have space in their name .
remove all the files in the present directory which have special characters in their name and do not search in the sub directories of the current folder .
remove all the files with the name &quot; Trash &quot; in the folder / home
remove all the log files which have not been modified in the last 5 days
remove all the pdf files in the current folder and do not delete those in the sub folders
remove all the permissions for others to all the files in the current folder which have read , write , execute access to users , group and others .
remove all the regular / normal files in the temp folder and do not delete in the sub folders
remove top-level domain ( .com , .org ) from URL &apos; s in urllist.txt
removes last N lines from file.txt
rename all the text files in the current folder to html files
renames all &quot; .htm &quot; files to &quot; .html &quot; files
replace &quot; exp _ to _ find _ for _ replacement &quot; with &quot; exp _ to _ replace &quot; for all the files in the current folder
return every file that does not have bar somewhere in its full pathname
returns a list of files create time is 1 minute ago under the root directory .
returns a list of files modification newer than poop
returns the first 100 bytes in the file
run ksh shell as user apache
run ls command on * .pl files
run ls command on files found
same as above example with -exec , in this example with -OK it should ask for confirmation before executing the rm command . that is called user intractive command
search all block spacial files called backup from / usr directory downwards and print them .
search character special files called &apos; backup &apos; from / usr directory downwards and print them .
search in current directory downwards all files which were accessed exactly 7 days back
search in current directory downwards all files whose status has changed more then 7 days ago
search in root ( / ) directory downwards all files which have less than 2 links .
search in root ( / ) directory downwards all files which have exactly 2 links .
search a url in all regular / normal files in a folder .
search all files in the current folder which match the regular expression
search all jpg files in current folder
search all jpg images in current folder and rename them
search all mp3 files in the folder &quot; / home / you &quot; which have been modified yesterday ( from the start of day 00 : 00 to 23 : 59 )
search all the &quot; .sh &quot; files in the / usr folder and follow the symbolic links to their original file
search all the files in the current folder and assign them to a variable
search all the files in the current folder excluding those that are present in the folder test and using regex
search all the files in the current folder using name patterns
search all the files in the current folder using regex
search all the files in the current folder using regex excluding those that are present in the folder test
search all the files in the folder &quot; myfiles &quot; which have the word &quot; blue &quot; in their name
search all the lines that start with the word malloc in the files ending with .c or .h or .ch
search all undo files ( ending with .undo ) in the current folder and calculate the total size of them
search all undo files ( ending with .undo ) in the current folder and calculate the total size of them
search files in the file system excluding those in the paths &quot; 10 _ Recommended &quot; and &quot; / export / repo &quot;
search files in current folder using name patterns
search files in the folder / home which have been modified after / tmp / after and before / tmp / before
search for &quot; flac &quot; files in current folder using regular expressions
search for &quot; message.txt &quot; in the folder .cache / bower and display its contents
search for &quot; some _ function &quot; in all the python files in the current directory
search for &quot; specified string &quot; in all the php files in the current folder
search for * .log files starting from /
search for * .log files starting from / ( root ) and only in the current file system
search for MP3 files in the current folder and subfolders except in dir1 subfolder .
search for MP3 files in the current folder and subfolders exclude dir1 AND dir2
search for a cpp directory in current folder and display all its files
search for a file &quot; file &quot; in current folder and display all instances of this file
search for a file &quot; file &quot; in current folder and if the file is found quit !
search for a files &quot; cart1 &quot; in the folder junk which is in home folder and move the folder to ~ / junk / A .
search for a function in all python files in the current folder
search for a regular / normal file &quot; myfile &quot; in the entire file system excluding the folder in excluded _ path
search for a regular / normal file myfile in the folder &quot; / home / weedly &quot;
search for a shell script in the current folder and display the current folder path
search for a shell script in the current folder and display the current folder path but search from the sub directories
search for a word in all c files in the current folder
search for a word in all files in a directory
search for a word in all the .C files in the current directory
search for a word in all the .C files ( those having the extension &quot; c &quot; ) in current directory
search for a word in all the fies in the current folder
search for a word in all the files in the current directory
search for a word in all the files in the current directory
search for a word in all the files in the current directory
search for a word in all the files in the current directory
search for a word in all the files in the current directory ( case insensitive search )
search for a word in all the files in the current directory and display the file paths relative to the current directory
search for a word in all the files in the current directory and display the list of matched files .
search for a word in all the files in the entire filesystem and display the matched fline along with the file name
search for a word in all the files with the extension &quot; ch &quot; in the current folder
search for a word in all the normal / regular files in the current folder
search for a word in all the php files in the current folder and display the count of all matching lines .
search for a word in all the php files in the current folder and display the count of all matching lines .
search for a word in all the php files in the current folder and display the count of all matching lines .
search for a word in all the php files in the current folder and display the matching lines
search for a word in all the php files in the current folder and display the matching lines .
search for a word in all the php files in the current folder and display the matching lines . PLus at the end takes multilple files as input
search for a word in all the regular files in the current folder without traversing the sub directories .
search for a word in all the regular files in the current folder .
search for a word in all the regular / normal files in the current folder and display the filename along with the matched text
search for a word in all the regular / normal files in the entire filesystem . ( + is used to give more than one file as input to the grep command .
search for a word in all the shell scripts in the current folder and display the matched files .
search for a word in all the shell scripts in the current folder and display the matched files . ( case insensitive search in grep commad )
search for al cpp files in current folder and display distinct parent directory of these files in sorted order
search for al cpp files in current folder and display unique parent directory of these files in sorted order
search for all &quot; tif &quot; images in current folder
search for all &quot; tif &quot; images in the entire file system
search for all Scala files under the current directory that contain the string null
search for all empty directories in the folder / home
search for all files ending with &quot; .mkv &quot; in current folder
search for all mp3 files in the folder / home / you which have been accessed exactly 10 * 24 hours ago
search for all non empty regular / normal files in the current folder and empty them ie . , delete the content not the file
search for all pdf files in the folder &quot; / home / pdf &quot; which have been accessed in the last 60 * 24 hours
search for all perl files in the folder / nas / projects / mgmt / scripts / perl which have been modified yesterday
search for all regular files in the current directory which have the extension &quot; c &quot; or &quot; asm &quot;
search for all regular / normal files in current folder and display all the files which contain 16 lines
search for all regular / normal files in the current folder and display the number of lines in the file
search for all regular / normal files in the current folder and display the number of lines in the file
search for all tar.gz compress files in the current folder
search for all text files in the folder / home
search for all the &quot; .c &quot; files in the folder &quot; / home / david &quot; which have been modified in the last 10 minutes
search for all the .o files in the current directory which have permisssions 664 and print them .
search for all the c files in the current folder
search for all the directories ending with &quot; .mp3 &quot; in the file system and move them to the folder / mnt / mp3
search for all the directories in the current directory and do not search in sub directories
search for all the file sin the current folder which are bigger than 10KB and display them smallest file
search for all the files ending with &quot; fits &quot; in the folder &quot; / store / 01 &quot;
search for all the files having spaces in the current folder and save the output to the variable founddata
search for all the files in current folder and display all the file names separated by space
search for all the files in current folder which start with &quot; file2015-0 &quot; and move them to another folder
search for all the files in current folder which start with &quot; file2015-0 &quot; and move them to frst 400 fiiles to another folder
search for all the files in the current directory which belong to the user &quot; xuser1 &quot; and change the owner ship of them to &quot; user2 &quot;
search for all the files in the current directory which have been modified in the last 24 hours .
search for all the files in the current directory which have size greater than 10KB ( approx ) and less than 32KB ( approx ) .
search for all the files in the current directory which have the group staff and have write permission enabled to the user and display them .
search for all the files in the current directory which have the name a.out or core or which end with .o and delete them .
search for all the files in the current folder and sort them in the order of their depth and display the file names
search for all the files in the current folder which are bigger than 10KB and display them biggest file
search for all the files in the current folder which have spaces and force delete them
search for all the files in the current folder which start with &quot; my &quot;
search for all the files in the current folder which start with gen and end with bt2 and assign the output list to the variable var .
search for all the files in the entire file system which have either suid or sgid bit enabled and find of diff of these files with the file &quot; files.secure &quot; .
search for all the files in the folder / data / images which are modified after / tmp / foo
search for all the files in the folder / data / images which have been modified after / tmp / start and before / tmp / end
search for all the files in the folder / home which have sticky bit set and have the permissions 553
search for all the files in the folder / home / user1 which end with &quot; .bin &quot;
search for all the files in the folder / usr / bin which have not been accessed in the last 100 * 24 hours
search for all the files which have not been modified in the last 6 months ( 180 days ) in current folder and display the disk usage of them
search for all the files with the name &quot; dummy &quot; in the current folder
search for all the foo.txt files in the current folder and move them to another location
search for all the jpg files in the folder &quot; / mnt / hda1 / zdjecia / test1 / &quot; and copy these files to the folder / mnt / hda1 / test / &lt; same name as the found file &gt;
search for all the log files in the folder / apps which have not been modified in the last 60 days and which are present in the same file system as that of / apps and delete them
search for all the mp3 files in the file system and move them to the folder / mnt / mp3
search for all the mp3 files in the folder / home / you which have been accessed 24 ago
search for all the non-hidden files in the current directory and do not search in the subfolders and dispaly their name and size .
search for all the perl files in the folder / nas / projects / mgmt / scripts / perl which have been modified 8-10 days ago .
search for all the php files in the folder &quot; / home / mywebsite &quot; which have been changed in the last 30 * 24 hours
search for all the regular files in the current folder and display the contents
search for all the regular files in the folder / home which have the permission 077
search for all the regular files that have been changed in the last 48 hours and sync these to another folder
search for all the regular / normal files in the / etc folder which have been modified in the last 24 hours
search for all the regular / normal files in the current folder which start with &quot; my &quot;
search for all the regular / normal files with the name &quot; access.log &quot; in the folder / var / www which are bigger than 100MB
search for all the regular / normal mp3 files in the file system and move them to the folder / mnt / mp3
search for all the regular / normal mp3 files in the file system and move them to the folder / mnt / mp3
search for all the regular / normal mp3 files in the file system and move them to the folder / mnt / mp3
search for all the rpm files in the file system which reside in the same partition as that of the root
search for all the text files and display the long listing of these files from that directory
search for all the text files in the folder / foo and delete them
search for all xml files in current folder and display them
search for dbmsspool.sql file in the current folder
search for directories in the folder &quot; test &quot; which end have 5 digits as their name
search for directories in the folder &quot; test &quot; which end with 5 digits using regular expressions
search for files cart4 or cart5 or cart6 in the folder junk which is in home folder and delete it .
search for files having python in filename
search for files having python in filename
search for files in current folder using name patterns
search for files in current folder using regular expressions
search for files in the current folder ending with &quot; .au &quot;
search for files in the current folder using name patterns
search for files in the current folder which start with &quot; myfile &quot; ( case insensitive search )
search for files named &quot; WSFY321.c &quot; in a case-insensitive manner
search for files starting with memo and which belong to the user ann in the folder / work
search for files that are readable for everybody , have at least on write bit set but are not executable for anybody
search for files that are readable for everybody , have at least on write bit set but are not executable for anybody
search for files which are writable by both their owner and their group
search for files which are writable by both their owner and their group
search for files which are writable by either their owner or their group
search for files which are writable by either their owner or their group
search for files which are writable by either their owner or their group
search for files with the name &quot; temp &quot; in the / usr folder
search for mp3 files in the folder / mp3collection which are smaller than 5MB
search for multiple files in the current folder
search for pattern matched files in the current folder and subfolders exclude &quot; excluded path &quot;
search for perl files in the folder / users / tom
search for php files in current directory and search for a word in all these files
search for regular files in the current folder which path is not &quot; . / . * &quot; and not &quot; . / * / . * &quot;
search for regular / normal file with the name &quot; myfile &quot; in the entire file system
search for soft links in current folder and display those links which are not pointed to files in current folder
search for swap files ( .swp files ) in temp folder and remove them
search for text files in the current folder which do not have write access to others
search for text files in the current folder which do not have write access to others
search for text files in the current folder which have write access to others
search for text files in the directory &quot; / home / user1 &quot; and copy them to the directory / home / backup
search for text files in the folder / home / you which have been modified in the last 60 * 24 hours ( case insensitive search ) and display their contents
search for text files in the folders / home / hobbes / / home / calvin /
search for the directory &quot; config &quot; in the current folder
search for the directory &quot; config &quot; in the current folder and change directory to it
search for the directory &quot; mysql &quot; in the / etc folder
search for the directory &quot; mysql &quot; in the entire file system
search for the directory &quot; ora10 &quot; in the entire file system
search for the directory &quot; uploads &quot; in current folder and change the permission of the folder and all the files to 755
search for the directory starting with &quot; ora10 &quot; in the entire file system
search for the directory testdir in the folder / home
search for the directory with the name aa in the current folder
search for the file &quot; .user.log &quot; in a folder
search for the file &quot; abc &quot; in the current folder or display all the directories
search for the file &quot; file &quot; in current folder and save the output to the same file
search for the file &quot; file &quot; in the current folder excluding those in the sub directory &quot; .git &quot;
search for the file &quot; file1 &quot; in the entire file system
search for the file &quot; file _ name &quot; in the folder / path
search for the file &quot; filename &quot; in the entire file system
search for the file &quot; foo.txt &quot; in the entire file system
search for the file &quot; foobar.txt &quot; in the folder &quot; / home / mywebsite &quot;
search for the file &quot; job.history &quot; in the folder / data / Spoolln and search for multiple patterns in the file and display the count of matched lines along with the pattern
search for the file &quot; myfile &quot; in the current folder and display all errors apart from permission denied error
search for the file &quot; myletter.doc &quot; in the home folder
search for the file &quot; name _ to _ find &quot; in the home folder
search for the file &quot; process.txt &quot; in the current directory
search for the file &quot; process.txt &quot; in the current folder ( case insensitive search )
search for the file &quot; process.txt &quot; in the entire file system
search for the file &quot; process.txt &quot; in the entire file system ( case insensitive search )
search for the file centos in / usr folder ( case insenstive search )
search for the file chapter1 in the folder / work
search for the file filename in the entire file system
search for the file foo in the current folder and display a long listing of it in sorted order of modification date
search for the file foo.txt in the entire file system
search for the file in the entire file system which has the words &quot; filename &quot; in its name
search for the file job.hostory in the folder &quot; / data / Spoolln &quot;
search for the file picasso in the folder / home / calvin / ( case insensitive search )
search for the file test in the current folder
search for the file test.txt in the folders / home and / opt
search for the file test2 in the current folder
search for the file , filename.txt in the current folder
search for the file , filename.txt in the current folder ( case insensitive search )
search for the file , filename.txt in the folder / home
search for the files &quot; foo.txt &quot; in the current folder
search for the files &quot; foo.txt &quot; in the current folder and rename it to foo.xml
search for the files in the current folder which begin with the word &quot; kt &quot; followed by a digit
search for the files which contain the word start in their name excluding search in . / proc , . / sys , . / run folders
search for the files with the name &quot; temp &quot; and which have not been accessed in the last 7 * 24 hours in the / usr folder
search for the folder .dummy and remove it from the folder &quot; Test folder &quot;
search for the folder .dummy and remove it from the folder &quot; Test folder &quot;
search for the folder .dummy in the entire directory structure of &quot; test folder &quot; and remove it .
search for the host &quot; slc02oxm.us.oracle.com &quot; in all the xml files in the current folder and display the files which has the matched content
search for the ip &quot; 192.168.1.5 &quot; in all the files in / etc folder
search for the pattern &quot; tgt / etc / file1 &quot; in the files tgt / etc / file2 , tgt / etc / file3
search for the pattern in all the regular / normal files in the entire file system
search for the regular / normal file &quot; Dateiname &quot; in the entire file system
search for the regular / normal file &quot; foo.bar &quot; and force delete it
search for the regular / normal file &quot; myfile &quot; in the current folder excluding search in the paths of &quot; work &quot; and &quot; home &quot; sub directories
search for the regular / normal file &apos; myfile &apos; in the folder / root excluding those that are present in the &quot; work &quot; directory
search for the regular / normal file &apos; myfile &apos; in the folder / root excluding those that are present in the / root / work directory
search for the regulars file starting with HSTD which have been modified yesterday from day start and copy them to / path / tonew / dir
search for the word &quot; damian &quot; in all the regular / normal files in the / etc folder and display only the matched file name
search for the word &quot; foo &quot; in all the regular / normal files in the directory &quot; / path / to / dir &quot;
search for the word &quot; foo &quot; in all the regular / normal files in the directory &quot; / path / to / dir &quot;
search for the word &quot; foo &quot; in all the regular / normal files with the name &quot; file-pattern &quot; in the directory &quot; / path / to / dir &quot;
search for the word &quot; methodNameHere &quot; in all the python files in the folder &quot; / mycool / project / &quot; and display color on the matched lines in the output
search for the word &quot; mysql &quot; in all the files in the current containing the word &quot; notes &quot; in their name
search for the word &quot; mysql &quot; in all the files in the current containing the word &quot; notes &quot; in their name. print0 is used to handle files with newlines in their names or those which have only spaces in their names
search for the word &quot; nameserver &quot; in all the configuration files of the / etc folder
search for the word &quot; nameserver &quot; in all the regular / normal files in the / etc directory and display the name of the file along with the matched line
search for the word &quot; nutshell &quot; or &quot; Nutshell &quot; in all the files in the folder book
search for the word &quot; put &quot; in all the files in the current folder which have the word &quot; bills &quot; in their name and display the matched line along with the filename .
search for the word &quot; redeem reward &quot; in all the regular / normal files in the current folder
search for the word &quot; search-pattern &quot; in all the regular / normal files in the current folder and display the matched file name
search for the word &quot; slrn &quot; in all the files in the current folder
search for the word &quot; slrn &quot; in all the files in the folder $ HOME / html / andrews-corner
search for the word LOG in all the files in the folder ~ / jsmith
search for the word bananas in the all the regular / normal files in the entire file system
search for the word echo all the bash files ( files ending with .bash ) in the current folder
search for the word error in all the xml files in the current folder
search for the word foo in all the js files in the current folder
search for the word foo in all the js files in the current folder
search for the word text in all the python files in the current folder
search for version in system.info files .
search for word linux in all the regular / normal files in the folder mail .
search in all the regular / normal files of the current folder for the word &quot; word &quot; and display the matched file name
search in current directory downwards all files whose size is less then 10 bytes
search in the current directory for any file named Chapter1.txt
search in the current folder for all the directories with the name &quot; test &quot;
search in the current folder for all the regular / normal file with the name &quot; test &quot;
search in the current folder for the file &quot; myletter.doc &quot;
search in the current folder for the file with the name &quot; test &quot;
search in the current folder for the file with the name &quot; test &quot; ( case insensitive search )
search in the current folder for the files that begin with &quot; myletter &quot;
search in the home folder for all the files with the name &quot; monfichier &quot;
search normal files called &apos; banckup &apos; from / usr directory downward and print them .
search the entire file system for the file &quot; jan92.rpt &quot;
search the file &quot; myfile.txt &quot; in home folder
search the file myfile.txt in the current folder
search the pattern ^ PyErr in all the &quot; .c &quot; files in the folder Lib /
search the word &quot; MySearchStr &quot; in all the regular / normal files in the current folder and display the line number and the file name
search through only the / usr and / home directories for any file named Chapter1.txt
searches through the / usr directory for the regular file named &apos; Chapter1 * &apos;
searches through the / usr / local directory for files that end with the extension .html
searches through the root filesystem ( &quot; / &quot; ) for the file named Chapter1 , and prints the location
searches through the root filesystem ( &quot; / &quot; ) for the file named Chapter1 , and prints the location
searches through the root filesystem ( &quot; / &quot; ) for the file named Chapter1 .
searches through the root filesystem ( &quot; / &quot; ) for the file named Chapter1 .
searching for all files with the extension mp3
set MyVariable to the value of VARIABLE _ NAME
set a crontab to create or update the timestamp of &quot; washere1 &quot; in the current directory every minute .
set a crontab to create or update the timestamp of &quot; washere2 &quot; in the current directory every 30 minutes .
set variable &quot; uname _ m &quot; to machine architecture , ie. x86 _ 64
set variable r to currently running kernel release , ie . 4.4.0-81-generic
show a count of the number of filenames ending in .txt in the current directory , without descending into sub-directories
show all .cpp , .c , .h , .hpp files in the folder ~ / src
show all directories in the current folder excluding those that are present in the sub directories of media , images and backups
show all directories in the current folder excluding those that are present only in the paths . / media , . / images and . / backups
show all files in / usr / tom and display only files ending with &quot; .pl &quot; or &quot; .pm &quot;
show all files in the current directory and all subdirectories
show all files in the current directory and all subdirectories
show all regular / normal the files in the current folder whose size is bigger than 0 bytes excluding everything
show all the &quot; .acc &quot; files in the folder / home
show all the &quot; .flac &quot; files in the current folder and do not search in the sub directories
show all the directories in the current folder
show all the files in current directory
show all the files in the current folder excluding those from the directories whose name starts with &quot; git &quot;
show all the files in the current folder which has the word &quot; ITM &quot;
show all the files in the entire file system which are bigger than 1.1GB
show all the files in the entire file system which are bigger than 100MB
show all the files in the folder / etc which have been modified in the last 24 hours
show all the mp3 files in the folder / home
show all the regular files in current folder
show all the regular / normal files in the folder / home / user / demo
show the disk use of all the regular / normal files in the current folder which are bigger than 50MB
show the disk use of all the regular / normal files in the file system which are bigger than 100MB
show the list of all the files in the current folder which have been modified within the 24 hours
simulate a full login of user builder
simulate a full login of user root
sleep for 1 second
sleep for 10 seconds
sleep for 5 seconds
sleep for 500 seconds
sort and display the unique lines display the contents of all the files that have been modified in the last 91 days and not in the last 2 days
sort and display top 11 files along with the last access date for all the files in the file system ( sort based on the timestamp )
sort based on size and display top ten largest normal / regular files in the current folder
sort based on size and display top ten small normal / regular files in the current folder
sort each file in the bills directory , leaving the output in that file name with .sorted appended
sort each file in the bills directory , leaving the output in that file name with .sorted appended
split $ SOURCE _ FILE &quot; into pieces per 100 lines
split a file &quot; list.txt &quot; into pieces per 600 lines
split all files in directory &quot; / dev / shm / split / &quot; into pieces per 1000 lines
split all files in directory &quot; posns &quot; into pieces per 10000 lines
split compressed content of the directory / home into pieces per 4000 mb named as &quot; / media / DRIVENAME / BACKUPNAME.tgz.NNN &quot;
split compressed content of the file www into pieces per 1073741824 bytes named as &quot; backup.tar.NNN &quot;
split content all files file1 .. 40000 into pieces per 1445 lines named as outputprefixNNN as digital prefix
split content of the file file.txt started from second line into pieces per 4 lines named as split _ NNN
split content of the file inputfile except lines started with &quot; ^ t : &quot; into pieces per 200 lines
split content of the files * .txt beginning with 1001st line into pieces per 1000 lines
split file &quot; $ file into pieces named with 5 character suffix
split file &quot; $ { fspec } into pieces named as &quot; xyzzyNNN &quot; with numeric prefix from 1 to 6
split file &quot; your _ file &quot; into pieces per 9 lines
split file / etc / gconf / schemas / gnome-terminal.schemas into pieces per 1000000 lines
split file / usr / bin / firefox into pieces per 1000 lines
split file / usr / bin / gcc into pieces per 100000 lines
split file abc.txt into pieces per 1500000000 bytes named as &quot; abc.NNN &quot;
split file data.csv into pieces per 100 lines
split file input.txt into pieces per 1 line named output.NNNNN
split file t.txt into pieces per 30000000 lines named as &quot; t.NN &quot; with numeric suffix
split listing of the current directory into pieces per 500 lines named &quot; outputXYZNNN &quot;
split result of the command &quot; tar &#91; your params &#93; &quot; into pieces per 500 mb named as &quot; output _ prefixNNN &quot;
split the file &quot; / path / to / large / file &quot; into pieces per 50000 lines named as / path / to / output / file / prefixNNN
split the file &quot; file &quot; into pieces per 2 lines
split the file data.csv into pieces per 100 mb named as data.tsv.NNN with digital prefixes
split the file hugefile.txt into pieces per 100000 lines named as partNNN with digital prefixes
split the result of command &quot; ping -c 25 google.com &#124; tee &quot; into pieces per 100000 bytes named as &quot; / home / user / myLogFile.logNNN &quot;
ssh into &quot; hostname &quot; as user &quot; buck &quot;
ssh into &quot; hostname &quot; as user &quot; buck &quot;
ssh into &quot; ssh.myhost.net &quot; as user &quot; myusername &quot; and run command &quot; mkdir -p $ 2 &quot;
ssh into default vagrant host without running &quot; vagrant ssh &quot; by passing the configuration parameters vagrant uses for ssh
ssh into localhost on port 10022
ssh into localhost on port 4444
start 2 sleep processes in the background
start from current directory , skip the directory src / emacs and all files and directories under it , and print the names of the other files found
start from current directory , skip the directory src / emacs and print it then skip all files and directories under it , and print the names of the other files found
start from current directory , skip the directory src / emacs and print it then skip all files and directories under it , and print the names of the other files found
switch to user username
tar all files in the current folder and ask for user confirmation before creating the tar ball
tar all the regular java files to myfile.tar
this find command Substitute space with underscore in the file name replaces space in all the * .mp3 files with _
unsafed rm all file which name start with &apos; # &apos;
unzip and search for a word in all the jar files in the current folder and display the matched file name
update the permission of all the files in the folder / u / netinst to 500
update the permission of all the php files in current directory and save the output to a file
update the permissions of the directories in the folder folder _ name to 775
use find -exec with multiple commands
use find command to search for .png and .jpg files
use regex with find command
use regex with find command
use regex with find command
using exec in find command to dispaly the searched files
verbosely create intermediate directoriy tmp as required and directory boostinst
view the manual page of find
wait 2 seconds and then print &quot; hello &quot;
when using vi-insert keymap bind command &quot; \ C-v { } \ ei &quot; to key &quot; { &quot;
