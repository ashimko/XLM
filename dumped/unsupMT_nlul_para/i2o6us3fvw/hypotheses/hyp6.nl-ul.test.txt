cd dir1 dir2
mkdir / tmp / foo
mount -t linprocfs none / proc
join a
ls ' readlink somelink '
join -t , in1 in2
find / -name * .pdf
find -name " text "
mkdir -p / tmp / foo
date -ud @ 1267619929
find -type d
find . -mtime + 1
find . -perm 777 -print
cat / proc / 17709 / cmdline | xargs -0 echo
find . -perm 0777
find . -type d -daystart -mtime 0
find . -path ' * f '
ls -ld $ ( find . )
echo " 1 1 2 2 2 5 " | tr ' ' $ ' \ n ' | grep -c 2
find -mindepth 0 -maxdepth 0
echo " foo.tar.gz " | rev | cut -d " " . -f1 | rev
your / dir = $ ( mktemp -d )
mount | grep nfs
nl file
find . -name \ * .jpg -exec basename { } \ ; | uniq -u
find . -type f -name " * .java " -exec grep -l StringBuffer { } \ ;
find . -name ' * .java '
find . -name " * .java " -print0 | xargs -0 wc
find . -executable
find . -mtime + 1
find / tmp -type f -atime -1
find / -name filename
find / -iname " filename "
find . -name mmm -prune -o -type f -print
echo $ ( basename $ ( dirname $ ( dirname $ pathname ) ) )
echo " 1 1 2 2 2 5 " | tr ' ' $ ' \ n ' | grep -c 2
ping -c 1 127.0.0.1 # ping your adress once
chmod 644 img / * js / * html / *
md5sum $ ( which cc )
find . -type f -empty -delete
find . -name " * .txt " -delete
find . -type f -name " * .mp3 " -exec cp { } / tmp / MusicFiles \ ;
find . -type f -not -name " * .html "
find . -type f -name " * .bak " -exec rm -i { } \ ;
find . -name ' * .java '
find -type d -empty -exec rmdir -vp --ignore-fail-on-non-empty { } +
find . -printf " % y % p \ n "
find . -maxdepth 1 -not -name " " . -print0 | xargs --null chown -R apache : apache
find . -type f -print0 | xargs -0 ls -ltr | tail -n 1
find " $ { S } " -type f
find -name \ * .txt
find -name \ * .txt
find / empty -type f -empty -print0 | xargs -0 rm
echo -e " a \ nb \ ncccccccccccc \ nd " | paste - - |
find images -type f
chmod 644 img / * js / * html / *
ssh -L localhost : 8000 : clusternode : 22 user @ bridge
join -t , in1 in2
find / path ! -perm 777
find . -type d -empty -print0 | xargs -0 / bin / rmdir
find . -size -300M
find . -mtime -1 -type f -print0 | xargs -0 tar rvf " $ archive.tar "
find . -name \ * .ext | cat - list.txt | sort | uniq -u
abspath = $ ( readlink -e $ path )
echo " 1 1 2 2 2 5 " | tr ' ' $ ' \ n ' | grep -c 2
echo " 1 1 2 2 2 5 " | tr ' ' $ ' \ n ' | grep -c 2
find . -print | grep -i foo
md5sum $ ( which cc )
cat archive.tar | tar x
cat report.txt | grep -i error
cat / dev / urandom | tr -dc ' . ' | fold -w 100
cd $ ( dirname $ ( which ls ) )
find / usr -type f -name backup -print
find folder -type f -exec gzip -9 { } \ ; -exec mv { } .gz { } \ ;
find . \ ( ! -name . -prune \ ) -name " * .c " -print
find . -type f -print0 | xargs -0 grep -li word
find / home -name Trash -exec ls -al { } \ ;
ls -t * .log | tail - $ tailCount | xargs rm -f
ls / home / dreftymac /
find . -type f -iname * .mp3 -delete
find / tmp / foo -path / tmp / foo / bar -print
find . -print | grep -i foo
curl https : / / www.npmjs.com / install.sh | sh
cat / dev / urandom | tr -dc ' . ' | fold -w 100
find / usr -type f -name backup -print
join a
find . -type f -perm 0777 -print
find . -type f -not -name " * .html "
find . -type f -exec chmod 664 { } \ ;
find . \ ( ! -name . -prune \ ) -name " * .c " -print
find . -name ' * .java ' -mtime + 7 -print
find . -size + 1M -exec mv { } files \ +
finger | cut -d ' ' -f1 | sort -u | grep -iv login
find / -name filename.txt -print
fullpath = ' readlink -f " $ path " '
ls / home / dreftymac /
echo -e " test1 \ ntest2 \ ntest3 " | tr -d ' \ n ' | grep " test1 . * test3 "
tree -p -d
rm -fR " $ { TMP } / " ;
rename ' s / ^ fgh / jkl / ' fgh *
ssh-keygen -l -f / etc / ssh / ssh _ host _ ecdsa _ key.pub
find your / dir -prune -empty -type d
find bla -name * .so -print0 | sort -rz
find . -type f | xargs grep " text "
find . / -type l -name " * linkin park * " -exec cp { } / Users / tommye / Desktop / LP \ ;
find . -print | grep -i foo
grep " ^ core id " / proc / cpuinfo | sort -u | wc -l
grep -o . file | sort | uniq -c
find / -maxdepth 2 -name testfile.txt
ssh -M -S my-ctrl-socket -fnNT -L 50000 : localhost : 3306 jm @ sample
ssh -M -S my-ctrl-socket -fnNT -L 50000 : localhost : 3306 jm @ sample
sudo chown ' whoami ' / vol
cat / dev / urandom | tr -dc ' . ' | fold -w 100
find . -type d -name vimdir -print0 | xargs -0 chmod 755
find / tmp -type f -name ' * ' -mtime + 7 -print0 | xargs -0 rm -f
diff -r dir1 / dir2 /
find . -name * .rpm -exec chmod 755 ' { } ' \ ;
find / mnt / hda1 / zdjecia / test1 / -iname " * .jpg " -type f -exec cp { } -rv / mnt / hda1
find . -type f -print0 | xargs -0 ls -ltr | tail -n 1
find / usr -name photos
ls -d * / | xargs -iA cp file.txt A
ls -d * / | xargs -iA cp file.txt A
ls -tp | grep -v ' / $ ' | tail -n + 6 | xargs -I { } rm -- { }
chown -R root : root / var / cache / jenkins
mount / -o remount , rw
mount / -o remount , rw
find . -type d -empty -exec rmdir " { } " \ ;
find . -depth -name ' blabla * ' -type f | xargs rm -f
find / -maxdepth 3 -name " * log "
split --lines = 50000 / path / to / large / file / path / to / output / file / prefix
find . ! -user john
find . -maxdepth 1 -ctime + 1 -name file
find / home -size + 10M -size -50M
LINES = $ ( cat / some / big / file | wc -l )
find . -type f -print0 | xargs -0 rm
find / path / to / search -name ' catalina * ' -exec mv { } { } +
TMP _ FILE = " $ ( mktemp -t ) "
find ~ -type f -name test-a -exec mv { } test-10 \ ;
find . -name photoA.jpg photoB.jpg photoC.jpg
find . -name somename.txt
ls -d . / * / # # # more reliable BSD ls
chmod + x bar
df -k / tmp | tail -1 | tr -s ' ' | cut -d ' ' -f4
grep -o " _ foo _ " < ( paste -sd _ file ) | tr -d ' _ '
find ~ -type f -name test-a -exec mv { } test-10 \ ;
join -j1 -o 2.1,2.2,1.2,1.3 < ( sort test.1 ) < ( sort test.2 )
timestamp = ' date --rfc-3339 = seconds '
find / home -xdev -inum 2655341 | xargs rm
find . -name ' * .js ' | grep -v excludeddir
find . -inum NUM
find / home -maxdepth 1 -type d -mtime + 0 -exec rm -f { } \ ;
find . -group passwd
find -name ' * macs ' -print0 | xargs -0 -n 1 -P 3 bzip2
find / var / www -name * .pl
echo -n $ line | od -x
find . -type f -exec rm -fv { } \ ;
find . -exec grep -l foo { } +
touch -d ' 30 August 2013 ' * .php
find . -iname ' * .old ' -print0 | xargs -0 rm -rf
find / usr -name " * .xml "
FOLDERS = $ ( find $ PWD -type d | paste -d , -s )
FOLDERS = $ ( find $ PWD -type d | paste -d , -s )
gzip -d --stdout file.gz | bash -s -- " -n wordpress localhost "
ping google.com | xargs -L 1 -I ' { } ' date ' + % c : { } '
find . -depth -name ' blabla * ' -type f | xargs rm -f
bind -p | grep -i ' " [ pE ] " '
timestamp = $ ( find . / $ dir -type f -printf " % T @ % t \ \ n " | sort -nr -k 1,2 | head -n 1 )
find -name " * .jpg " | wc -l
find . -type d -empty -print0 | xargs -0 / bin / rmdir
find ' pwd ' -name " file.ext " -exec dirname { } \ ;
find . -path " * src / main * " -type f -iname " * \ .scala * "
find . -depth -name .svn -exec rm -fr { } \ ;
find / file / path ! -newermt " Jul 01 " -type f -print0 | xargs -0 rm
MOD _ DATE1 = $ ( date -d " $ MOD _ DATE " + % s )
read -t5 -n1 -r -p ' Press any key in the next five seconds ... ' key
find . -exec grep -l foo { } +
find . -iname ' * .old ' -print0 | xargs -0 rm -rf
find . -type d -printf " % A @ % p \ n " | sort -n | tail -n 1 | cut -d " " -f 2-
find . -type f -name " * .php " -exec chmod 644 { } \ ;
find $ SrvDir * -maxdepth 0 -type d
find . -type f -ctime -3 | tail -n 5
find / usr / local -type d | xargs echo Directories :
ls -t | head -n1
LGT _ TEMP _ FILE = " $ ( mktemp --suffix .cmd ) "
comm -23 < ( sort file1 ) < ( sort file2 )
fullpath = ' readlink -f " $ path " '
env $ ( cat .env | xargs ) rails
ping -w 1 $ c
v = $ ( whoami | tr [ : lower : ] [ : upper : ] )
mount -o remount , ro / path / to / chroot / jail / usr / bin
find . - \ ( -name " myfile [ 0-9 ] [ 0-9 ] " -o -name " myfile [ 0-9 ] " \ )
find / usr / local -type d | xargs chmod 755
chmod 600 file
md5sum * .java | sort | uniq -d -w32
touch -d ' 30 August 2013 ' * .php
find . \ ( -name " my * " -o -name " qu * " \ ) -print
find . - size + 1000k -print
find . -iregex ' . * / .git / . * ' -prune -o -type d -name ' CVS '
find . -type f -print0 | xargs -0 -e grep -nH -e MySearchStr
gzip -d --stdout file.gz | bash
ls | xargs -n 1 cp -i file.dat
echo gzip . $ ( gzip | wc -c )
find . / -iname ! -iname dirname
find / mnt / zip -name " * prefs copy " -print0 | xargs -0 -p / bin / rm
find . -not -name " * .pl " -not -name " * .sh " -not -name " * .py "
find . -inum $ inum -exec rm { } \ ;
find / -name " * .gz " -exec zcat " { } " + | grep " test "
find / directory1 / directory2 / -maxdepth 1 -type f | sort | tail -n 5 | xargs md5sum
find . -not \ ( -name .svn -prune -o -name .git -prune -o -name CVS -prune \ ) -type f -print0 | xargs -0 file -n | grep -v binary | cut -d " : " -f
find media / -type f -exec chmod 700 { } \ ;
find / var / www / -name * .pl
find . -depth -name .svn -exec rm -fr { } \ ;
find . -name " * .JUKEBOX. * .txt " -maxdepth 1 -print0 | xargs -0 -IFILE mv FILE . / JUKEBOX
echo -e " $ correctFilePathAndName " | xargs touch
directories = $ ( diff -qr directory directory.original | cut -d ' ' -f2 | xargs dirname | uniq )
match = $ ( echo " $ { line } " | egrep -o ' run-parts ( - { 1,2 } \ S + ) * \ S + ' )
echo " $ url " | cut -d ' / ' -f4-
wc -l * * / * .php
ping -c 5 google.com | grep " round-trip " | cut -f 5 -d " / "
read -e -p " Do that ? [ Y , n ] " -i Y input
find . -depth -name ' blabla * ' -type f | xargs rm -f
chgrp forge / var / run / fcgiwrap.socket
sudo chmod 755 -R / opt / lampp / htdocs
cd ' find . -name " config " '
find TBD / * -mtime + 1 -exec rm { } \ ;
find TBD / * .txt -type f -mtime + 1 -exec rm -f { } \ ;
find . -type f -print | xargs ls -ltr | tail -n + 6 | xargs rm -f
join -ba -nln active _ record.rb | grep -C 2 ' ^ 111 '
find . -type f \ ( -name " * .c " -o -name " * .sh " \ )
find / -type f -name * .mp3 -size + 10M -exec rm { } \ ;
find ~ -type f -name " * .txt " -delete
join < ( sort aa ) < ( sort bb )
join standard input | sort -k1,2 -t ' ; ' --stable some _ data
find -iname ' * .java ' | xargs grep ' class Pool '
find / home / kibab -name ' * .png ' -exec echo ' { } ' ' ; '
find . \ ( -newermt " 2013-06-01 " \ )
ls | xargs -n 1 cp -i file.dat
ls -1 | grep -v -e ddl -e docs | xargs rm -rf
rev file.txt | cut -d ' ' -f1 | rev
find / -name " * .mp3 " -exec mv { } " / Users / sir / Music / / iTunes / iTunes Media / Automatically Add to iTune
ssh-keygen -l -f / etc / ssh / ssh _ host _ ecdsa _ key.pub
find . / -iname ! -iname dirname
find / store / 01 -name " * .fits " -exec chmod -x + r { } \ ; \
SELF = ' readlink / proc / $ $ / fd / 255 '
SELF = ' readlink / proc / $ $ / fd / 255 '
find teste1 teste2 -type f -exec md5 -r { } \ ; | sort
find . -name ' * .cgi ' -print0 | xargs -0 chmod 775
find . -name ' * bills * ' -exec grep -H " put " { } \ ;
find -O3 " $ save _ path " -depth -mindepth 1 -name ' sess _ * ' -ignore _ readdir _ race -type f -cmin " + $ gc _ maxlifetime " -delete
find -name ' * .png ' | grep -f ' _ htm '
echo ' date + " % a % x % X " ' ' hostname '
echo largest | sudo tee -a / tmp / sarnold / default / files
returns / \ ( -exec grep -Hn ' $ ( uname -r ) { 3 }
grep -r -H " text string to search " directory-path
find -L . -type f \ ( -perm -u = x -o -perm -g = x -o -perm -o = x \ )
tac a | grep -m1 -oP ' ( ? < = tag > ) . * ( ? = < / tag > ) '
find / -type f -name * .mp3 -size + 10M -exec rm { } \ ;
find / media / New \ Volume / bhajans -maxdepth 1 -type d | xargs -0 mkdir -p
find -name " * .txt " -print0 | xargs -0 rm
find / -user root -name tecmint.txt
ls -ldt $ ( find . )
echo largest | sudo tee -a / tmp / sarnold / default / files
chown -R : daemon / tmp / php _ session
df $ path _ in _ question | grep " $ path _ in _ question $ "
ps | egrep 11383 | tr -s ' ' | cut -d ' ' -f 4
( GNU specific ) Set variable = $ ( cat -n / dev / stdin )
mv -T www _ new www
find . -type f -print | xargs grep -il ' ^ Subject : . * unique subject '
dig -x 72.51.34.34
find . -type f -name " * .pl " -print0
find . -name ' * .cgi ' -print0 | xargs -0 chmod 755
find | rename ' s / \ .jpg $ / .jpeg / '
find ! -path " dir1 " ! -path " dir2 " -name " * foo * "
ls -l $ SEARCH _ PATH
long = $ ( find . -name ' * .txt ' -o -name ' * .json ' -o -name ' * .js ' )
PS4 = ' + $ ( date " + % s . % N " ) \ 011 '
echo -e " length ( FOO _ NO _ EXTERNAL _ SPACE ) = = $ ( echo -ne " $ { FOO _ NO _ EXT
find / full / path -name " * .txt " -exec rm -f { } \ ;
find . -name vmware- * .log | xargs rm
rsync --specified / dir / -a --sparse --exclude = / my / dir .
chgrp -R shared _ group / git / our _ repos
find . -name " * _ test.rb " | xargs -P 4 rename s / _ test / _ spec /
END _ ABS = ' pwd -P '
find . -name " * .txt " -exec ls -la { } +
find / -name * .mp3 -fprint nameoffiletoprintto
find -name file1 | wc -l
find . -mindepth 1 -type d -print0 | xargs -0 chmod -R 700
sort < ( sort -u file1.txt ) file2.txt file2.txt | uniq -u
chmod 755 / folder -R / your / svn / path / to / your / file
joblist = $ ( jobs -l | tr " \ n " " ^ " )
find / \ ! \ ( -newer ttt -user wnj \ ) -print
find . -type f -name " postgis-2.0.0 "
find . -name RAID -prune -o -print
ln -s -- . / local--pdf-kundendienst -pdf-kundendienst
find . -name " * .swp " -exec rm -rf { } \ ;
target _ PWD = $ ( readlink -f . )
find / usr / local -name " * .html " -type f -exec chmod 644 { } \ ;
grep -v ' kpt # ' data.txt | nl -nln
grep " $ ( cat file1.txt ) " file2.txt
grep -f file2 file1 | sort -u
cd ' find . -name Subscription.java | xargs dirname '
find . ( -name ' * .bak ' -o -name * .backup ) -type f -atime + 30 -exec rm ' { } ' ;
find . -type f -name " * .php " -exec grep --with-filename -c " ^ use " { } \ ; | sort -t " : " -k 2 -n -r
find -type f -maxdepth 1 -writable
which -a rename | xargs readlink -f | xargs file
cp -R " $ 1 " " $ 2 "
cp -rf * / tmp / package
mount | grep -q ~ / mnt / sdc1
find / usr / local / svn / repos / -maxdepth 1 -mindepth 1 -type d -exec echo / usr / local / backup { } \ ;
find . / -type f -name " * .ext " -printf " % p : % h \ n "
find / store / 01 -name " * .fits " -exec chmod -x + r { } \ ; \
cd $ ( dirname $ ( dirname $ ( which perl ) ) ) / lib
find foo -type f ! -name ' * Music * ' -exec cp { } bar \ ;
find . -name " * .txt " -exec ls -la { } +
find / home -xdev -samefile file1 | xargs ls -l
find . -type f -name ' * .php ' -exec chmod 644 { } \ ;
gzip -d --stdout file.gz | bash -s -- " -n wordpress localhost "
read -r -p " Are you sure ? [ y / N ] " response
find / full / path -name " * .txt " -exec rm -f { } \ ;
find . -maxdepth 1 -name " name1 " -o -name " name2 "
find . -exec grep -l foo { } +
mv -T www _ new www
find . -name " * _ test.rb " | xargs -P 4 rename s / _ test / _ spec /
find . -type f -iname " * .txt " -print | xargs grep " needle "
find . -name bin -prune -o -name src -prune -o -type f -print | xargs egrep -il ' ^ From : . * unique sender '
find root -type -f -cmin + 30 -delete
find ! -path " dir1 " ! -path " dir2 " -name " * foo * "
find / etc / -iname " * " -type f -print0 | xargs -0 grep -H " nameserver "
find -name ' * .ogg ' -exec mv ' { } ' ' { } .mbox ' ' ; ' -exec mkdir ' { } .mbox / Messages ' ' ; ' -exec sh -c ' mv { } .mbox / * .emlx { }
find . -mindepth 1 -type d -print0 | xargs -0 chmod -R 700
finger | cut --complement -c36-40
env | grep ' ^ \ ( GOBIN \ | PATH = \ ) '
find ~ / junk -name ' cart1 ' -exec mv { } ~ / junk / A \ ;
find . / -iname ! -iname dirname
chown -R root : root / var / lib / jenkins
sudo find / path / to / someDirectory -type d -print0 | xargs -0 sudo chmod 644
cat $ i | xargs mv -t dir . $ count
touch $ ' Icon \ r '
cd ' find . -name Subscription.java | xargs dirname '
find . -type f -exec grep California { } \ ; -print
END _ ABS = ' pwd -P '
find . -name modules
find / tmp / -depth -name " * * " -execdir rename ' s / / _ / g ' " { } " \ ;
gzip year.gz | tar xvf -
find . -cmin -60
mount / path / to / device / path / to / mount / location -o loop
dig + short myip.opendns.com @ resolver1.opendns.com
find . -not -name " * .pl " -not -name " * .sh " -not -name " * .py "
find . -name " * .png " -prune -o -name " * .gif " -prune -o -name " * .svn " -prune -o -print0 | xargs -0 -I FILES grep -IR " foo = " FILES
grep -r " string here " * | tee > ( wc -l )
od file-with-nulls | grep ' 000 '
chown -R : daemon / tmp / php _ session
sudo chown ' whoami ' / vol
diff -y / tmp / test1 / tmp / test2
find . -name * .jpg -exec ls { } \ ;
find / path / to / look / in / -type d | grep .texturedata
find / Path -name " file _ name * "
chgrp pub public
cd 1000 | tr ' \ n ' ' \ 0 '
cd ' find . -name Subscription.java | xargs dirname '
du -h --max-depth = 0 * | sort -hr
find / home / mine -iname " * .png " -execdir cp { } / home / mine / pngcoppies / copy { } \ ;
sort -m < ( zcat $ part0 | sort ) < ( zcat $ part1 | sort ) ...
read -r -p " $ ( echo $ @ ) ? [ y / N ] " YESNO
find / mnt / zip -name " * prefs copy " -print0 | xargs -0 -p / bin / rm
find . / -iname ! -iname dirname
grep ' ^ core id ' / proc / cpuinfo | sort -u | wc -l
grep -v ' ^ $ ' | paste -s -d " " , -
grep -r " string here " * | tee > ( wc -l )
split -l $ { 2 : -10000 } -d -a 6 " $ 1 " " $ { tdir } / x "
script2 = ' mktemp / tmp / .script.XXXXXX ' ;
md5sum * .java | sort | uniq -d -w32
chown -R owner : owner public _ html
mv new old -b -S .old
END _ ABS = ' pwd -P '
find / foo / bar -name ' * .mp4 ' -print0 | xargs -0 mv -t / some / path { }
FOLDERS = $ ( find $ PWD -type d | paste -d , -s )
ls ' which g + + ' -al
LOGNAME = " ' basename " $ 0 " ' _ ' date " + % Y % m % d _ % H % M " ' "
comm < ( sort f1.txt ) < ( sort f2.txt )
sort -m < ( zcat $ part0 | sort ) < ( zcat $ part1 | sort ) ...
sort -m < ( zcat $ part0 | sort ) < ( zcat $ part1 | sort ) ...
find / path / to / look / in / -type d | grep .texturedata
find . | grep -v xml | xargs rm -rf { }
split -b 1M -d file.txt file --additional-suffix = .txt
chown $ FUID : $ FGID " $ FILE2 "
chown $ JBOSS _ USER $ JBOSS _ CONSOLE _ LOG
cp $ ( ls -1tr * | tail -1 ) / tmp /
( GNU specific ) Display info | grep ' ( ? = Bcasswd ) '
find / nginx / -iname " * .mp3 "
find / usr \ ( -name doc -and -type d \ )
find . -exec $ 0 { } +
founddata = ' find . -name " filename including space " -print0 '
wc -l ' find . -type f \ ( -name " * .cpp " -o -name " * .c " -o -name " * .h " \ ) -print '
echo " $ ( hostname ) : $ ( cat / sys / block / sda / size ) "
find . | grep -v xml | xargs rm -rf { }
od -t x1 -t a / dev / ttySomething
mv * / tmp / blah /
cal -h | cut -c 4-17 | tail -n + 3
cd ' find . -name Subscription.java | xargs dirname '
find / usr / ports / -name work -type d -print -exec rm -rf { } \ ;
find ' pwd ' -name " accepted _ hits.bam " | xargs -i echo somecommand { }
find / usr / local -name " * .html " -type f -exec chmod 644 { } \ ;
grep -rnw ' pwd ' -e " pattern "
shopt -s expand _ aliases extglob xpg _ echo
rsync -av --exclude ' * .svn ' user @ server : / my / dir .
find . -type f -name " * html " | xargs tar cvf htmlfiles.tar -
finalName = $ ( basename -- " $ ( dirname -- " $ path " ) " )
find / foo / bar -name ' * .mp4 ' -print0 | xargs -0 mv -t / some / path { }
echo " The script you are running has basename ' basename $ 0 ' , dirname ' dirname $ 0 ' "
mount -o rw , remount -t rootfs /
rsync -av / home / user1 / wobgalaxy02 : / home / user1 /
find $ 1 \ ( -name " * $ 2 " -o -name " . * $ 2 " \ ) -print
find $ 1 \ ( -name " * $ 2 " -o -name " . * $ 2 " \ ) -print
mytemp = " $ ( mktemp -t " $ { PROG } " ) "
echo " The script you are running has basename ' basename $ 0 ' , dirname ' dirname $ 0 ' "
echo " The script you are running has basename ' basename $ 0 ' , dirname ' dirname $ 0 ' "
ssh-keygen -b 2048 -t rsa -f key -C michael
SELF = $ ( readlink / proc / $ $ / fd / 255 )
sudo find / var / www / vhosts / * / morelogs / * -type f -or -path ' . / vendor / * '
END _ ABS = ' pwd -P '
find . -iname ' * .pdf ' -exec rm { } +
OUTPUT = ' top -b -n 1 | tail -n + 8 | head -n 1 '
find . -name " 123 * " -exec mv { } " " { } " " { } " .jpg \ ;
find . -maxdepth 1 -type f -print0 | xargs rm -f
grep Subject : \ [ SPAM \ ] ' | xargs -I ' { } ' mv ' { } ' DIR
ping -c 4 -q google.comz
shopt -u dotglob extglob
cat files | sort -t- -k2,2 -n
cd ' find ~ / Library / -iname ' * .mp3 '
find / var / tmp / stuff -mtime + 90 -exec / bin / rm { } \ ;
find $ 1 \ ( -name " * $ 2 " -o -name " . * $ 2 " \ ) -print
find $ 1 \ ( -name " * $ 2 " -o -name " . * $ 2 " \ ) -print
OUTPUT = ' top -b -n 1 | tail -n + 8 | head -n 1 '
env | grep ' ^ \ ( GOBIN \ | PATH = \ ) '
ssh-keygen -Hf ~ / .ssh / known _ hosts
find . -name " * .java " -exec grep -Hin TODO { } + | basename ' cut -d " : " -f 1 '
find . -maxdepth 1 -type d -print | xargs -I " ^ " echo Directory : " ^ "
find / -type d -name " project.images " -ls
find / var / www / some / subset -type f -perm + 120 -print
find / home / user1 / data1 / 2012 / mainDir -name ' * .gz ' | wc -l
ping -c 1 -t 1 192.168.1.1
grep --include = \ * . { c , h } -rnw ' / path / to / somewhere / ' -e " pattern "
tar --one-file-system -czv / home | split -b 4000m - / media / DRIVENAME / BACKUPNAME.tgz
find / -type f -printf " \ n % Ab % p " | head -n 11
find . \ ( -iname " * .png " -o -iname " * .jpg " \ ) -print -exec tar -rf images.tar { } \ ;
IP = $ ( dig + short myip.opendns.com @ resolver1.opendns.com )
echo " deb http : / / ppa.launchpad.net / webupd8team / java / ubuntu precise main " | tee -a / etc / apt / sources.list
grep -v ' ^ 2 ' file | cut -d ' ' -f2- | nl -w1 -s ' '
ssh -N -L 2222 : remote.example.com : 22 bridge.example.com &
find . -name " * .js " -print0 | xargs -0 grep " searchName "
finger | cut -d ' ' -f1 | sort -u | grep -iv login
zcat -r / some / dir / here | grep " blah "
tac a.csv | sort -u -t , -r -k1,1 | tac
find . -type f -exec grep " applicationX " { } \ ;
find -iname ' * .java ' | xargs grep ' class Pool '
echo " 1 \ n2 \ n3 \ n4 \ n5 " | paste -s -d , / dev / stdin
find . -name " * js " -o -name " * rb "
od -cvAnone -w1 | sort -b | uniq -c | sort -rn | head -n 20
grep ERROR $ ( find . -type f -name ' btree * .c ' )
find . -name " * .c " -print0 | xargs -0 -n1 -I ' { } ' mv ' { } ' temp
find . -name " * .c " -print0 | xargs -0 -n1 -I ' { } ' mv ' { } ' temp
find $ { x } -type d -exec chmod ug = rwx , o = ' { } ' \ ;
find -iname ' * .java ' | xargs grep ' class Pool '
find . -type f -regextype posix-extended -regex ' . * / . { 1,24 } $ '
find $ PWD -type d
NET _ IP = ' ifconfig $ { NET _ IF } | grep -Eo ' inet ( addr : ) ? ( [ 0-9 ] * \ . ) { 3 } [ 0-9 ] * ' | grep -Eo ' ( [ 0-9 ] * \ . ) { 3 } [ 0-9 ] * ' | grep -v ' 127.0.
echo $ ( basename / foo / bar / stuff )
chown -R : daemon / tmp / php _ session
find / data / SpoolIn -name job.history
ssh -t somehost ~ / bashplay / f
grep " ^ core id " / proc / cpuinfo | sort -u | wc -l
touch -m 201111301200.00 $ log _ dir / last.check
cat / proc / 1 / sched | head -n 1
END _ ABS = ' pwd -P '
find . -name " * shp * " -exec mv { } .. / shp _ all / \ ;
chmod g + w $ ( ls -1a | grep -v ' ^ .. $ ' )
cd ' find . -maxdepth 1 -type d | grep 1670 '
find . / dir1 -type f -exec basename { } \ ;
founddata = ' find . -name " filename including space " -print0 '
mytemp = " $ ( mktemp -t " $ { PROG } " ) "
ln -s " $ { TARGET } $ { file } " " $ { DESTINATION } $ { file } "
NET _ IP = ' ifconfig $ { NET _ IF } | grep -Eo ' inet ( addr : ) ? ( [ 0-9 ] * \ . ) { 3 } [ 0-9 ] * ' | grep -Eo ' ( [ 0-9 ] * \ . ) { 3 } [ 0-9 ] * ' | grep -v ' 127.0
mount / var / lib / mnt / sdc1 / usr / lib / modules / ' inside / xvdf1 / pdf1 / level
find . / dir1 -type f -exec basename { } \ ;
REL _ DIR = " $ ( ssh -t localhost " $ heredoc " ) "
grep ' ^ core id ' / proc / cpuinfo | sort -u | wc -l
find . -type f -name " * .mp3 " -exec rm -f { } \ ;
find root _ dir -type d -exec chmod 555 { } \ ; -exec chmod 700 { } \ ;
mkdir -p { 1 .. / { lib , } , bin , src , doc / { html , info , pdf } , demo / stat / a }
du -sb / data / sflow _ log | cut -f1
END _ ABS = ' pwd -P '
PATH = $ ( echo $ PATH | tr " : " " \ n " | grep -v $ 1 | tr " \ n " " : " )
dig -x 72.51.34.34
ifconfig en0 | grep -Eo .. \ ( \ : .. \ ) { 5 }
sort -t $ ' \ t ' -k6V -k7n file
rsync -avR somedir / . / foo / bar / baz.c remote : / tmp /
cd ' find . -name " config " '
find . / dir1 -type f -exec basename { } \ ;
find . -type f -exec rm -fv { } \ ;
grep -v ' ^ 2 ' file | cut -d ' ' -f2- | nl -w1 -s ' '
sort -o $ file $ file | uniq -u | sort -nr
ARGS = " --ignore ' echo $ { TO _ IGNORE [ @ ] } | tr ' ' ' , " "
echo this dir : ' dirname $ BASH _ SOURCE '
echo $ modules | column -t | fold | column -t
find . -iregex ' . * \ ( EA \ | FS \ ) _ . * '
ls -alFt ' find . -name " bla.txt " ' | rev | cut -d " " -f1 | rev | head -1
chown -R $ JBOSS _ AS _ USER : $ JBOSS _ AS _ USER $ JBOSS _ AS _ DIR /
chown -R $ JBOSS _ AS _ USER : $ JBOSS _ AS _ USER $ JBOSS _ AS _ DIR
find . -type f -name " * .java " -exec grep -il ' foo ' { } \ ;
find . -iregex ' . * \ ( EA \ | FS \ ) _ . * '
dig -x 72.51.34.34
sudo chown ' whoami ' / vol
find / mp3-collection -size + 10000k ! -name " Metallica * "
info bash ' Basic Shell Features ' ' Shell Expansions ' ' Filename Expansion ' ' Pattern Matching '
find . / -newermt 2014-08-25 ! -newermt 2014-08-26 -print
find . | grep -qi / path / to / something [ ^ / ] * $
dig -cvAnone -w1 | sort -b | uniq -c | sort -rn | head -n 20
cp / file / that / exists / location / for / new / file
mount ~ / .andod -t x1 / dev / stl12 / tmp / outside
crontab -l -u user | cat - filename | crontab -u user -
find . -type d -path ' * / \ . * ' -prune -o -not -name ' . * ' -type f -name ' * some text * ' -print
find . -type f -name " * .mp3 " -exec cp { } / tmp / MusicFiles \ ;
echo -e " Icon \ \ r " | xargs touch
find . / -maxdepth 1 -name " some-dir " -type d -print0 | xargs -0r mv -t x /
cat Little _ Commas.TXT
mv $ 1 ' echo $ 1 | tr ' [ : upper : ] ' ' [ : lower : ] "
find $ LOCATION -name $ REQUIRED _ FILES -type f -mmin + 360 -delete
echo -e " Icon \ \ r " | xargs touch
grep -r " string here " * | tee > ( wc -l )
split -l 20 $ FILENAME xyz
bzip2 -dc $ { temp } | grep -P " blah "
ping -c 5 google.com | grep " round-trip " | cut -f 5 -d " / "
mount -o rw , remount -t rfs / dev / stl12 / system
grep -o . filename | tr ' [ : upper : ] ' ' [ : lower : ] ' | sort | uniq -c | sort -nr
node = $ ( echo $ ( readlink -f " $ 1 " ) "
ping -c 1 127.0.0.1 # ping your adress once
cat results2.txt | xargs -I { } ln -s { } ~ / newlinks
touch -m 201111301200.00 $ log _ dir / last.check
gzip -dc / usr / src / redhat / SOURCES / source-one.tar.gz | tar -xvvf -
rsync -av remote _ host : ' $ ( find logs -type f -ctime -1 ) ' local _ dir
chown -v root : root / path / to / yourapp
find . -type d -path ' * / \ . * ' -prune -o -not -name ' . * ' -type f -name ' * some text * ' -print
tFile = $ ( mktemp --tmpdir = / dev / shm )
read -p " ' echo -e ' Please Enter a Message : \ n \ b " " message
split --lines = 50000 / path / to / large / file / path / to / output / file / prefix
find . -maxdepth 1 -ctime + 1 -name file -exec mv { } / some / new / \ ;
egrep -R " word-1 | word-2 " directory-path
cp --remove-destination $ ( readlink $ f ) $ f
mv $ ( find $ ( find . -name " * shp * " -printf " % h \ n " | uniq ) -type f ) .. / shp _ all /
finger | cut -d ' ' -f1 | sort -u | grep -iv login
gzip -dc / usr / src / redhat / SOURCES / source-one.tar.gz | tar -xvvf -
rm -f / var / log / syslog | xargs -n 1 cp file.tar
cat results2.txt | xargs -I { } ln -s { } ~ / newlinks
find . -name * .cpp -o -name * .h -o -name * .java
echo " < ( yes % | head -n1 ) < ( echo " $ a " | sort -u | tr -d ' \ n ' ) "
find . -maxdepth 1 -type d -iname " * linkin park * " -exec cp -r { } / Users / tommye / Desktop / LP \ ;
IP = $ ( dig + short myip.opendns.com @ resolver1.opendns.com )
chown $ JBOSS _ USER $ JBOSS _ CONSOLE _ LOG
tar -czf / usr / local / games / iTunesArtwork denied / --parents / --p4-08-0.18 / Users / Music / -N / dev / null character / misk / user / 2014-06-01
finger | cut -d ' ' -f1 | sort -u | grep -iv login
echo " * * * * * script " | crontab -
rsync -rvv --recursive / path / to / data / myappdata user @ host : / remote / path / to / data / newdirname
find project -name ' * .php ' -type f -print0 | xargs -0 grep -l ireg
mytemp = " $ ( mktemp -t " $ { PROG } " ) "
rsync -rvv --progress sourcefolder / destinationfolder --exclude thefoldertoexclude
finger | cut -d ' ' -f1 | sort -u | grep -iv login
crontab -l -u user | cat - filename | crontab -u user -
inode = ' ls -i . / script.sh | cut -d " " -f1 '
big _ lines = ' cat foo.txt | grep -c " $ expression " '
ln -s " $ ACTUAL _ DIR " " $ SYMLINK "
grep -o ' ^ \ S \ + ' < ( comm file1 file2 )
crontab -l -u user | cat - filename | crontab -u user -
cd ' / cygdrive / c / Program Files ( x86 ) / $ dollarsign '
echo " a b c d e " | tr ' ' ' \ n ' | tail -1
rsync -av --exclude ' * .svn ' user @ server : / my / dir .
md5 = ' md5sum $ { my _ iso _ file } | cut -b-32 '
find / my / source / directory -ctime -2 -type f -printf " % P \ n " | xargs -IFILE rsync -avR / my / . / source / directory / FILE / my / dest / directory /
( cat < ( echo " $ { line } " | egrep -o ' run-parts ( - { 1,2 } \ S + ) * \ S + ' )
rsync -rvv --recursive / path / to / data / myappdata user @ host : / remote / path / to / data / newdirname
find . -name " * .groovy " -not -path " . / target / * " -print
cat $ { SPOOL _ FILE } | tee -a $ { LOG _ FILE }
tar cz my _ large _ file _ 1 my _ large _ file _ 2 | split -b 1024MiB - myfiles _ split.tgz _
ls -d -1 $ PWD / * * / * / * | nl
grep -o " _ foo _ " < ( paste -sd _ file ) | tr -d ' _ '
echo " 123 123 123 " | grep -o 123 | wc -l
basename " Subscript.sh "
mv " * / tmp / blah / oops / something /
cd " ~ / .ssh / gitkey " ~ / .ssh / apache-rsync "
ifconfig | grep " inet addr : " | grep -v " 127.0.0.1 " | grep -Eo ' [ 0-9 ] { 1,3 } \ . [ 0-9 ] { 1,3 } \ . [ 0-9 ] { 1,3 } \ . [ 0-9 ] { 1,3 } ' | head -1
shopt -s globstar nullglob dotglob
cd ' / cygdrive / c / Program Files ( x86 ) / $ dollarsign '
du -hsx * | sort -rh | head -10
find \ ( -name ' messages . * ' ! -path " * / .svn / * " \ ) -exec grep -Iw uint { } +
cd ' / cygdrive / c / Program Files ( x86 ) / $ dollarsign '
find / -type f -name ' project.images ' -exec grep -H ' # include ' { } ' / include / ' \ ;
cp / 86 / config- ' uname -r ' / iTunesArtwork
find " $ { searchpath } " -type f -print0 | xargs -0 grep -l -E " $ { string1 } " . * " $ { string2 } " . * " $ { string3 } "
rsync -chavzP --stats / path / to / copy user @ host.remoted.from : / path / to / local / storage
Attempt = $ ( mktemp -u -t x1 -XXXXXX )
echo " deb http : / / ppa.launchpad.net / webupd8team / java / ubuntu precise main " | tee -a / etc / apt / sources.list
FOLDERS = ' ls -dm $ MY _ DIRECTORY / * / | tr -d ' "
ln -r -s " $ orig _ dest " " $ dest _ dir / $ orig _ name "
rsync -avzru --delete-excluded server : / media / 10001 / music / / media / Incoming / music /
totalLineCnt = $ ( cat " $ file " | grep " $ filter " | grep -v " $ nfilter " | wc -l | grep -o ' ^ [ 0-9 ] \ + ' ) ;
