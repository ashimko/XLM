find all the php files in the current folder
change the ownership of all regular / normal files in the current directory
Search the current directory tree for files modified less than 5 days ago
Print file type information of the " java " executable
Find root ' s files owned by root
Find files / directories that readable under ' / home ' directory tree
Make directory " mywebsite "
Copy all files from the current directory tree to / tmp / package , preserving directory hierarchy
find files ending with .jpg
Find files larger than 100MB in / var / www and exclude files with / download / in their path from the
Print ' whoami ' for all files under current directory
find all text files in the current directory
Find all files / directories under $ something directory
Find all links pointing to / path / to / foo.txt
find for a filename with multiple patterns in the current folder
Find all files / directories under current directory tree
Find all files / directories named ' local ' under current directory tree
find all the file links in the current folder
Find all regular files starting from / that have been modified in the last 24 hours
Write ' " myname = " Test " ' to the console and append to " $ CONFI
Read the history file and append the contents to the history list
Set permissions for directories under " / opt / lampp / htdocs " to 755
list all the .c files under the current directory
Replace spaces in directory names with underscores for all directories in the current directory tree
Find all * .txt files / directories under asia and emea directory
Find all * .gz files under / home / foo
get the count of all the files that have been accessed in the last 30 days
Compress " hello world " and save to variable " hey "
Find all files matching the pattern " $ { pattern } " in their name and execute $ { my _ command } for each of them with
Find all target files outside the current working directory with symbolic links in the current working directory
download contents from " https : / / www.npmjs.com / in
Add group write permission to all files matching " * " or " ... * "
Find all files / directories under current directory
Find all * .java files under current directory
Find all files / directories named ' articles.jpg ' under ' images ' directory tree
Print the current directory
run ls command on * .pl files
Find all the files whose permissions are 777
Set permissions to ug = rwx , o = for directories inside the . / default / files tree
Set permissions to ug = rwx , o = for directories inside the . / default / files tree
Delete all directories in the / myDir directory tree
find all the files that have been modified today
Find all directories named " D " in the current directory tree
Find all ... files under current directory and print them twice in each line
Replace the " openssl " command executable with a symbolic link to " / usr / local / ssl /
Find the passwd file under root and two levels down
Copy * .bar files to / tmp / foo / bar / in their full names
Represent current date in RFC 3339 format with precision to seconds and save
Update timestamps of all files and directories under current directory .
Show the list of files larger than 100 MB
Delete all dir * files under $ dir directory
Verbosely compresses all files on fourth and fifth depth level keeping origin
find all regular / normal files which have cpp folder in their path
Find all directories named aaa in the current directory and below .
Remount the number of lines in " / etc / fstab "
Find all files / directories under current directory tree that match the regex ' filename-regex . \ * \ .html ' in their paths
Search the current directory tree for directories named ' D '
find all directories in the current directory and do not search in sub directories
Search the current directory tree for files AAA and BBB
Find all symlinks under current directory
Calculate the md5 sum of the file " filename " and print only the hash
Removes count of processors in system .
display the base name ( name without extension ) of all the " .flac " files in the current folder
Sort file " file " by line
Represent the UTC date given in time string " 1970.01.01- $ string1
Print the list of files in directory / tmp / a1 recursively
Print the date formatted with " % a % x % X " followed by the host name
Print command history
Find all files / directories under $ 1 which have at least write permission for their owner and set write permission for group for these files /
Rename file file.txt.123456 to file.txt
Find all files in the current directory tree whose names end with the suffix " .keep. $ 1 " , where $ 1 is
find all the photos files in the current folder ( case insensitive search )
Find all files in the home directory with open permissions
display the list of all the files in the current directory which have been accssed in the last 500 days exluding hidden files
Copy all files with ' .png ' ( case insensitive ) extension under ' / home / mine ' directory tree to ' / home / mine
Represent the UTC date given in time string " 1970.01.01- $ string1
create all the cpp ( C + + source files ) , java , header files in the current directory
List all regular files in the current directory tree that were modified less than 60 minutes ago
Find all files in the current directory tree
Recursively copy directory " dir " to " dir _ a " and delete any new files in " dir _ a "
find files in the current directory and sub-directories .
Find all * .txt and * .json files in current directory
Rename file file.txt.123456 to file.txt
Find all * .data files under jcho directory
Search in current directory downwards all files whose size is greater than 10 bytes .
Find all files / directories with ' .tex ' extension under $ STORAGEFOLDER directory tree and print the pa
Find all files / directories that have read , write , execution permission for user and belong to the user ' my _ user ' under current directory
Find all regular files under $ musicdir
Find all files named " foo _ bar " in the current directory recursively
Find all files / directories named ' gupp.conf ' in the entire filesystem
Print the list of files in directory / tmp / a1 recursively
Print ' file ' file , splitting lines into pieces with no more that 3 words in each one .
Show the list of files larger than 100 MB
Show who is logged on
Print the current directory tree with file permissions
Search history for " part _ of _ the _ command _ i _ still _ remember _ here "
Find all files / directories with ' .aac ' extension under ' / path / to / dir ' directory tree
Find all files / directories named ' python ' in the entire filesystem
Find all * .txt files under current directory and print their timestamps and paths
find all the directories in the current folder which dont have the execute permission .
Find all files in the current directory tree
Find all regular files with ' .jpg ' ( case insensitive ) extension , sort them by name , print the output and also save the list to file
Find files with group write permission and remove the permission
Search the home directory tree for files newer than file / tmp / t1 but not newer than file / tmp / t2
Find files / directories with inode number ' 212042 ' under ' / var ' directory tree
find all the .jpg files in the current folder and copy them to another folder
List all regular files in the current directory tree that were modified less than 60 minutes ago
find all text files in the current folder and display them page wise
Disables shell option ' compat31 ' .
Find all directories under current directory and set their permission to 775
find all the cpp ( C + + source files ) , java , header files in the current directory
Find the largest files in a particular location
Find all regular files that reside in the current directory tree and were last modified 1 day ago
find all the files in the home folder that have been modified in the last 1 year
find all the files in the entire file system which have been modified in the last 48 hours
Find files / directories with exactly read , write and execute permission for all ( owner , group and others ) under / path
Search the current directory tree for .sqlite files
Make directory named ' cpuset ' in directory current directory
Remove all regular files from the current directory tree that were modified between August 10th and August 17th
Save " $ 1 " into variable " uname "
Move all * .bak files in the current directory tree
find all the files that have been modified in the last 24 hours
List all regular files with their names under current directory ensuring white space safety
Set variable BZIP2 _ CMD to the full path of command " bzip2 "
Set shell option ' nounset ' .
show all the " .acc " files in the folder / home
find files which have all permissions to all the users in the current directory
Find all the files in the current directory that match pattern ' a ( b * '
List all regular files in and below the home directory that have been modified in the last 90 minutes
Print all files under current directory
Create intermediate directories as required and directory / tmp / test / blah / oops / something
find file which case-insensitive name is too in currect directory
Find files / directories that is under group ' root ' or have no group and set their group to ' apache '
copy the file header.shtml to each directory under dir1 , dir2 , dir3 , or dir4
Find all directories under current directory and show their file information
Find all files / directories named ' document ' in the root filesystem partition
Find all files owned by the user daniel in the current directory and below .
Find files with group write permission and remove the permission
Find all regular files with ' .php ' extension in the / var / www directory tree
Find all directories under dir1 , dir2 , writing the filenames and ensuring white space safety in the file name
Show all files in user ' s home directory that have read , write and execute permissions set for user , group and others .
Print the full path directory name of each " file.ext " found under the current directory
Create an empty file called " emptyfile.c "
Show the list of files larger than 100 MB
Print all string from file ' file2.txt ' matching pattern in file ' file1.txt '
Read standard input until a null character is found and save the result in variable " line "
Remove all * .pyc files under current directory
Remove all libEGL * files from the current directory tree
Find all files / directories under ' / ftp / dir ' directory tree excluding paths that contain ' . / public _ html / '
Read one character from standard input into variable " REPLY "
Fix files to default permissions 755
Delete all empty directories in minimum 2 levels down the root directory
Print whether the unique contents of " set1 " and " set2 " differ
find all the files that have been modified today
Find files / directories that isn ' t owned by the user ' apache ' under / tmp
Print the current directory tree with file permissions
Print the list of all regular files in the current directory and below
Find all files / directories under $ parents directory
Find files / directories with exactly read , write and execute permission for all ( owner , group and others ) under / path
Find all directories with permissions 777 under and below / home / user / demo /
Find all files / directories with execute permission by group or others
find all the files that have not been modified in the last 3 days
count all the html files having a specifc word in a folder .
Search in current directory downwards all files whose size is greater than 10 bytes .
List all * .py files / directories under current directory
display all the files in current folder which are bigger than 1KB
Copy " file0001.txt " to " 1.txt " with a size of already exists
Print content of all files found regarding seach options ' [ whatever ] '
Search the regular files from the current directory tree for string " stuff "
Find all regular files with permissions 777 under and below / home / user / demo /
Find all 1US * files / directories under current directory
Search the current directory tree for regular files omitting directory ' omit-directory '
Split " / tmp / file " into files of at most 10 bytes each with prefix " / tmp / split-file "
Find all ' doc.txt ' files in the current directory tree
Change permissions to 755 for all directories in the / path / to / dir directory tree
Find files containing string " # ! / bin / ksh " and append their names and matching strings to / tmp / allfiles
Find all files / directories under current directory that were accessed more than 25 but less than 35 minutes ago
Search the current directory tree for files matching regular expression ' ^ myfile [ 0-9 ] [ 0-9 ] ? $ '
Update timestamps of all files and directories under current directory .
Print the list of files and directories of the / etc directory
Delete all ' .doc ' files in the current directory tree
Kill the processes of user ' myuser ' that have been working more than 7 days
Find all regular files matching the name pattern " $ 1 * " ( where $ 1 is a positional parameter ) under ' / usr ' ,
Search the current directory tree for regular files omitting directory ' omit-directory '
Search the regular files of the current directory tree for string " stuff "
Find all PHP files in the current directory recursively and search them for string " $ test " with 8 simultaneous processes
Find all directories under maximum 1 level down the current directory and set their permission to 700 recursively
Merge colon-separated information from file1 and file2 where second field of both files matches , sorting the
find all the php files in the current folder ( discards any directory which has an extension of " .php " )
Recursively copy " old / " to " new / " as a dry run skipping files that have matching checksums
Delete all ' .doc ' files in the current directory tree
Find all regular files that reside in the current directory tree and were last modified 1 day ago
Print file information of command " studio "
Set variable BZIP2 _ CMD to the full path of command " bzip2 "
find all regex ' \ . / [ a-f0-9 \ - ] \ { 36 \ } \ .jpg ' files
Find all files / directories under ' / home / user / ' directory tree whose status were changed 10 minutes ago
Compress all files under current directory tree with gzip
Find all regular files in the / path / to / base / dir tree
find all the files in the entire file system that have been modified exactly 50 days ago
Find all the files which are modified 50 days back
Find all * .css files under / working directory
Find files in entire file system that are writable by group or other
Find files in entire file system that are writable by group or other
Print the last 10 lines of ' / var / log / syslog ' , printing out any additional data appended to the file
Read a line from standard input into variable " dir "
Search for all files that end in " .conf "
Remove all files / directories under current directory
search for files which have write permission to all the users
Rename " original.filename " to " new.original.filename "
find all the files that have been modified today
Find files / directories that is under group ' root ' or have no group and set their group to ' apache '
Find all regular files that reside in the current directory tree and were last modified more than 7 days ago
Find all files / directories named ' file ' under current directory tree
Find all directories with permissions 777 under and below / var / www / html , and change their permissions to 755
Find all directories under / home / me / target / path
Find all regular files under $ { DIR } directory tree that have been modified between 2014-08-25 and 2014-08-26
Find all files / directories under ' / usr / local ' directory tree that have been modified within the last day
Find all files / directories named orm.properties under / eserver6 directory
Find all files / directories with execute permission by group or others
Remove all Thumbs.db files from the current directory tree
Remove all core dump files from user ' s home directory
Find regular files with 002 permission in entire file system
Search the current directory recursively for MOV files
Report file systems disk usage in 1GB blocks .
searches through the root filesystem ( " / " ) for the file named Chapter1 .
Delete all files / directories named ' tmp ' under / tmp
Find all empty directories under ' / srv / $ target / directory ' and below
Find all files named ' test1 ' under current directory tree
find all files in the current folder and sub-directories that were modified after the / etc / passwd file was modified
Print the current date in ' % H : % M : % S ' format followed by the string ' : done waiting. both jobs terminated on their own
Prints path location of $ BASH _ SOURCE file .
Look for files whose names begin with letters a-j
Recursively finds all files and prints all strings with ' text-to-find-here ' from that files .
find all text files in the current directory and display them page wise
Find all * 123 * files / directories under current directory
display the contents of all the files in the current folder which start with test ( case insensitive search )
Find files owned by the " seamstress "
Find all files / directories under current directory that were modified later than / reference / file
Find all files in the ' sourceDir ' directory
Sort file1 and file2 then display differences between them .
List all files and directories from the current directory tree
find all regular / normal files which have cpp folder in their path
Compress every file in the current directory that matches " * cache.html " and keep the original file
Search the files from the current directory tree for " chrome "
Search the current directory tree for regular files omitting directory ' omit-directory '
Prepend date to ping output to google.com
Find all 664 permission files / drectories under current directory tree
change the owner and group of all the files in the folder / usr / lpp / FINANCIALS
Delete all files in the / myDir directory tree that were last modfied more than 7 days ago
Remove all files in the / myDir directory tree that were last modfied more than 7 days ago
Connect to host " $ USER _ AT _ HOST " in master mode in the background without executing any commands and set the Control
find all the files in the entire file system which have been modified in the last 120 hours
find all the directories with the name " c " in the current folder which are at least 3 levels deep and which are not present in the path " / p / " .
Search the / home / user / for files whose names end with " .bin "
Find files in the current directory tree whose size is less than 24000 bytes
List all files / directories under current directory matching the posix-egrep type regex " . + \ . ( c | cpp | h ) $ " in their names excluding the files that contain ' generated
Update timestamps of all files and directories under current directory .
display all files in current folder excluding current folder ( . )
Delete all .pyc files in the current directory tree
Find all files / directories under current directory tree excluding files / directories with name ' query _ to _ avoid '
Change permissions of all files ending " .php " under the current directory to 755 and print a count of modified files
Search the current directory tree for regular files whose names end in " .shtml " or " .css "
Find all * .java files under current directory containing the string ' String '
Search the current directory tree for regular files whose names end in " .shtml " or " .css "
Find all files / directories named ' myfile ' under ' / var ' directory tree
Find files larger than 20000k
download contents from " https : / / raw.github.com / creationix / nvm / ma
Read a line from standard input into variable " REPLY " with prompt " > $ line ( Press Enter to continue ) "
Print full path of command " python2.7 "
find all files in root folder which have been modified in the last 24 hours
Create a copy of index.html in all directories in current directory whose name contains Va , pausing for confirmation before overwriting any ex
find all files in the directory " dir " which have been accessed in the last 60 minutes
Find all directories under $ d directory tree excluding hidden directories and create them in relative / path
Find all files / directories under current directory that were accessed more than 25 but less than 35 minutes ago
Find files / directories named ' file.txt ' in the path ' / usr / share / doc ' directory tree
Find files / directories that does not have write permssion for group or others
search for the word " search-pattern " in all the regular / normal files in the current folder and display the matched file name
display all the files in the current folder excluding search in the paths containing the folder having the word " mmm "
Copy all files in " / home / user1 " to " user2 "
Sort file " file " by line
Compress " example.com " and " conds.nasa " line
Save the absolute path of the current script to variable " SELF "
Get the path of running Apache
Remove all .zip files in the current directory tree that were last modified more than 7 days ago
Find all files under current directory excluding hidden directories
Add a line number to every line in " infile "
Find files / directories that isn ' t owned by the user ' apache ' under / etc directory
find all the files ending with " .foo " in the folder / home
find all the files in the folder / opt which have been modified exactly 20 days ago
Find all the files in file system which are bigger than 50MB and less than 100MB
Find all directories with extension .nas in the entire file system
Search the current directory tree for symbolic links to files matching pattern ' * test * '
Delete files in the directory trees whose names match pattern $ 1
Delete all .pyc files in the current directory tree
prevents curl from returning error ( 23 ) Failed writing body when grepping for foo
Find all files under current directory excluding hidden directories
display all normal / regular files in current folder in sorted order
Search the current directory tree for files whose names end in " rb " or " js "
find all files newer than httpd.conf under and below the current directory
Find all files under $ SOURCE _ DIR that are not pointed by user $ FOLDER
Find files / directories that are bigger than 10000 KB in size uder ' / usr / local ' directory tree
Find all files under $ FOLDER , take the first fields ( dot ( . ) as the delimiter ) from their timestamps and reverse sort them nu
Search the current directory tree for files whose names end in " rb " or " js "
Change the owner of all files in the directory tree " dir _ to _ start " excluding file " file _ to _ exclude " to " owner "
Rename file file.txt.123456 to file.txt
Find all .axvw files / directories under current directory
Search the .bash files from the current directory tree for string " stdout "
Recursively finds strings with " text string to search " in any file within the ' directory-path ' , following symlinks , and prints found strings with file names .
Change permissions to 775 for all directories under / var / www / html / and set their permission to 775
Find all .zip files in the current directory tree that are exactly 100MB in size
Delete all hidden files under $ some _ directory
Create a copy of index.html in all directories in current directory whose name contains Va , pausing for confirmation before overwriting any existing files - names may
find all ' * .c ' files under $ HOME directory which context contains sprintf
Find all files / directories under test directory that match the case insensitive regex . * / \ ( EA \ | FS \ ) _ . *
Find files newer than / etc / motd and below
find all the directories in the current folder and create the same directory structure in a remote machine using ssh
Compress all * .img files using bzip2
Fix files to default permissions 755
Remove all vmware- * .log files under current directory
Recursively finds all " * .png " files older than 50 days in a current folder and removes them .
Find all files named ' foo ' in the current directory tree , not descending into " FOLDER1 " directories
delete all the files in the current folder which do not belong to any user
Delete all files in the / myDir directory tree that were last modfied more than 7 days ago
Find all * .bak files / directories under working directory
Search the * .c files residing in the current directory tree for string " blash "
Find files / directories whose owner is daniel in the current directory and its sub-directories but ignore any file beginning with " autumn " .
Find files / directories whose owner is daniel in the current directory and its sub-directories but ignore any file beginning with " autumn " .
find all the normal / regular files in the folder main-directory which have been modified in the last 24 hours .
Find all regular .zip files in the current directory tree that are exactly 100MB in size
Find all files / directories under ' / proc / $ ' directory tree that belong to the user ' wnj ' ( case insensitive ) that were modified in less than 1 day ago
Save the user name of the current user to variable " x "
Remove all new files in the current directory tree that have the name " blah " in their names
Remove all new files in the current directory tree whose names begin with " t "
Print the current directory tree with file sizes
Print absolute path of java executable
Set permissions to 644 for every subdirectory of the current directory
Change permissions to 644 for all regular files under the / var / www / html / tree
Find all regular files older than 48 hours in the current directory tree
Find all files in the current directory tree that match pattern ' a ( b * '
Find all directories named ' mydir ' under current directory tree excluding ' .git '
Find all the files whose name is FindCommandExamples.txt and contains both capital and small letters in / directory
Find all the files in ' / var / log ' directory tree which have been modified within the last 2 days
Remove files under / mnt / zip matching " * prets copy " with confirmation
Find all files under $ source _ dir that match the regex expanded by $ input _ file _ type in their paths
Search the current directory tree for .mp3 files
Find all files under current directory matching the posix-egrep type regex ' ^ . * / [ a-z ] [ ^ / ] * $ ' in their names
Print lines 1000 / dev / zero / byte / trace and / etc / group file
Delete all files / directories under current directory tree with ' . $ 1 ' extension where $ 1 expands as the first positional parameter
Removes all files from current folder but 5 newest ones , filtering out directories from initial search .
Print the path names of all .png files in the / home / kibab directory tree
Remove all files from the system whose path names contain " GUI "
Print file size and user name with color support for each file in the current directory tree
Archive " / path / to / files " to " user @ targethost : / path "
Replace all spaces with underscores in directory paths under current directory .
find the file " dateiname " in the entire file system ( case insensitive search )
Find all the files in file system which are modified 50 days back
Find files that are orphaned
Search the current directory tree for all files except SVN ones
Find all files / directories under ' / var / log ' directory tree that bave been modified today ( from the start of the day )
Print whether the unique contents of " set1 " and " set2 " differ
Find all files / directories under current directory tree whose names start with ' test ' followed by two digits and end with ' .txt ' extension
Remove all vmware- * .log files under current directory
Print the contents of " filename "
Find all files / directories under current directory that are newer than ' backup.tar.gz ' by modification time
Search for ' foo = ' in all * .png files under current directory without descending into * .gif and * .svn directories
Recursively copy " old / " to " new / " as a dry run skipping files that have matching checksums and output the name only
Shows MAC address of network interface eth0 .
display all the regular / normal files in the current folder which are modified after a file
Find all files / directories with ' .mp4 ' extension under ' / home ' directory tree
Find all files / directories under ' / usr / include ' directory tree that have been modified in the last 48 hours
Find all pdf files excluding * _ signed.pdf files under current directory
Find files named ' core ' in or below the directory / usr / ports with ' Makefile '
Search all files in the current directory tree whose names end in " 1 " for string " 1 "
Display all symlinks and their targets in the current directory
This will remove all files ( type f ) modified longer than 14 days ago under / root / Maildir / recursively from there and deeper ( mindepth 1
Find all directories in the current directory tree that have the name " test " in their names
Find all regular files under ' / home / john / scripts ' directory tree excluding files with ' .ksh ' extension
Find all directories in the current directory tree that are not accessible by all
Show the list of files that are not owned by user wnj or are not newer than file ' ttt '
Read a line from standard input in an interactive shell
Print all directories under $ root appending a : ( colon ) at the end of each path without descending into directories matching the pattern . [ a-z ] *
Find all files / directories named ' mywebsite ' under ' / home / mywebsite ' directory tree
Compare " file1 " and " file2 " line by line with 3 lines of unified context
display a long listing of the files all non emoty files in current folder which have been modified 60 minutes ago
Print common lines in files " set1 " and " set2 "
display all normal / regular files in current folder in sorted order
Search the current directory and all subdirectories for files that have 777 permissions and the permissions to 755
Print the current date followed by " : $ line "
Find all symbolic links under $ directory or below the directory given as the $ FOLDER
Search the current directory tree for all files matching either pattern " * .rb " or pattern " * .py "
Print the current date in ' % H : % M : % S ' format followed by the string ' : done waiting. both jobs terminated on their own or via timeout ; resuming script
Saves real path of the folder containing the current script
Find all directories under maximum 1 level down the current directory and set their permission to 700
Count the number of files / directories named file1 under current directory
run " command " on server " host " as user " user "
Find all * .gif files under current directory and search for ' GUI ' in their names
Find all files / directories named ' document ' in the root filesystem partition
Display the count of regular files under ' home / magie / d2 ' directory tree which have execute permission to all the users
Remove all vmware- * .log files under current directory
This will remove all files ( type f ) modified longer than 14 days ago under / root / Maildir / recursively from there and deeper ( mindepth 1
Find all files under source directory and search for regular expressions taken from the search _ terms.txt file
Search the files in the ' my _ home ' directory tree for the regular expression ' ^ myfile '
kill all background processes
Archive " / path / to / files " to " user @ targethost : / path "
Change the owner of " destination _ dir " to " user "
Find all files / directories under current directory tree whose names start with ' test ' followed by two digits and end with ' .txt ' extension
Find all files / directories under current directory tree that start with ' R ' and end with ' VER ' in their names and were modified more than 1 day ago
Find files / directories under current directory that were modified in the last day in directories whose paths start with a . ( ' a ' )
Find all files / directories under ' / home / nez / ' directory tree that match the case insensitive pattern ' * .txt ' and print the file names
Search directory / Users / Me / Desktop / directory tree for regular files
Find all files under . / lib / app and sort them
Find all regular files that were modified more than 2 days ago under ' / path-to-directory ' directory tree , sort them according to timestamp and print the filenames preceded with the timestamps
Find all files / directories with ' .pyc ' extension under current directory tree without descending into ' .git '
Find all files / directories named ' core ' under ' / usr ' directory tree that contain the word ' blast ' in their names
Find files owned by no user
Split " input _ file " into files of at most 100 lines each with prefix " output _ file "
Copies file ' file1 ' to each of directories ' dir1 ' , ' dir2 ' , ' dir3 ' .
Print the current date in ' % H : % M : % S ' format followed by the string ' : done waiting. both jobs terminated on their own or via timeout ; resuming scri
Find all * .gif files under current directory and search for ' GUI ' in their names
Find all * .INALCATE. * files / directories under current directory
Find all directories under $ workspace _ ts directory and set their permission to 775
Find * .pl files / directories under / users / tom
Add a line number to every line in " infile "
Print server ' source ' from removing all files matching " file _ name "
This will remove all files ( type f ) modified longer than 14 days ago under / root / Maildir / recursively from there and deeper ( mindepth 1
find all the files in the current folder which have been modified in the last one day
Find all 400 permission files under / data directory , print ' Modifying ' appended with file path for each of them and change their permission to 755
Find all regular files named ' * .gz ' in the current directory tree and display their contents
Check if " \ [ $ VLABEL \ ] " is mounted and save the result in variable " AMV "
Archive " / path / to / files " to " user @ targethost : / path "
Remove all regular files found in and below / tmp
Find all files / directories under $ TARGET _ DIR directory tree matching the posix extended regular expression \ " . * / $ now . * \ " ( where $ now is a variable ) and save the output in file
Search the / dir directory tree for files whose names match regular expression ' 2015 . * ( album | picture ) '
Make directories " ~ / abs / lab4a / folder "
Print lines in all files in the / var / log directory tree that were last modified more than 4 days ago
Represent the UTC date given in time string " 1970.01.01- $ string1 " as number of seconds since the epoch and save it in ' t1 ' variable
Find all broken symlinks under current directory
search for a regular / normal file myfile in the folder " / home / weedly "
Find files with name ' * .mp3 ' and move them to directory ' / tmp '
Find all * .java files under current directory containing the string ' String '
find all the files in the directory which is pointed by $ 1 variable ending with the name held in the variable $ 2 or having the extension of value saved in the argument $ 2 .
Print content of all files found regarding seach options ' [ whatever ] '
Read lookup requests from text file ' 1.txt ' and uses them to fetch TXT records .
Recursively finds all folders in a current folder that contain files like ' .git ' .
Search for ' some string ' in all * js files under current directory and show the matched lines with line numbers
Find all files / directories named ' composer.json ' under ' / home / username / target-directory ' directory tree
Make directories " Labs / lab4a / folder1 " , " Labs / lab4a / myfolder " , and " Labs / lab4a / foofolder "
Perform a dry run to recursively copy " test / a " to " test / dest " excluding " test / a / b / c / d "
Find all files / directories under $ TARGET _ DIR directory tree matching the posix extended regular expression \ " . * / $ now . * \ " ( where $ now is a variable ) and save the output in file $ FILE _
Find all files / directories under ' / apps / ' directory tree that belong to a user with user id 1000
Save the absolute path of the current script to variable " SELF "
Search for a pattern " can ' t " in all the files with the name " file-containing-can ' t " in the current directory tree
Print the first 5 decompressed lines of compressed file " $ line "
Read a line from standard input into variable " message " with prompt " Please Enter a Message : " followed by a newline
Search for all files with the name " temp " in the current directory and change the permissions of the directories these files
Remove all files / directories under ' / home / user / Series / ' directory tree with confirmation
Find all * .andnav files under current directory and below their count their line numbers
Add group write permission to all files matching " * " or " ... * "
Recursively copies ' / usr / local / gtest ' to ' / usr / ' directory , creating symbolic links on each file instead of real copying them .
Find all files / directories under ' / home / user / ' directory tree whose status were changed 10 minutes ago
Move all files and directories in the current directory to " somewhere / "
Find all files in the ' sourceDir ' directory tree
Print unique lines in sorted file " a.txt " compared to sorted file " b.txt "
Search the current directory tree for regular files omitting directory ' omit-directory '
Calculate the md5 checksum of the current directory structure and save it in variable SUM
Find all regular files matching the name pattern " $ 1 * " under current directory
Save the system host name in variable " HOSTNAME "
Archive " / path / to / files " to " user @ targethost : / path "
Find files larger than 20000k
Find all files under current directory that were modified in the last 24 hours and also include the files that were modified in less than 1 day ago
Find x * files / directories under / tmp directory whose status was changed less than 1 day ago and move them to ~ / play
Find all regular files with name pattern $ filename under $ fileloc directory tree
display list of all the hidden directories in the directory " / dir / to / search / "
Find all regular files that contain ' linux ' ( case insensitive ) in their names under ' / root ' directory tree
Find all files / directories under / somefolder that were modified less than 60 minutes ago
Print $ d if $ d is an empty directory
Print $ d if $ d is an empty directory
Find all files / directories in level 2 down the current directory
Print only second from the end field from slash-separated string in file ' datafile '
Prints path to folder that contains file " / path / to / vm.vmwarevm / vm.vmx " .
Save the CURRENT _ WHIP files in the current directory tree to variable " canonical "
find all the files that have not been modified in the last 24 hours
Search the entire file hierarchy for files larger than 100 megabytes and delete them .
Print only second from the end field from slash-separated string in file ' datafile '
Search the regular files of the user bluher in the file system for the word " foo.txt "
Move all files in the current directory tree that have been modified in the last day to " / path / to / target-dir "
Find all regular non-hidden files in the current directory and its subdirectories
Search the current directory tree for .mp3 files
Create symbolic links in the current directory for all files excluding " CONFIGFILE " located under " / your / project " directory tree
Find files matching the pattern " . / sr * sc " in their paths under current directory
Make directory " / tmp / BACKUP.8.0.1 "
Find all files in the ' sourceDir ' directory tree
Correct permissions for files in the web directory
find all the files that have not been modified in the last 24 hours
Find all files with the SUID bit set , starting from /
Count the number of files / directories named file1 under current directory
Find and remove all .txt regular files under the current directory and below
Find all * .pdf files under current directory and search for regular expressions taken from the search _ terms.txt file
Find all regular files matching the name pattern " $ 1 * " under current directory
Find all 400 permission files under current directory and change their permission to 644
display all the .sh scripts and perl files in the folder / home
Find all xml files under current directory and archive them to .bz2 archives
Search / usr / bin for regular files that can be read by noone
Keep the last 3 components ( directories ) of $ path
Find all files / directories under ' / home / backups ' directory tree that have not been modified in the last 3 days
Find all .txt files in the current directory tree and rename them to .mp3 or .mp3
Find all 400 permission files under current directory and change their permission to 644
Remove files from the home directory tree that were last accessed more than 100 days ago
Find all files under $ dir directory whose size is greater than $ size MB and less than $ size
Find all files / directories under $ TARGET _ DIR directory tree matching the posix extended regular expression \ " . * / $ now . * \ " ( where $ now is a variable ) and save the output in file $ FILE _ LIS
Find all files whose names end with " ~ " in the / home / peter directory tree , following symlinks , and delete them
find all files in the file system which have no user and no group
Print common lines of files " file1 " , " file2 " , " file3 " , and " file4 "
Read a line from standard input into variable " message " with prompt " Please Enter a Message : " followed by a newline
list all pdf files in the current directory
Move all * .mp4 files from directory / foo / bar and its subdirectories to / some / path
Search for regular files of the grooup ' users ' in the file system
Print the names of all hidden regular files from the current directory
display all the files having spaces in the current folder
display a long listing of the files in current folder which have been modified in the last 60 minutes
Find all files in the current directory tree that are not newer than some _ file
Compose filepath as folder path where file $ f is located , and lowercase filename of $ f file , and save it in ' g ' variable
Sort file " file " by line
Find all files / directories under / path / to / source / directory tree that contain ' pattern '
Find all regular files matching the name pattern " $ 1 * " ( where $ 1 is a positional parameter ) under ' / usr ' , ' / bin ' , ' / sbin ' and ' / opt ' directory tree
Find all files under current directory excluding hidden directories
Go to first directory specified in PATH which contains the command ' oracle '
Remove " \ n " from " test1 \ ntest2 \ ntest3 " and search for " test1 . * test3 "
delete all the files in the current folder which do not belong to any user
Find all PHP files in the / Path / bar directory tree and search for " foo "
Find all files / directories under $ TARGET _ DIR directory tree matching the posix extended regular expression \ " . * / $ now . * \ " ( where $ now is a variable ) and save the output in file $ FILE _ LIST
Find all * .jpg files under $ DIR / Desktop directory and list them with their sizes
Remove all * .log files from the / var / www directory tree
Saves real path of the folder containing the current script
Find all * .andnav files under current directory and rename them by replacing all spaces with _
Find all * . * files / directories under current directory and show the parent directory of the first one found
Mount " / tmp / loop.img " on " / mnt / image " as a loop back device
Find all files / directories under ' / usr / local / games ' directory tree that contain the string ' xpilot ' in their names
Find all files in the current directory tree whose size is greater than 1MB , and move them to the " files " folder
Find all xml files under current directory and archive them to .bz2 archives
Make directory " / tmp / { 1 } " and " / tmp / path2 / "
Search directory tree ' MyApp.app ' for directories whose name is ' Headers ' and delete them
Find all files / directories in directories / files taken from the glob pattern ' / tmp / test / * ' recursively that have not been modified from the start of the day
Change directory to the download directory specified in the current user ' s user-dirs.dirs file
Counts lines in each of * .php files in a current folder and subfolders ignoring ' tests * ' folders and prints total count as well .
Make directory " / dev / urandom "
Search for ' some string ' in all * js files under current directory and show the matched lines with line numbers
Archive " src-dir " to " dest-dir " on " remote-user @ remote-host " and delete any files in " dest-dir " not found in " src-dir "
Compress $ file file using gzip
Print " 0a.00.1 usb controller some text device 4dc9 "
Archive " / path / to / files " to " user @ targethost : / path "
Find all directories under / home / mywebsite / public _ html / sites / all / modules and set their permission to 750
Find all CSS files that do something with HTML ID # content
Change directory to the download directory specified in the current user ' s user-dirs.dirs file
Display a named character dump of " test.sh "
Wrap each line in " file.txt " to fit in 80 characters
find all the files in the current folder that have the word " bash " in their name
Find all files / directories under ' / data / SpoollIn ' directory tree that have been modified in the last 2 hours and were modified more than 1 day ago
Find all .tmp files under and below the / tmp / directory and remove them
display all the files in the current folder which do not belong to any user
Suffix all files and folders in the current directory with " _ SUF "
Print " aa a / b / c " as space separated list
find all the files in the current folder which have the word cache in them and do not search in the sub directories of the folder .
Find all files / directories under ' / data / SpoollIn ' directory tree that have been modified in the last 2 hours and were modified more than 1 day ago
Find all files / directories under ' / data / SpoollIn ' directory tree that have been modified in the last 2 hours and were modified more than 1 day ago
Find all the .sql files in the current directory recursively and search them for the word " example "
find all the files in the file system which have been accessed in the last 1 day
Print only alphanumeric values from " / dev / urandom "
Find all files / directories under ' / nas / projects / ' directory tree that were modified exactly one day ago
Delete all files under $ INTRANETDESTINATION / weekly directory tree that were modified more than 32 days ago
Save the canonical path of " $ dir / $ file " in variable " path "
Find all files / directories in entire file system more than 700 Megabytes
find all the files in the current folder which end with .o or with the name a.out and display them .
Find all files / directories with ' .log ' extension whose names start with ' app- ' , have been modified in the last 5 minutes and show the first one found
Save the first word of the first difference in " .dir _ list _ 2 " compared to " .dir _ list _ 1 " into variable " extract _ dir "
Find all regular files under $ { FOLDER } directory tree that have not been modified in the last 24 hours
Rename all files matching " access.log. < number > .gz " incrementing < number > .
Archive " / usr / local / " to " / BackUp / usr / local / " on host " XXX.XXX.XXX.XXX " via ssh and show progress
Decompress " path / to / test / file.gz " to standard output and save all lines matching " my regex " to files with a 1000000 line limit
Print all files in the current directory as a comma separated list
Print a welcome message with the current user ' s user name
Compare " file1 " and " file2 " line by line with 3 lines of unified context
Read a line from standard input in an interactive shell into variable " input " with prompt " Do that ? [ Y , n ] " and suggestion " Y "
Recursively change ownership of " ~ / .npm " to the current user
Find all files / directories in entire file system more than 700 Megabytes
Compress and display the gzip compression ratio of every file on the system that is greater than 100000 bytes and ends in " .log "
display a long listing of all images with the name " articles " in the current folder ( print0 is used to preserve file names with new line in their name )
Move all files / directories under ' / var / cache / ' directory tree that have been modified in the last 128.254
Find files in entire file system that are writable by group or other
Display differences between / tmp / test1 and / tmp / test2 .
find files in the current directory with pattern ' ' * . [ ch ] ' which are contain " thing ' string and print file names which can contain spaces
Recursively copy all files matching " * .sh " in " $ from " to " root @ $ host : / home / tmp / " compressing data during transmission
display all the files in the current folder which do not belong to any user
Show the list of files that are not owned by user wnj or are not newer than file ' ttt '
Search for the regex ^ catalina in the first line of each file under current directory
find all the regexp files in the folder " / home / user / demo " which have the permission 777 .
Removes all files from current folder but 5 newest ones , filtering out directories from initial search .
Find all files / directories named ' fileName.txt ' under ' / path / to / folder ' directory tree
display all the files ending with " .user " or beginning with " admin " or ending with " .user.gz " in / var / adm / logs / morelogs / and excluding all regular files
Find all files / directories under ' / home / [ опция _ поиска ' and show the first 10 minutes
Remove the last two components ( directories ) of $ path
Find all files under ' test ' directory tree whose paths match the regex ' . * / course [ 0-9 ] \ . [ 0-9 ] \ . [ 0-9 ] \ . [ 0-9 ] $ '
Read a single character from standard input into variable " key " without backslash escapes and using the prompt " Press any key to continue " ...
Print common lines of files " file1 " , " file2 " , " file3 " , and " file4 "
Find all files / directories under ' / home / mye / ' directory tree that match the posix extended regex " . * / 20140624 . * " in their names
login as user postgres
Decompress " path / to / test / file.gz " to standard output and save all lines matching " my regex " to files with a 1000000 line limit
Find all files / directories with space in their names under $ 1 directory and rename them by replacing all spaces with with _
