find all the php files in the current folder
change the group to " new _ group "
Remove all files from the current directory tree
Print file type of the executable file of command " file "
Find all files owned by user ' root '
Find files / directories that are readable by the user ' du ' under ' / home ' directory tree
Make directory " mywebsite "
Copy all .mp3 files in the current directory tree to / tmp / MusicFiles /
find all the files ending with " .foo " in the folder / usr
Find files larger than 100MB in / var / www and exclude files with / download / in their path from the
Print ' whoami ' for the file / etc / group
find all text files in the current directory
find the file " something " in the current folder ( case insensitive search )
Find all links to path / to / file
find for a filename with multiple patterns in the current folder
Find all files / directories named ' * .jpg ' under current directory tree
Find all directories named ' mydir ' under ' local ' and ' / tmp ' directory tree
find all the file in the current directory
Find all regular files starting from / that have been changed within the last 10 minutes
Write ' " myname = " Test " ' to the console and append to " $ CONFI
Read the total file system into variable " REPLY "
Recursively set all permissions under " / opt / lampp / htdocs " to 755
Find all the files in the current directory
Replace spaces with underscores in the names of all files and directories in the " / tmp " directory
Find all * .txt files / directories under your home directory
Search for all files named " filename " in the current directory tree
get the count of all the files that have been accessed in the last 30 days
Compress " hello world " and save to variable " hey "
Find all * pattern * files under current directory
Find all files under $ target _ directory
dsisplay all files inthe current folder
Add group write permission to all files in the current directory
Find all files / directories under current directory
Find all * .java files under current directory
Find all files / directories named ' articles.jpg ' under ' images ' directory tree
Print the current directory
run ls command on * .pl files
Find all the files whose permissions are 777 in the current directory
Set permissions to ug = rwx , o = for directories inside the . / default / files tree
Set permissions to ug = rwx , o = for directories under the $ d directory tree
Delete all directories in the / myDir directory tree
find all the files that have been modified today
Find all directories named " D " in the current directory tree
Find all files / directories under current directory and count the number of lines for the output
Replace all spaces with underscores in directory names under current directory .
find all the parent directories in the entire file system
Copy * .mp3 files to / tmp / MusicFiles
Represent the current time as seconds since epoch and save it to variable ' TODAY
Update timestamps of all files and directories under directory / path / to / dir .
Show the list of files larger than 100 MB
Find all dir * files / directories under parent
Verbosely change ownership of " $ file " to " root "
find all the regular / normal files in the / www directory
Find all directories named aaa in the current directory
Remount the number of lines in " / etc / fstab "
Find all files / directories under current directory
Search only for directories named foo , FOO , or any other combination of uppercase and lowercase charact
find all the directories in the current folder which have been modified in 24 hours and move them to the folder / path / to / target
Search the current directory tree for files modified less than 5 days ago
Find all executables under current directory
Calculate the md5 sum of all * .py files in the current directory
Removes empty folder , and hides error message if one is not empty .
display the base name ( name without extension ) of all the " .flac " files in the current folder
Sort the lines of the file ' filename ' ignoring the last N characters
Represent the current time as seconds since epoch and save it to variable ' TODAY '
Print the list of files in directory / tmp / a1 recursively
Print the date formatted with " % a % x % X " followed by the host name
Print command history
Find all regular files 1 level down the $ dir directory
Rename recursively all files in the current directory tree
Find all subdirectories of the current directory except hidden ones
find all the photos files in the current folder
Find all files in your home directory and below
display the list of all the text files present in the current directory excluding the search in certain paths .
Copy all files with ' .png ' ( case insensitive ) extension under ' / home / mine ' directory tree to ' / home / mine
Represent the current time as seconds since epoch and save it to variable ' TODAY '
Copy all files matching " script.sh " in directory tree " ~ / newlinks " to " newdir "
List all the file links
Find all files and directories under current directory
Recursively copy " $ 1 " to " $ 2 " .
find all files in the current directory that belong to no user
Find all * .txt and * .json files in current directory
Rename file file.txt.123456 to file.txt
Find all * .data files under jcho directory
Search in current directory downwards all files whose size is 10 blocks .
find all the files ending with " .mkv " in a folder
Find all files that are set group ID to staff
find all " .flac " files in current folder starting with " cmn- "
Find all files named " foo " in the current directory tree
find all the files in the entire file system
Print the list of files in directory / tmp / a1 recursively
Print ' file ' content , formatting output as 29-symbol wide column , regarding space symbol
Show the list of files larger than 100 MB
Show who is logged on
Print last day of April , 2009
Print command history
Find all files / directories with ' .what _ to _ find ' extension under current directory tree
Find all python files / directories under current directory tree
Find all * .txt files under current directory and print their timestamps and paths
find all the directories in the current directory which dont have the execute permission .
Find all files in the current directory tree
display all the regular / normal files ending with " .mod " in a folder
Find files with group write permission and remove the permission
Search the home directory tree for files modified less than a day ago
Find files / directories with inode number ' 212042 ' under ' / var ' directory tree
find all the normal / regular files in the current folder which are empty
List all regular files in the current directory tree that were modified less than 60 minutes ago
find all the text files in the current folder and do not search in somedir , bin directories
Disables shell option ' compat31 ' .
Find all directories under current directory and set their permission to 775
find all the cpp files in the current folder
Find the largest 10 files ( regular files ) under current directory
display all the files in current folder which have been accessed in the last 15 days
find all the files in the home folder that have been modified in 1 year or more ( which are not modified in the last 1 year )
find all files in the entire file system that have been modified in the last 24 hours
Find files / directories with exactly read , write and execute permission for all ( owner , group and others ) under / path
Search the current directory and directories below for .sql files
Make directory named in variable " wh "
Delete all regular files that have not been modified in the last 60 weeks under $ DIR directory tree
Save the variable " me " that have been accessed in the last day to variable " DATECOLDAY "
Move all * .data files / directories in $ S directory to $ S / data / directory
find all the files that have been modified in the last 24 hours
List all regular files in entire file system
Set variable ' rav ' to the contents of ' var ' spelled backwards .
Set variable BZIP2 _ CMD to the full path of command " bzip2 "
show all the regular / normal files in the folder / home / user / demo
find files which have all permissions to all the users in the current directory
delete all the files in the current folder
List all regular files in entire file system
Print all the file / directory paths under current directory
Create intermediate directories as required
find file which case-insensitive name is too in currect directory
Find files / directories that have no owner or group under / path
copy the file header.shtml to those dirs
Find all directories under current directory having DIRNAME in their name
find all the files in the / usr folder which have read , write and execute permissions set for all users .
Find all files owned by the user daniel in the current directory and below .
Find files with group write permission and remove the permission
Find all regular files under / var / www directory tree that contain " .php " ( case insensitive ) in their names
Find all files starting from / whose names end with " .rpm " and change their permissions to 755
Show logged in users with idle time of each one
Print the full path prefix for all files in the current directory tree as a list
Clean the current directory from all subversion directories recursively
Show the list of files larger than 100 MB
Print all string from file ' file2.txt ' matching pattern in file ' file1.txt '
Read standard input until a null character is found and save the result in variable " line "
Remove all * .pyc files under the current directory
Remove all libEGL * files from the current directory tree
Find all files / directories under / data1 / Marcel which are greater than 524288 bytes and were modified or accessed more than 1 year
Read one character from standard input into variable " dir "
View the man page of find
Delete all empty directories in minimum 2 levels down the root directory
Print what year it was 222 days ago
Find all the files that were modified more than one day ago
Search for files that are at least 100MB
Print the current directory tree with file sizes
Print the list of regular files from the current directory that were last modified on November , 22
Find all files under $ parent _ directory
Find files / directories with exactly read , write and execute permission for all ( owner , group and others ) under / path
Find all directories with permissions 777 under and below / home / user / demo /
Find files / directories with exactly read , write and execute permission for all ( owner , group and others ) under / path
find all the files that have been modified in the last 3 days ( considers day starting not 24 hours )
count all the regular files that are present in a directory
Search in current directory downwards all files whose owner is aa1 or whose name is myfile .
List all * fink * files / directories under current directory
display all the files in the current folder which are bigger than 1KB
Copy " file0001.txt " to all directories listed in " allFolders.txt " - names may not contain spaces .
Print concatenated content of all files ending with ' .foo ' under the current folder
Search all the regular files from the current directory tree for " search string "
display all the files in the folder / home which have the permissions 777
Find all * . $ VER _ CATION * files / directories under current directory
Search the current directory tree for regular files that were changed $ FTIME days ago
Split " / etc / gconf / schemas / gnome-terminal.schemas " into 1000000 files of
Find all directories named ' doc ' under current directory tree
Change permissions to 500 for all directories under and below the current directory
Find files containing string " # ! / bin / ksh " and append their names and matching strings to / tmp / allfiles
Find all files / directories under current directory that were accessed 30 minutes ago
Find all files on the system that are larger than 600 MB
Update timestamps of all files and directories under directory / path / to / dir .
Print the list of files and directories of the / etc directory
Delete all files / directories named ' document ' in the current directory tree
Kill the processes of user ' myuser ' that have been working more than 7 days
Find all regular files under $ path
Search the current directory tree for regular files omitting directory ' omit-directory '
Search the regular files of the current directory tree for string " foo "
Find all * .ISOLATE files / directories under current directory
Find all directories under maximum 1 level down the current directory and set their permission to 700 recursively
Merge already sorted files " * .txt " and split the result into files of at most 1000000 lines each with a numer
find all the php files in the current folder ( discards any directory which has an extension of " .php " )
Recursively copy " original _ dir " to " copy _ dir " preserving file / dir timestamps , displaying progress
Delete all files / directories named ' document ' in the current directory tree
display all the files in current folder which have been accessed in the last 15 days
Print file information of command " studio "
Set variable ' file ' to the base name of first argument to script or function , that is the part following the last sla
find all files that match ' apt ' and * .o ' in the current directory tree
Find all files in the / home / directory tree that were last modified less than 7 days ago
Compress all files under current directory tree with gzip
Find all regular files in the / path / to / base / dir tree
find all the files in the entire file system that have been accessed exactly 50 days ago
Find files larger than 50k
Find all * prefs copy files / directories under current directory
Find files in entire file system that are writable by group or other
Find files in entire file system that are writable by group or other
Print the list of files changed within the last minute
Read a line from standard input into variable " dir "
search for files in the current folder using name patterns
Recursively delete all files / folders named ' .svn ' in a current folder .
search for files in current folder using regular expressions
Rename file file.txt.123456 to file.txt
Find all the files that were modified more than one day ago
Find files / directories that belong to user ' ian ' under ' / tmp ' directory tree
display all the files in current folder which have been accessed in the last 15 days
Find all files / directories named ' file ' without descending into directories with the same name under current directory tree
Find all directories with permissions 777 under and below / var / www / html , and change their permissions to 755
Find all directories under / home / me / " $ d "
Find all regular files under $ DIR directory tree whose paths match the regex " . * \ . $ { TYPES _ RE } " where $ { TYPE
Search / usr / local -mtime 1 directories
Find all files / directories named orm.properties under / eserver6 directory
Find files / directories with exactly read , write and execute permission for all ( owner , group and others ) under / path
Remove all files named " Thumbs.db " from the current directory tree
Remove all core dump files from user ' s home directory
display all the files in the entire file system which have set uid bit set .
Search the current directory recursively for files whose size is between 10 and 50 MB
Report file system containing the current directory disk usage
searches through the / usr directory for the regular file named ' Chapter1 * '
Delete all files / directories named ' file ' under / tmp
Search directory tree / srv / $ { x } for regular files accessed at least 10080 minutes ago , and remove those files
Search the " test1 " directory recursively for regular files
find all files and directories that have been modified in the last seven days
Print the current date in ' % H : % M : % S ' format followed by the string ' : done waiting. both jobs terminated on their own
Prints path to the target of symbolic link ' relative / path / to / file '
Save the FQDN host name of the system in variable " hnd "
Recursively finds files like ' * .js ' , and filters out files with ' excludeddir ' in path .
find all text files in the current folder and display them page wise
Find all * . [ ch ] files / directories under current directory
display the contents of all the text files in the current directory
Find all files owned by user daniel in the current directory and its sub-directories .
Find all * .wav files under current directory
Find all files in the ' sourceDir ' directory tree
Sort file1 and file2 then display differences between them .
List all files and directories from the current directory tree
find all regular files then display the number of occurrences of banana without lines not proper end
Compress every file in the current directory tree that matches " * cache.html " and keep the original file
Search the files from the current directory tree for text " documentclass "
Search the current directory recursively for regular files last accessed more than 2 days ago
Prepend the reverse history number to the output of the history command with arguments " $ @ "
Find all 664 permission files / drectories under current directory tree
change the owner and group of all the normal / regular files in the current folder and / home / admin / data / to admin & admin
Delete all files in the / myDir directory tree that were last modfied more than 7 days ago
Remove all files in the / myDir directory tree that were last modfied more than 7 days ago
Convert relative path " / x / y / .. / .. / a / b / z / .. / c / d " into absolute path with resolved symbolic links
find all the files in the entire file system that have been accessed in the last 60 days ago
find all the directories with the name " DIRNAME " in the current folder and force delete them
Search the / home / mywebsite / tmp directory tree for files named " myfile "
Find files in the current directory tree whose size is greater than 24000 bytes
List all files / directories under current directory matching the posix-egrep type regex " . + \ . ( c | cpp | h ) $ " in their names
Update timestamps of all files and directories under directory / path / to / dir .
display all files in current folder excluding current folder ( . )
Delete all .pyc files in the current directory tree
Delete all files / directories under current directory
Change permissions of all directories from the current directory tree to 644
Search the current directory tree for regular files whose names end in " .shtml " or " .css "
Find all .java files whose name contains " Message "
Search the current directory tree for regular files whose names begin with " orapw "
Find all directories in the / var / tmp directory tree
Find all files larger than 20000k
download contents from " https : / / raw.github.com / creationix / nvm / ma
Read a line from standard input into variable " message " with prompt " Please Enter a Message : " followed by a
Print full path of command " python "
find out what group a given user has
Create a ssh tunnel on local port 2222 through " bridge.example.com " to " remote
find all files in the current directory excluding those that end with .js or have the words .min or console in their name
find all the directories in the current folder excluding search in the sub directories
Find all files / directories under current directory that were accessed 30 minutes ago
Find files / directories named ' file.txt ' in the path ' / usr / lib / important / '
Find files / directories that are owned by the user ' syslog ' in entire filesystem
search for the word " search-pattern " in all the regular / normal files in the current folder and display the matched file name
display all the files in the current directory excluding those that are in the ' secret ' directory
Copy " src / prog.js " and " images / icon.jpg " to " / tmp / package " keeping relative path
Sort the lines of the file ' filename ' ignoring the last N characters
Compress all " .txt " files in the current directory tree with gzip
Save the MD5 suffix of all files under " / your / dir "
Get the grandparent directory of each found ' pattern ' file in $ SEARCH _ PATH
Remove all .zip files modified more than 5 days ago from the current directory tree
Find all files under current directory excluding hidden files
Add a line number to every line in " infile "
find all files under the / etc directory that were modified exactly 10 minutes ago
find all the files ending with " .foo " in the folder / usr
find all the files in the folder / opt which have been accessed exactly 20 days ago
display all files in the file system which are bigger than 50MB and having size " filename " in them
Find a directory named ' project.images ' in the entire filesystem and show it in long listing format
Search the current directory tree for symbolic links to files matching pattern ' * test * '
Delete all files in the empinner directory tree that were accessed more than 300KB
Delete all .pyc files in the current directory tree
prevents curl from returning error ( 23 ) Failed writing body when grepping for foo
Find all files under current directory excluding hidden files
display all the normal / regular files in the current folder and do not go beyond 3 levels
Search the current directory tree for files and directories whose names begin with " pro "
find all files which are modified after modifying / etc / passwd files .
display all the files in the folder " $ ORIG _ DIR "
Find files / directories under ' / usr ' directory tree that are newer than / tmp / stamp $ $ by modification time
Find all regular files under $ FOLDER directory tree that start with ' " . ' and end with ' " ' in their names and were modified in less than $ RETENTION days
Search the current directory recursively for files whose size is between 10 and 50 MB
Change the owner to " user " and group to " group " of files " file " ...
Rename file file.txt.123456 to file.txt
Search the current directory tree for .axvw files
Search the current directory tree for .bash files ignoring the " . / vendor " subdirectory
Recursively finds files like ' * .js ' , and filters out files with ' excludeddir ' in path .
Change permissions to 644 for all subdirectories
Remove all .gz files in the current directory tree
Delete all hidden files under $ some _ directory
Create a symbolic link named " .bash _ profile " to " .bashrc "
find all ' * .c ' files under $ HOME directory which context contains sprintf
Find all files / directories under test directory that match the case insensitive regex . * / course [ 0-9 . ] * in their paths
Find files newer than / etc / motd and / etc / passwd in the file system
find all the directories in the current folder and create the same directory structure in a remote machine using ssh
Compare * .csv files in the current directory tree with their analogs stored in / some / other / path /
Filters only directories from long file listing of the current directory
Remove all vmware- * .log files under current directory
Recursively finds all files newer than a date
Find all files named ' foo ' under current directory tree without descending into directories named ' foo '
delete all the files in the current folder which do not belong to any user
Remove all files in the / myDir directory tree that were last modfied more than 7 days ago
Find all * .sql files under / working
Search all * .c files from the current directory tree for " hogehoge "
Find files / directories that isn ' t owned by the user ' apache ' under / var / www
Find files / directories that isn ' t owned by the user ' apache ' under / var / www
find regular files in the " mail " folder under the user ' s home directory , displaying filenames and lines that contain the text " Linux "
display all the files in the current folder which have been modified in the last 2 days
Find all symbolic links under ' / proc / $ pid / fd ' directory tree with name pattern ' $ save _ path / sess _ \ * ' and update their timestamps
Save the user name of the current user to variable " x "
Remove all files named " new _ dir " from the current directory tree
Remove all files named " new _ dir " from the current directory tree
Print the current default full path of the " java " executable
Print absolute path of " YOUR _ PATH "
Set permissions to 644 for all regular files under the current directory tree that have permissions 755
Change permissions to 644 for all regular files under the / path / to / dir / tree unless these permissions are already set
display all the files in the current folder which have been modified in the last 24 hours
Find all files in the current directory tree whose path names match pattern ' . / sr * sc '
display all the directories in the current folder excluding those that are present in the aa directory tree
Find all files whose name or type description includes " text " , display only paths to files .
Find files in the / var / log folder which were modified an hour or more ago
Remove files under / mnt / zip matching " * prets copy " with confirmation
Find all * . $ input _ file _ type files / directories under $ source _ dir with the null character as the delimiter
Search the current directory tree for .m4a files
Find all files under current directory without descending into .snapshot directory that were modified in last 24 hours with null character as the delimiter
Print lines 10000 to 10010 from input " seq 1 100000 "
Delete all hidden files under $ some _ directory
Removes all files from current folder but 5 newest ones .
Print the path composed of the current working directory and the directory containing " $ 0 "
Remove all files from the / path / to / files directory tree that were last modified more than 30 days ago
Print 1000 astarisk ( ' * ' )
Archive " / usr / local / " to " / BackUp / usr / local / " on host " XXX.XXX.XXX.XXX " via ssh and show progress
Replace all ' ' with ' - ' from standard input
find the oldest normal file in the entire file system and display its timestamp
Find all the files in file system which are greater than 50MB and less than 100MB
Find files that are orphaned
Search the current directory recursively for * .txt files with lines that match regular expression " ^ string "
Find all files / directories under / var / log directory
Print whether " $ file " and " $ { file / $ { dir1 } / $ { dir2 } } " differ
Find all files / directories under current directory and append a null character at the end of each path
Remove all vmware- * .log files under current directory
Print the contents of " filename "
Find all files / directories under current directory tree that are newer than backup.tar.gz by modification time
Search for ' foo = ' in all * .png files under current directory without descending into * .gif and * .svn directories
Recursively copy " original _ dir " to " copy _ dir " preserving file / dir timestamps , displaying progress , and skipping files which match in size , keeps partially tran
Shows MAC address of network interface eth0 .
display all the regular / normal files in the current folder that are not accessed in the last 10 minutes
Find all files / directories with inode number 16187430 and move them to ' new-test-file-name '
Find all files / directories under ' / usr / include ' directory tree that have been modified within the last 48 hours
Find any hidden regular files in the current directory and its sub-directories that were modified after .cshrc was last modified .
Find files named ' core ' in or below the directory / tmp and delete them
Search all files in the current directory tree whose names end in " 1 " for string " 1 "
Display all symlinks and their targets in the current directory
Print command history
Find all directories in the current directory tree that are not accessible by all
list all running jobs
Find all directories in the current directory tree that are not accessible by all
Show the list of files that are owned by user wnj or are newer than file ' ttt '
Read a line from standard input in an interactive shell with prompt in variable " myprompt " interpreted as PS1 is interpreted
Print all directories under $ root appending a : ( colon ) at the end of each path without descending into directories matching the pattern . [ a-z ] *
display all the files in the folder " / home / mywebsite " which have been changed in the last 7 * 24 horus
Compare " file1 " and " file2 " line by line with 3 lines of unified context
display a long listing of all the files in the current folder in sorted order , which are bigger than 10KB
Print common lines in files " set1 " and " set2 "
display all the normal / regular files in the current folder and do not go beyond 3 levels
Search the current directory and all subdirectories for files that have 777 permissions and the permissions to 755
Print the current date followed by " : $ line "
Find all symbolic links under $ some _ directory and below
Search the current directory tree for all * .ogg files
Print the day 1 day ago
Saves real path of the folder containing the current script
Find all directories under maximum 1 level down the current directory and set their permission to 700 recursively
Count the number of files in the / usr / ports directory tree whose names begin with ' pkg-plist ' and which contain ' unexec.rmdir % D '
run " . / configure " with a new environment variable CC set to the full path of the command ' gcc '
Find all * .gif files under current directory and below
Find all files / directories named ' document ' in the root filesystem partition
Display the 5 smallest files in the current directory and its sub-directories .
Remove all vmware- * .log files under current directory
Print command history
Find all files under $ source _ dir that match the regex expanded by $ input _ file _ type in their paths
Search the regular files of the current directory tree for string " foo "
kill all background jobs
Archive " / usr / local / " to " / BackUp / usr / local / " on host " XXX.XXX.XXX.XXX " via ssh and show progress
Change the owner of " destination _ dir " to " user "
Find all files / directories under current directory tree whose names start with ' test ' followed by two digits and end with ' .txt ' extension
Find all files / directories under current directory tree that start with ' R ' and end with ' VER ' in their names and were modified more than 1 day ago
Find all files / directories under current directory that were accessed less than 1 day ago and move them to / path / to / target-dir
Search the / home / sdt5z / tmp directory tree for files whose names end in " rb "
Search directory / Users / Me / Desktop / directory tree for files with extensions the same includes / constants.php
Find all files under . / lib / app and sort them
Find all regular files that were modified more than 60 days ago under ' / path-to-directory ' directory tree , sort them according to timestamp and print the filenames preceded with the timestamps
Delete all files / directories with ' .pyc ' extension under current directory tree
Find files / directories named ' file.txt ' that belong to user ' tutonics ' in the entire filesystem
Find files owned by no user
Split " file.txt " into files of at most 20 lines each with a prefix " new "
Copies all files under current directory like ' * FooBar * ' to the ' ~ / foo / bar ' directory .
Print the current date followed by " : $ line "
Find all * .gif files under current directory and below
Find all Executable files in the current directory tree and count the number of lines in them
Delete all directories under $ workspace _ ts directory ( nothing ) that were modified more than 30 days ago
Find * .pl files / directories under / users / tom
Add a line number to every line in " infile "
Print ver list of lines that are present in directory ' / some / dir '
Search history for " part _ of _ the _ command _ i _ still _ remember _ here "
find all the files in the current folder which have been modified in the last one minute
Find all 400 permission files under / data directory , print ' Modifying ' appended with file path for each of them and change their permission to 755
Find all regular files excluding files that contain ' linkin park ' in their names under current directory tree and show the matched lines with line numbers
Check if " \ [ $ VLABEL \ ] " is mounted and save the result in variable " AMV "
Archive files ( not directories ) in " sorce _ dir " to " target _ dir "
Remove regular files changed more than 15 days ago from the / tmp directory tree
Find all files / directories under $ TARGET _ DIR directory tree matching the posix extended regular expression \ " . * / $ now . * \ " ( where $ now is a variable ) and save the output in file
Search the / dir directory tree for files whose names match regular expression ' . * 2015 . * \ ( album . * \ | picture . * \ ) '
Make directories " Labs / lab4a / folder1 " , " Labs / lab4a / myfolder " , and " Labs / lab4a / foofolder "
Print lines of ' file ' reverted order , and reverted characterwise
Represent the current time as seconds since epoch and save it to variable ' TODAY '
Find files / directories named bootstram under current directory tree
search for a regular / normal file " myfile " in the entire file system excluding the folder in excluded _ path
Find files matching regular expression regexp
Find all * .java files under current directory and archive them to myfile.tar
find all files in the directory " dir " which have been accessed in the last 60 minutes
Print content of ' filename ' file , showing all non-printing characters and displaying $ at the end of each line .
Read a line from standard input into variable " REPLY " with prompt " > $ line ( Press Enter to continue ) "
Recursively finds all folders in a current folder that contain files like ' .git ' .
Search for ' some string ' in all * .axvw files under current directory and show the matched lines with line numbers
Find & replace broken symbolic links
Make directories " Labs / lab4a / folder1 " , " Labs / lab4a / myfolder " , and " Labs / lab4a / foofolder "
Perform a case insensitive search for * filename * files / directories under current directory tree
Find all files / directories under $ TARGET _ DIR directory tree matching the posix extended regular expression \ " . * / $ now . * \ " ( where $ now is a variable ) and save the output in file $ FILE _
Find all files / directories that belong to the group ' accts ' under ' / apps ' directory tree
Save the absolute path of the current script to variable " SELF "
search for a shell script in the current folder and display the current folder path but search from the sub directories
Print the first 5 decompressed lines of compressed file " $ line "
Read a line from standard input into variable " message " with prompt " Please Enter a Message : " followed by a newline
Recursively search through directory " test " in home directory , displaying names of all directories without full paths , ie. only the name part following the last slash of each directory .
Remove all files under / home / user / Series / * , ignoring ' . _ .DS _ Store ' them
Find all * .andnav files under current directory and archive them with their file information prompt
Add the execute and read permission for all and the write permission for the user to the dir _ data directory and all of its sub-directories .
Recursively copies ' include / gtest ' to ' / usr / include ' , preserving all attributes , and copying symlinks as symlinks , without following in source files .
find all the files in the current directory and sub-directories whose status was changed after / etc / fstab was modified
Move all files and directories in the current directory to " somewhere / "
Find all files in the ' sourceDir ' directory tree
Print unique lines in sorted file " a.txt " compared to sorted file " b.txt "
Search the current directory tree for regular files omitting directory ' omit-directory '
Calculate md5 checksum of theDirname
Find regular files matching pattern " * oraenv * " and excecute the " file " utility for each of them
Save the system host name in variable " HOSTNAME "
Archive files ( not directories ) in " sorce _ dir " to " target _ dir "
Find all files larger than 20000k
Find all files under current directory that were modified in the last 24 hours and also include the files that were modified in less than 1 day ago
Find x * files / directories under / tmp directory whose status was changed less than 1 day ago
Find all regular files under $ DIR directory tree whose paths match the regex " . * \ . $ { TYPES _ RE } " where $ { TYPES _ RE } expands as a variable
display list of all the C files ( fuiles with " .c " extension ) in current folder
Find all regular files that contain ' linux ' ( case insensitive ) in their names under ' / root ' directory tree
Find all files under / somefolder matching the pattern expanded by $ FILE _ PATTERN in thier names
Print the files in the current directory as a list of comma separated values
Print the files in the current directory as a list of comma separated values
Find files / directories in entire file system that are writable by their owner
Print only second from the end field from slash-separated string in file ' datafile '
Prints path to the target of symbolic link ' relative / path / to / file '
Save the CURRENT _ PID = ' echo " $ MOUTPUT _ FOLDER " in variable " RENT "
find all the files that were modified yesterday in the current directory .
Search the file hierarchy for files larger than 100000 KB without searching any mounted removable media
Print only second from the end field from slash-separated string in file ' datafile '
Search regular files under ~ / mail for string " Linux "
Move all files from the ' sourceDir ' directory tree to the ' destDir ' directory
Find regular non-hidden files containing ' some text ' in their names with hidden directories optimization
Search the current directory tree for .m4a files
Create symbolic links in the current directory for all files excluding " CONFIGFILE " located in " / your / project "
Find files matching regular expression regexp
Make directories " / tmp / foo / bar / baz " , " / tmp / foo / bar / bif " , and " / tmp / foo / bar "
Find all files in the ' sourceDir ' directory tree
Correct permissions for files in the web directory
find all the files that have been modified exactly yesterday ( from 00 : 00 to 23 : 59 yesterday )
Find all the files without permission 777 in the file system
Count the number of files in the / usr / ports directory tree whose names begin with ' pkg-plist ' and which contain ' unexec.rmdir % D '
Find and remove all .txt regular files under the current directory and below
Search the current directory tree for hidden files skipping .htaccess
Delete all regular files that start with ' sess _ ' in their names , are at least 1 level deep and were modified more than $ gc _ maxlifetime minutes ago under $ save _ path directory tree
Find all files with the SUID bit set beginning with the root directory
display all the " .sh " files in the folder " / home / david " which have been modified in the last 48 hours
Find all xml files under current directory and archive them to .bz2 archives
Search the / usr / bin directory tree for regular files modified or created less than 10 days ago
Keep the last 3 components ( directories ) of $ path
Find all files / directories under current directory tree whose paths match the regex ' filename-regex . \ * \ .html '
Find all .txt files in current directory and rename with .html .
Find all files with the SUID bit set beginning with the root directory
Remove the files from the home directory tree that were last accessed more than 100 days ago , with confirmation
Find all regular files under $ dir directory tree that are bigger than $ size MB in size and print them along with their sizes in decreasing order of size
Find all files / directories under $ STORAGEFOLDER directory tree and show the first 10 lines of output from the beginning
Remove all files whose names end with " ~ " in the / home / peter directory tree
find all files in the file system which belong to no user or which have no user
Print out the full path name of " mypathname " with dots resolved
Read a line from standard input into variable " message " with prompt " Please Enter a Message : " followed by a newline
find all the pdf files in the current folder
Move all files belongs to directory / tmp /
Search for " LOG " in jsmith ' s home directory tree
Print the names of all hidden regular files from the current directory
display all the files having spaces in the current folder
display a long listing of all the files in the current folder in sorted order , which are bigger than 10KB
Find all files in the current directory tree except .html , ignoring .svn directories
Compares two listings ' ls ' and ' ls * Music * ' , showing only strings that unique for first listing .
Sort file " a.csv " by the first comma separated value of each line and print only unique entries
Find all files / directories under / path / to / source / directory tree that contain the string ' total ' in their names and were modified more than 1 day ago
Remove all regular files matching the name pattern " $ 1 * " ( where $ 1 is a positional parameter ) under ' / usr ' , ' / bin ' , ' / sbin ' and ' / opt ' directory tree
Find all files under current directory excluding hidden files
Give a long listing of all the * .pl files ( Perl files ) beneath the current directory .
Delete all files under $ { S _ PATH } directory
find all the files in the current folder which do not belong to any user
Find all PHP files in the / home / kibab directory tree and were modified less than 60 minutes ago
Find all files / directories under $ TARGET _ DIR directory tree matching the posix extended regular expression \ " . * / $ now . * \ " ( where $ now is a variable ) and save the output in file $ FILE _ LIST
Find all * .jpg files under ~ / Desktop directory and change their permission to 640
Remove all files whose names end with " ~ " in the / home / peter directory tree
Saves listing of a current folder in ' OUTPUT ' variable .
Find all * .andnav ( case insensitive ) files / directories under current directory and rename them by replacing all spaces with _
Find all * . * files / directories under current directory and print their path and parent directory path
Mount " / tmp / loop.img " on " / mnt / image " as a loop back device
Search through the / usr directory for all files that begin with the letters Chapter , followed by anything else .
Find all files in the current directory tree whose size is greater than 1MB , and move them to the " files " folder with confirmation
Find all xml files under current directory and archive them to .bz2 archives
Make directory " dir1 " and do not cause an error if it exists
Search directory tree ' MyApp.app ' for directories whose name is ' Headers ' and delete them in an optimized way
Find all files / directories in directories / files taken from the glob pattern ' / tmp / test / * ' recursively that have not been modified from the start of the day
Change directory to the output of command ' ~ / marker.sh go " $ @ " '
Counts lines in each of * .php files in a current folder and subfolders ignoring ' tests ' folder and prints total count as well .
Make directories in the current directory tree as needed for each unique mime type in the current directory
Search for ' string-to-find ' in all files under current directory tree matching the regex ' filename-regex . \ * \ .html ' in their paths and show the matched lines along with the filenames
Archive " src " to " dst " updating files existing in " dst "
Compare " $ source _ file " and " $ dest _ file " line by line
Print the 5th space separated fields in " file " as a comma separated list
Archive " / path / to / files " to " user @ targethost : / path "
Find all directories under / home / mywebsite / public _ html / sites / all / modules and set their permission to 750
Find all CSS files under current directory and copy them to directory ' / path / to / target / directory '
Change directory to the output of command ' ~ / marker.sh go " $ @ " '
Display a named character dump of " test.sh "
Wrap each line in " longline " to a maximum of 30 characters breaking at spaces
find all the files in the current directory and sub-directories , that were edited within the last 1 hour and execute the list command with long listing format
Remove duplicate phrases and keep the original order of lines in " $ infile "
Find all .tmp files under and below the / tmp / directory and remove them
display all the files in the current folder which have not been modified in the last 7 days and which are not in the list " file.lst "
Suffix all files and folders in the current directory with " _ SUF "
Print " a.txt b.txt c.txt d.txt " and " emails to " xx.txt " with line numbers
find all the files in the file system that start with " win " and searched only in the mounted file systems
Remove duplicate phrases and keep the original order of lines in " $ infile "
Remove duplicate phrases and keep the original order of lines in " $ infile "
find all the sql files in the current folder and subfolders .
find all the files in the entire file system that have been accessed in the last 60 days ago
Print only common strings in sorted content of files ' file1 ' and ' file2 '
Find all files / directories under / nas / projects / scripts directory that were modified more than 7 days ago and delete them
Delete all files under $ INTRANETDESTINATION / weekly directory tree that were modified more than 32 days ago
Save the absolute path of the current script to variable " SELF "
Delete all files with ' .o ' extension in the entire filesystem
find all the files in the current folder which end with " ext1 " or " ext2 " or " ext3 "
Find all files / directories with ' .log ' extension whose names start with ' app- ' , have been modified in the last 5 minutes and show the first one found
Save the first " " . separated field of the system host name to variable " HOSTZ "
Find all regular files under $ FOLDER directory tree that start with ' " . ' and end with ' " ' in their names and were modified in less than $ RETENTION days excluding the files whose contents match one of the regular expressions defined per line in file $ SKIP _ FILE
Rename all files matching " access.log. < number > .gz " incrementing < number > .
Archive " / path / to / sfolder / " to " name @ remote.server : / path / to / remote / dfolder " preserving hard links and compressing the data during transmission
Decompress " path / to / test / file.gz " to standard output and save all lines matching " my regex " to files with a 1000000 line limit
Print " my _ driver " source " on " $ dest _ dir / $ { 1 } " with a null character
Print a colon-separated list of all directories from the $ root directory tree , except those matching pattern " . [ a-z ] * "
Compare " file1 " and " file2 " line by line with 3 lines of unified context
Read a line from standard input with a timeout of 10 seconds
Recursively change ownership of " ~ / .npm " to the current user
Remove all files with ' .js ' extension from the ' js ' directory tree
Compare " fastcgi _ params " and " fastcgi.conf " line by line , output 3 lines of unified context , and print the C function the change is in
display a long list of all the files that are bigger than 10KB in current folder
Move all files / directories under / var / cache / * / mnt / * that match the case insensitive pattern ' * .mbox * ' to ' Messages ' directory
Find files in entire file system that are writable by group or other
Display hardware platform , ie. x86 _ 64 even if current kernel uses 32-bit addressing .
Recursively find files in the current directory with a modification time more than 7 days ago , save the filenames to " compressedP.list " , and compress no more than 10 at a time
Recursively copies ' include / gtest ' to ' / usr / include ' , preserving all attributes , and copying symlinks as symlinks , without following in source files .
display all the files in the current folder which do not belong to any user
Show system information : kernel name , hostname , kernel release and version , machine architecture , processor type , hardware platform , and operating system type .
Search for the regex ' ^ ERROR ' in all * .log files under current directory
find all the reglar files in the current folder and search for a pattern
Removes all files like ' * .bak ' in a current folder , and prints messages about what is being done .
Find all files / directories named ' findcommandexamples.txt ' ( case insensitive ) in the entire filesystem
display all the files ending with " .user " or beginning with " admin " or ending with " .user.gz " in / var / adm / logs / morelogs / and excluding all regular files
Find all files / directories under [ опция _ поиска ] [ значение ] [ значение ]
Remove last two underscore-delimited fields and following characters in " t1 _ t2 _ t3 _ tn1 _ tn2.sh " keeping only " t1 _ t2 _ t3 "
Find all files under test directory that were modified more than 7 days ago and delete them
Read a single character from standard input into variable " doit " with prompt " Do that ? [ y , n ] "
Print common lines in files " set1 " and " set2 "
Find all files / directories under / home / mywebsite / public _ html / that were modified more than 7 days ago excluding * .log files / directories
Strips two last sections from the path $ pathname , and prints basename of the rest part .
Decompress " path / to / test / file.gz " to standard output and save all lines matching " my regex " to files with a 1000000 line limit
Find all files with space in their names under current directory and rename them by replacing all spaces with _
