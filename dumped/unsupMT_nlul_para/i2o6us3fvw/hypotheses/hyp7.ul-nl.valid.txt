find all the php files in the current folder
change the group of all regular / normal files in the current directory
Search the current directory tree for files last accessed more than 10 days ago
Print file information of command " studio "
Find all files owned by group ' root '
Find files / directories that are bigger than 10000 KB in size uder ' / usr / local ' directory tree
create directory mydir
Copy all .mp3 files to / tmp / MusicFiles
find all the files ending with " .jpg " in current folder and move them to temp folder
Find files larger than 100MB in / var / www and exclude files with / download / in their path from the
Print ' echo ' hello , world '
find all text files in the current directory
find the file " something " in the current folder ( case insensitive search )
Find all links to path / to / file
find for a filename with multiple patterns in the current folder
Find all files / directories named ' .jpg ' under current directory tree
find all directories named ' foo ' under ' / usr / local ' directory tree
find all the files in the current directory
Find all regular files starting from / that have been changed within the last 10 minutes
Write " ' " pwd ' " to the console and append to " / etc / apt / sou
Read hexadecimal bytes from device " / dev / midi1 "
Set permissions for all regular files under / var / www to 755
Find all the files in the current directory
Replace spaces with underscores in the names of all files and directories in the " / tmp " directory
Find all * .txt files / directories under your home directory
Find all * .gz files under / home / foo / bar
get the number of regular files in the directory given as the bash script argument $ 1
Compress " hello world " and save to variable " hey "
Find all files matching pattern ' . # * ' in the current directory tree
Find all files under $ target _ directory
dsisplay all files inthe current folder
Add group write permission to all files in the current directory
Find all files / directories under current directory
Find all * .java files under current directory
Find all files / directories named ' articles.jpg ' under ' / usr ' directory tree
Print the current directory tree
run ls command on * .pl files
Find all 777 permission files and use chmod command to set permissions to 644
Set permissions to ug = rwx , o = for directories inside the . / default / files tree
Set permissions to ug = rwx , o = for directories inside the . / default / files tree
Delete all files in the / myDir directory tree
find all the files that have been modified today
Find all " D " directories in the current directory tree
Find all files / directories under current directory and count the number of lines for the output
Replace the " openssl " command executable with a symbolic link to " / usr / local / ssl /
find the passwd file in the entire file system
Copy * .mp3 files to / tmp / MusicFiles
Represent the UTC date given in time string " 1970.01.01- $
Update timestamps of all files and directories under current directory .
Show the list of files larger than 100 MB
delete all the mp4 files in the folder / data
Verbosely change ownership of " $ file " to " root "
find all the regular / normal files in the / var / www directory
display all directories in current folder
Removes the last 2 lines from a file
Find all files / directories under current directory
Search the current directory tree for directories named ' Subscription.java '
find all the directories in the current folder which have been modified in 24 hours and move them to the folder / path / to / target
Search the current directory tree for files last accessed more than 10 days ago
Find all executables under current directory
Calculate md5 sum of file $ ecriv
Removes empty folder , and hides error message if one is not empty .
display the base name ( name without extension ) of all the " .flac " files in the current folder
Sort the contents of file " filename " by line to standard output
Represent the current time as seconds since epoch and save it to variable ' TODAY '
Print the list of files in directory / tmp / a1 recursively
Print the date formatted with " % a % x % X " followed by the host name
Print command history
Find all regular files 1 level down the $ dir directory
Rename recursively all files in the current directory tree
Find all files in the current directory tree whose names begin with ' - '
find the file " hostChapter1 "
Find all files in your home directory and below that are smaller than 100M .
display the list of all the text files present in the current directory excluding the search in certain paths .
Copy all files with ' .png ' ( case insensitive ) extension under ' / home / mine ' directory tree to ' / home / mine
Represent the UTC date given in time string " 1970.01.01- $ string1
search the file " myscript.sh " in the entire file system
List all the file links
Find all files and directories under current directory
Recursively copy directories " A " and " D " to directory " / path / to / target / directory " on host " anotherhost "
find all files that do not have execute permission to all
Find all * .txt and * .json files in current directory
Rename file file.txt.123456 to file.txt
Find all * .data files under jcho directory
Search in current directory downwards all files whose size is 10 blocks .
find all the files in the home folder which end with " ext1 "
Find all files that are set group ID to 10
find all " .flac " files in current folder starting with " cmn- "
Find all files named " foo _ bar " in the current directory recursively
find all the files in the entire file system
Print the list of files in directory / tmp / a1 recursively
Print ' file ' content , formatting output as 29-symbol wide column , regarding space symbol
Show the list of files larger than 100 MB
Show who is logged on
Print last day of April , 2009
Search history for " part _ of _ the _ command _ i _ still _ remember _ here "
Find all files / directories with ' .something ' in their names under current directory tree
Find all files / directories named ' python ' in the entire filesystem
Find all the files in the current directory and its subdirectories .
find all the directories in the current directory which dont have the execute permission .
Find all files in the current directory tree
display all files ending with ' .ext ' in current folder
Find files with group write permission and remove the permission
Search the home directory tree for files modified less than a day ago
Find files / directories with inode number ' 212042 ' under ' / var ' directory tree
find all the normal / regular files in the current folder which are empty
List all regular files in the current directory tree that were modified less than 60 minutes ago
find all text files in the current folder which have been modified after the file / tmp / newerthan
Disables shell option ' nullglob ' .
Find all directories under current directory and change their permission to 775
find all the cpp files in the current folder and move them to another folder ( plus takes the bulk output of
Find the largest files in a particular location
display all the files in current folder which have been accessed in the last 15 days
find all the files in the home folder that have been modified in 1 year or more ( which are not modified in the last 1 year )
find all the files in the entire file system that start with top
Find files / directories with exactly read , write and execute permission for all ( owner , group and others ) under / path
Search the current directory and directories below for .sql files
create directory dirname with permissions 777
Remove all regular files that have not been modified in the last 31 days under ' / path / to / junk / files ' directory tree
Save the directory name of the canonical path to the current script in variable " MY _ DIR "
Move all * .data files / directories in $ S directory to $ S / data / directory
find all the files that have been modified in the last 24 hours
List all regular files modified more than 61 days
Set shell option ' dotglob ' .
Set shell option ' nounset ' .
Set prompt to the system host name and history number
find all files that have been modified in the last seven days .
delete all the files in the current folder
List all unique parent directories of .class files found under the current directory
Print all string from file ' file2.txt ' matching pattern in file ' file1.txt '
Create intermediate directories as required
find file which case-insensitive name is too in currect directory
Find files / directories that have no owner or group under / path
copy the file header.shtml to each directory under dir1 , dir2 , dir3 , or dir4
Find all directories under current directory having DIRNAME in their name
find all the files in the folder / usr / share / doc which have been modified in the last 3r hours
Find all files owned by group ' top '
Find files with group write permission and remove the permission
Find all regular files under / var / www directory tree
Find all files starting from / whose names end with " .rpm " and change their permissions to 755
Show logged in users with idle time of each one
Print the full path of command " rails "
Clean the current directory from all subversion directories recursively
Show the list of files larger than 100 MB
Print all string from file ' file2.txt ' matching pattern in file ' file1.txt '
Read standard input until a null character is found and save the result in variable " line "
Remove all * .pyc files under the current directory tree
Remove all libEGL * files from the current directory tree
Find all files / directories with ' .mp4 ' extension and all regular files with ' .flv ' extension , sort them according to their names and display the first 5
Read one character from standard input into variable " REPLY "
View the man page of find
Delete all empty directories in minimum 2 levels down the root directory
Print what year it was 222 days ago
Find all the files that were modified within the last day
Search for files bigger than 10M
Print the current directory tree with file sizes
Print the list of all regular files on the system using " echo "
find all the parent links in the current folder and do not search in the sub directories
Find files / directories with exactly read , write and execute permission for all ( owner , group and others ) under / path
Find all directories with permissions 777 under and below / home / user / demo / , and change their permissions to 755
Find all files / directories with execute permission by group or others
find all the files that have been modified in the last 3 days ( considers day starting not 24 hours )
count all the regular files that are present in a directory
Search in current directory downwards all files whose size is 10 blocks .
List all * .py files / directories under current directory
display all the files in current folder which are bigger than 1KB
Copy " file0001.txt " to " 1.txt " and output the result to " new.txt "
Print conf differences between files in dir1 and dir2 .
Search all regular files whose names contain " @ " in directory tree ~ / $ folder
display all the files in the folder / home which have the permissions 777
Remove ESC key bind
Search the current directory tree for regular files changed less than 1 day ago
Split " / tmp / files " into files of at most 1000 lines each
Find all directories named ' doc ' in the current directory tree
Change permissions to 500 for all regular files under and below the current directory
Find files with name ' photo * .jpg ' under current directory tree
Find all files / directories under current directory that were accessed 30 minutes ago
Find all files on the system that are world writeable
Update timestamps of all files and directories under directory / path / to / dir .
Print the sorted and unique parent directory paths appended with : of all the files that are executable by owner under ~ / code directory without
Delete all files / directories named ' doc ' under current directory tree
Kill the processes of user ' myuser ' that have been working more than 7 days
Find all regular files under $ path
Search the current directory tree for regular files omitting directory ' omit-directory '
Search the regular files of the current directory tree for string " foo "
Find all IP addresses in / etc directory files
Find all directories under maximum 1 level down the current directory and set their permission to 700 recursively
Merge already sorted files " file * .txt " and split the result into files of at most 100000 lines each with a prefix
find all the php files in the current folder ( discards any directory which has an extension of " .php " )
Recursively copy " original _ dir " to " copy _ dir " preserving file / dir timestamps , displaying progress
Delete all files / directories named ' doc ' under current directory tree
display all the files in current folder which have been accessed in the last 15 days
Print file information of command " studio "
Set shell option ' nounset ' .
find all regex ' \ . / [ a-f0-9 \ - ] \ { 36 \ } \ .jpg ' files
Find all files under / home / myuser / that were modified more than 7 days ago
Compress all files under current directory tree with gzip
Find all regular files in the / path / to / base / dir tree
find all the files in the entire file system that have been accessed exactly 50 days ago
Find files larger than 50k
Find all * prefs copy files / directories under current directory
Find files in entire file system that are writable by group or other
Find files in entire file system that are writable by group or other
Print the list of files changed within the last minute
Read a line from standard input into variable " dir "
Search for files / directories which have read and write permission for their owner , and group and only read permission for others
Recursively delete all files / folders named ' .svn ' in a current folder .
search for files in current folder using regular expressions
Rename file file.txt.123456 to file.txt
Find all the files that were modified more than one day ago
Find files / directories that is newer than ' ttt ' by modification time in entire file system
display all the files in current folder which have been accessed in the last 15 days
Find all files / directories named ' file ' without descending into directories with the same name under current directory tree
Find all directories with permissions 777 under and below / var / www / html , and change their permissions to 755
Find all directories under / home / me / " $ d "
Find all regular files under $ DIR directory tree whose paths match the regex " . * \ . $ { TYPES _ RE } " where $ { TYPE
Search / usr / local -mtime 1 directories
Find all files / directories named orm.properties under / eserver6 directory
Find all files / directories with execute permission by group or others
Remove all files named ' temp ' from the / tmp directory tree
Remove all core dump files from user ' s home directory
display all the files in the entire file system which have set uid bit set .
Search the current directory recursively for files whose size is between 10 and 50 MB
Report file system inodes usage in human readable format
searches through the / usr / local directory for files that end with the extension .html
Delete all files in the / tmp directory tree that have not been modified in the last 10 days
Search directory tree / srv / proc and / srv / www for regular files
Search the " test1 " directory recursively for regular files
find all files and directories that have been modified in the last seven days
Print the current date in ' % H : % M : % S ' format followed by the string ' : done waiting. both jobs terminated on their own
Prints full path to files in a current folder .
Load keybindings from a file ~ / .inputrc
Recursively finds all files and prints all strings with ' text-to-find-here ' from that files .
find all text files in current folder ; which have been modified exactly 5 days ago
Find all * 1234.56789 * files / directories under current directory
display the contents of all the files in the current folder which start with test ( case insensitive search )
Find all files owned by group ' comp '
Find all * .wav files under current directory
Find all files in the ' sourceDir ' directory tree
Sort file1 and file2 then display differences between them .
List all files and directories from the current directory tree
find all regular files then display the number of occurrences of banana without lines not proper end
Compress every file in the current directory tree that matches " * cache.html " and keep the original file
Search the files from the current directory tree for " foo "
Search the current directory recursively for regular files last changed more than 2 days ago
Prepend date to ping output to google.com
Find all 664 permission files / drectories under current directory tree
change the owner and group of all the files in the folder / usr / lpp / FINANCIALS
Delete all files in the / myDir directory tree that were last modfied more than 7 days ago
Remove all files in the / myDir directory tree that were last modfied more than 7 days ago
Convert relative path " / x / y / .. / .. / a / b / z / .. / c / d " into absolute path with resolved symbolic links
find all the files in the file system which have been accessed in the last 1 day
find all the directories with the name " DIRNAME " in the current folder and force delete them
Search the / home / username / -name myfile.txt files for regular files
Find files in the current directory tree whose size is less than 24000 bytes
List all files / directories under current directory matching the posix-egrep type regex " . + \ . ( c | cpp | h ) $ " in their names
Update timestamps of all files and directories under directory / path / to / dir .
display all files in current folder excluding current folder ( . )
Delete all .pyc files in the current directory tree
Delete all .pyc files in the current directory tree
Change permissions of all directories from the current directory tree to 644
Search the current directory tree for regular files whose names end in " .shtml " or " .css "
Find all .java files whose name contains " Message "
Search the current directory tree for regular files whose names end in " .shtml " or " .css "
Find all files / directories in entire file system
find all files in the current directory which are bigger than 2MB
download contents from " https : / / www.npmjs.com / install.sh " and execute
Read a line from standard input into variable " REPLY " with prompt " $ 1 ( [ y ] es or [ N ] o ) : "
Print full path of command " python "
find out what group a given user has
Create a symbolic link named " .bash _ profile " to " .bashrc "
find all files in the directory " dir " which have been accessed in the last 60 minutes
find all the directories in the current folder excluding search in the paths containing the folder having the word " mmm "
Find all files / directories under current directory that were accessed 30 minutes ago
Find files / directories named ' file.txt ' in the path ' / usr / lib / important / '
Find files / directories that are owned by the user ' syslog ' in entire filesystem
search for the word " search-pattern " in all the regular / normal files in the current folder and display the matched file name
display all the files in the current directory excluding those that are in the ' secret ' directory
Copy all files in " / path / to / srcdir " to " dest / " preserving symbolic links , modification times , and permissions
Sort the contents of file " ips.txt " , eliminate duplicate entries , and prefix each entry with number of
Compress all " .txt " files in the current directory tree with gzip
Save the absolute path of " $ path " to variable " fullpath "
Get the grandparent directory of each found ' pattern ' file in $ SEARCH _ PATH
Remove all .zip files modified more than 5 days ago from the current directory tree
Find all files under current directory excluding hidden files
Add a line number to every line in " infile "
Search for all files that end in " .conf "
find all the files ending with " mkv " in current folder
find all the files in the folder / opt which have been accessed exactly 20 days ago
display all files in the file system which are bigger than 50MB and having size " filename " in them
Find a directory named ' project.images ' in the entire filesystem and show it in long listing format
Search the current directory tree for symbolic links to files matching pattern ' * test * '
Delete all files in the directory tree " empt1 " and " tmp / ignore2 " if they are newer than the file / tmp / txt "
Delete all .pyc files in the current directory tree
prevents curl from returning error ( 23 ) Failed writing body when grepping for foo
Find all files under current directory excluding hidden files
display all the java script files in the current folder
Search the current directory tree for files whose names end in " rb " or " js "
find all files which are modified after the modification time in the last 10 minutes
find all the " .wma " files in the folder " $ current _ directory "
Find files / directories under ' / usr ' directory tree that are newer than / tmp / stamp $ $ by modification time
Find all files / directories under $ FOLDER directory tree that start with ' " . ' and end with ' " ' in their names and were modified in less than $ RETENTION
Search the current directory recursively for files whose size is between 10 and 50 MB
Change the owner to " user " and group to " group " of files " file " ...
Rename file file.txt.123456 to file.txt
Find all .axvw files / directories under current directory
Search the .bash files in the current directory tree for string " bash "
Recursively finds files like ' * .js ' , and filters out files with ' excludeddir ' in path .
Change permissions to 644 for all directories in the / var / www / html / theDirectory /
Remove all .zip files that were last modified more than 2 days ago
Delete all hidden files under $ some _ directory
Create a symbolic link named " .bash _ profile " to " .bashrc "
find all ' * .c ' files under $ HOME directory which context contains sprintf
Find all files / directories under test directory that match the case insensitive regex . * / course [ 0-9 . ] * in their paths
Find files newer than / etc / motd files
find all the directories in current folder and delete them
Compress all " .txt " files in the current directory tree with gzip
Fix files to default permissions 644
Remove all vmware- * .log files under current directory
Recursively finds all files with whole word " pattern " in a current folder , and precedes found string with its number in file .
Find all files named ' foo ' under current directory tree without descending into directories named ' foo '
delete all the files in the current folder which do not belong to any user
Remove all files in the / myDir directory tree that were last modfied more than 7 days ago
Find all * .sql files under / working
Search all * .c files from the current directory tree for " hogehoge "
Find files / directories that isn ' t owned by the user ' apache ' under / var / www
Find files / directories that isn ' t owned by the user ' apache ' under / var / www
find all the normal / regular files in the folder " pathfolder " which have been modified in the last 24 hours .
display all the files in the current folder which have been modified in the last 2 days
Find all symbolic links under ' / proc / $ pid / fd ' directory tree with name pattern ' $ save _ path / sess _ \ * ' and update their timestamps
Save the user name of the current user to variable " x "
Remove all files named ' new ' under current directory tree and display their contents
Remove all files named ' new ' under current directory tree and display their contents
Print the current default full path of the " java " executable
Print absolute path of " YOUR _ PATH "
Set 644 permission to all regular files under / path
Change permissions to 644 for all regular files under var / www / html / and below
display all the files in current folder which have been modified in the last 24 hours whose name has only 1 letter
Find all files in the current directory tree whose path names match pattern ' . / sr * sc '
display all the directories in the current folder excluding those that are present in the aa directory tree
Find all the files whose name is tecmint.txt and contains both capital and small letters in / home directory
Find files in the / var / log folder which were modified modified 2 weeks ago
Remove files under / mnt / zip matching " * prets copy " with confirmation
Find all * . $ input _ file _ type files / directories under $ source _ dir with the null character as the delimiter
Search the current directory tree for .m4a files
Find all files under current directory matching the pattern ' [ error , access , error _ log , access _ log , mod _ jk.log ] * . [ 0-9 ] * ' in their names
Print lines 10000 to 10010 from input " seq 1 100000 "
Delete all hidden files under $ some _ directory
Removes all files from current folder but 5 newest ones , filtering out directories from initial search .
Print the path composed of the current working directory and the directory containing " $ 0 "
Remove all files from the / path / to / files directory tree modified more than 100 days ago
Print 1000 astarisk ( ' * ' )
Archive " / usr / local / " to " / BackUp / usr / local / " on host " XXX.XXX.XXX.XXX " via ssh and show progress
Replace all ' ' with ' - ' from standard input
find the file " httpd.log " in the entire file system
Find all the files under / etc directory which are larger than 50MB and delete them
Find files that are orphaned
Search the current directory recursively for * .txt files with lines that match regular expression " ^ string "
Find all files / directories under / var / log directory
Print whether the unique contents of " set1 " and " set2 " differ
Find all files / directories under current directory and print their paths
Remove all vmware- * .log files under current directory
Print the contents of " filename "
Find all files / directories under current directory tree that are newer than backup.tar.gz by modification time
Search for ' foo = ' in all * .png files under current directory without descending into * .gif and * .svn directories
Recursively copy " original _ dir " to " copy _ dir " preserving file / dir timestamps , displaying progress , and skipping files which match in size , keeps partially tran
Shows MAC address of network interface eth0 .
display all the regular / normal files in the current folder that are not accessed in the last 10 minutes
Find all files / directories with ' .mp4 ' extension under ' / home / wsuNID / ' directory tree
Find all files / directores that are newer than / etc / motd and conain the string ' top ' at the beginning of their names under user ' s home directory tree
Find any hidden regular files in the current directory and its sub-directories that were modified after .cshrc was last modified .
Find files named ' core ' in or below the directory / tmp and delete them
Search all files in the current directory tree whose names do not end with " .tex " or " .bib "
Display the host ' s ECDSA fingerprint using the sha256 hasing algorithm .
Print command history
Find all directories in the current directory tree that are not accessible by all
list all running jobs
Find all directories in the current directory tree that do not have ' execute ' permissions for anyone
Show the list of files that are owned by user wnj or are newer than file ' ttt '
Read a line from standard input in an interactive shell with prompt in variable " myprompt " interpreted as PS1 is interpreted
Print all directories under $ root appending a : ( colon ) at the end of each path without descending into directories matching the pattern . [ a-z ] *
display all the files in the folder " / home / mywebsite " which have been changed in the last 7 * 24 horus
Compare " file1 " and " file2 " line by line with 3 lines of unified context
display a long listing of all the files in the current folder in sorted order , which are bigger than 10KB
Print common lines in files " set1 " and " set2 "
display all the java script files in a folder
Search the current directory and all subdirectories for files that have 777 permissions and the permissions to 755
Print the current date followed by ' doing stuff '
Find all symbolic links under $ some _ directory that are larger than $ FOO _ LINER _ DIR
Search the current directory tree for all files matching either pattern " * .rb " or pattern " * .py "
Print the date followed by the host name
Saves real path of the folder containing the current script
Find all directories under maximum 1 level down the current directory and set their permission to 700 recursively
Count the number of files in the directory trees whose pathnames match pattern ' / dev / sd * [ a-z ] '
run " command " on server " host " as user " user "
Find all * .jpg files in the current directory and below .
Find all files / directories named ' document ' in the root filesystem partition
Display the 5 smallest files in the current directory and its sub-directories ignoring any empty files .
Remove all vmware- * .log files under current directory
Print command history
Search the source directory tree for files whose names begin with " album "
Search the regular files of the current directory tree for string " foo "
kill all background jobs
Archive " / usr / local / " to " / BackUp / usr / local / " on host " XXX.XXX.XXX.XXX " via ssh and show progress
Change the owner of " destination _ dir " to " user "
Find all files / directories under current directory tree whose names start with ' test ' followed by two digits and end with ' .txt ' extension
Find all files / directories under current directory tree that start with ' R ' and end with ' VER ' in their names and were modified more than 1 day ago
Find all files / directories under current directory that were accessed less than 1 day ago , are later than 2014-08-26
Search the / home / directory tree for files matching regular expression ' . * file [ 0-9 ] * $ '
Search directory / Users / Me / Desktop / directory tree for files with extensions .txt and * .mpg
Find all files under . / lib / app and sort them
Find all regular files that were modified more than 2 days ago under ' / path-to-directory ' directory tree , sort them according to timestamp and print the filenames preceded with the timestamps
Delete all files / directories with ' .pyc ' in their names under current directory tree
Find files / directories under ' / usr ' directory tree that are newer than / tmp / stamp $ $ by modification time
Find files owned by no user
Split " file.txt " into files of at most 20 lines each with a prefix " new "
Copies all files under current directory like ' * FooBar * ' to the ' ~ / foo / bar ' directory .
Print the current date followed by ' doing stuff '
Find all * .jpg files in the current directory and below , ignoring the case
Find all Executable files in the current directory tree and show the first one of them
Find all directories under $ workspace _ ts directory ( no-subdirectories ) and were modified more than 30 days ago
Find * .pl files / directories under / users / tom
Add a line number to every line in " infile "
Print ver lines of ' file ' content , formatted as 29-symbol wide column , regarding space symbol as a word separator
Search history for " part _ of _ the _ command _ i _ still _ remember _ here "
find all the files in the current folder which have been modified in the last one minute
Find all 400 permission files under / data directory , print ' Modifying ' appended with file path for each of them and change their permission to 755
Find all regular files excluding files ' .gz ' extension under ' / home / backups ' directory tree and were modified more than 1 day ago
Changes to the directory where ' ssh ' executable is located .
Archive files ( not directories ) in " sorce _ dir " to " target _ dir "
Remove regular files changed more than 15 days ago from the / tmp directory tree
find all the files in the folder " $ STORAGEFOLDER " which have been modified in the last 24 hours
Search the / dir directory tree for files whose names match regular expression ' . * 2015 . * \ ( album . * \ | picture . * \ ) '
Make directories " Labs / lab4a / folder1 " , " Labs / lab4a / myfolder " , and " Labs / lab4a / foofolder "
Print lines of ' file ' reverted order , and reverted characterwise
Represent the UTC date given in time string " 1970.01.01- $ string1 " as number of seconds since the epoch and save it in ' t1 ' variable
Find files bigger than 20 megabytes in the home directory tree
search for a regular / normal file myfile in the folder " / home / weedly "
Find files matching regular expression regexp
Find all * .java files under current directory and archive them to myfile.tar
find all the files in the directory which is pointed by $ 1 variable ending with the name held in the variable $ 2 or having the extension of value saved in the argument $ 2 .
Print content of ' filename ' file , showing all non-printing characters and displaying $ at the end of each line .
Read a line from standard input into variable " text " with the prompt " Enter Here : "
Recursively finds all folders in a current folder that contain files like ' .git ' .
Search for ' some string ' in all * js files under current directory and show the matched lines with line numbers
Find & replace broken symbolic links
Make directories " Labs / lab4a / folder1 " , " Labs / lab4a / myfolder " , and " Labs / lab4a / foofolder "
Perform a case insensitive search for * filename * files / directories under current directory tree
find all the files in the folder " $ STORAGEFOLDER " which have been modified in the last 24 hours
Find all files / directories that belong to the group ' accts ' under ' / apps ' directory tree
Save the absolute path of the current script to variable " SELF "
Search for files / directories which have read and write permission for their owner , and group and only read permission for others
Print the first 10 files or directories found in the / tmp directory tree by ' find '
Read a line from standard input into variable " message " with prompt " Please Enter a Message : " followed by a newline
Search for files / directories with the case insensitive pattern anaconda . * in var / log directory and create an archive ( file1.tar ) of the last block of files sent to xargs
Remove all files under / home / user / Maildir / .SPAM / cur
Find all * .andnav ( case insensitive ) files / directories under current directory and show a few lines of output from the beginning
Add the execute and read permission for all and the write permission for the user to the dir _ data directory and all of its sub-directories .
Recursively copy all files and directories in " demo " excluding " .git " to " demo _ bkp "
find files ( under root file system / ) that were accessed within the last 24 hours
Move all files and directories in the current directory to " / tmp / blah / "
Find all files in the ' sourceDir ' directory tree
Print unique lines in sorted file " a.txt " compared to sorted file " b.txt "
Search the current directory tree for regular files changed on the 10th of September
Calculate md5 checksum of theDirname
Find regular files matching pattern " * oraenv * " and excecute the " file " utility for each of them
Save the system host name to variable " myHostName "
Archive files ( not directories ) in " sorce _ dir " to " target _ dir "
find all files in the current folder which are bigger than 2MB and less than 50 MB
Find all files under current directory that were modified in the last 24 hours and also include the files that were modified in less than 1 day ago
Find x * files / directories under / tmp directory whose status was changed less than 1 day ago
Find all regular files under $ DIR directory tree whose paths match the regex " . * \ . $ { TYPES _ RE } " where $ { TYPES _ RE } expands as a variable
display list of all the hidden regular / normal files in the directory " / dir / to / search / "
Find all regular files that contain ' linux ' ( case insensitive ) in their names under ' / root ' directory tree
Find all files under / somefolder matching the pattern expanded by $ FILE _ PATTERN in thier names
Print the files in the current directory as a list of comma separated values
Print the files in the current directory as a list of comma separated values
Find files in the level 3 of directory tree ~ / Music and SVN files
Print only file names from / etc / group .
Prints long listing of content in a root folder , including hidden files , with human-readable sizes , and stores output to ' / root / test.out ' file .
Save the CURRENT _ PID = ' echo $ MY _ DIRECTORY Y ' variable
find all the files that have been modified exactly yesterday ( from 00 : 00 to 23 : 59 yesterday )
Search the file hierarchy for files larger than 100000 KB without searching any mounted removable media
Print only lines from ' file1.txt ' that not present in ' file2.txt ' and beginning with ' Q '
find regular files under the " mail " folder under the user ' s home directory , displaying filenames and lines that contain the text " Linux "
Move all files in the current directory tree that match " some _ pattern " to " target _ location "
Remove all regular non-hidden files modified more than 7 days ago and residing in the / tmp directory tree
Search the current directory tree for .m4a files
Create symbolic links in current directory for all files located in " dir " directory and have filename extension " jpg "
Find files matching regular expression regexp
Make directory " / tmp / x / y / z / " on remote host before archiving " file " to " user @ remote : / tmp / x / y / z / "
Find all files in the ' sourceDir ' directory tree
Correct permissions for directories in the web directory
find all the files that have been modified exactly yesterday ( from 00 : 00 to 23 : 59 yesterday )
Find all the files without permission 777 under current directory and show a few lines of output from the beginning
Count the number of files in the directory trees whose pathnames match pattern ' / dev / sd * [ a-z ] '
Find and print the names of all files found in the current directory and all of its sub-directories
Search the current directory tree for hidden files skipping .htaccess
Remove regular files matching pattern " * oraenv * " and excecute the " file " utility for each of them
Find all 400 permission files under current directory
display all the " xbl " files in the folder " / home / david " which have been modified in the last 48 hours
Find all xml files under current directory and archive them to .bz2 archives
Search the / usr / bin directory tree for regular files modified or created less than 10 days ago
Keep the last 4 ASCII characters ( bytes ) of a string .
Find all files / directories under current directory tree whose paths match the regex ' filename-regex . \ * \ .html '
Find all .txt files in current directory and rename with .html .
Find all 400 permission files under current directory
Remove the files from the home directory tree that were last accessed more than 100 days ago , with confirmation
Find all files under $ dir directory whose size is greater than 24000 bytes
find all the files in the folder " $ STORAGET " which have been modified in the last 1 day and display the last 2 days
Remove all files whose names end with " ~ " in the / home / peter directory tree
find all files in the file system which have been accessed in the last 24 hours
Print out the full path name of " mypathname " with dots resolved
Read a line from standard input into variable " message " with escaped prompt " \ nPlease Enter \ na Message : ' "
find all the pdf files in the current folder
Move all files matching patterns " * .old " , " .old " , " . * .old " from the current directory to directory " .. / old / "
Search for " LOG " in jsmith ' s home directory tree
Print the names and sizes of regular files residing in the " dir " directory tree
display all the files having spaces in the current folder
display a long listing of all the files in the current folder in sorted order , which are bigger than 10KB
Find all files in the current directory tree that are newer than some _ file
Compares two listings ' ls ' and ' ls * Music * ' , showing only strings that unique for first listing .
Sort file " file " by line
Find all files / directories under / path directory that have modified in the last 2 days and contain ' blah ' ( case insensitive ) in their names
Remove regular files matching pattern " * oraenv * " and excecute the " file " utility for each of them
Find all files under current directory excluding hidden files
Go into the first directory whose name contains 1670
Delete all files under $ { S _ TO _ IP } directory tree that match pattern " $ { TO _ IGNORE [ @ ] } $ "
find all the files in the current folder which do not belong to any user
Find all files / directories under / Path / bar and set their permission to the user ' s home directory and set their group to ' my _ user '
Find all files / directories under $ TARGET _ DIR directory tree matching the posix extended regular expression \ " . * / $ now . * \ " ( where $ now is a variable ) and save the output in file $ FILE _ LIST
Find all * .png files , changing the string " ExPooBar " in their names and copy them to / Users / tommye / Desktop / LP
Remove all files whose names begin with " no-such-thing " in the / home / peter directory tree
Saves byte size of $ myvar variable value in the ' var2 ' variable .
Find all * .andnav ( case insensitive ) files / directories under current directory and show the first one found
Find all * . * files under current directory and search for ' bar ' in those files
Mount " / tmp / loop.img " on " / mnt / image " as a loop back device
Search through the / usr directory for all files that begin with the letters Chapter , followed by anything else .
Find all files in the current directory tree whose size is greater than 1MB , and move them to the " files " folder with confirmation
Find all xml files under current directory and archive them to .bz2 archives
Make directory " dir " and do not cause an error if it exists
Search directory tree ' MyApp.app ' for directories whose name is ' Headers ' and delete them in an optimized way
Find all files / directories in directories / files taken from the glob pattern ' / tmp / test / * ' recursively that have not been modified from the start of the day
Change to location of ' $ TARGET _ FILE ' file .
Counts lines in each of * .php files in a current folder and subfolders ignoring ' tests ' folder and prints total count as well .
Make all directories in the current directory tree accessible to anybody
Search for ' string-to-find ' in all files under current directory tree and show the matched lines with their filenames
Archive " src " to " dst " updating files existing in " dst "
Compare files " A1 " and " A2 " with 3 lines of unified context and print lines beginning with " + "
Print the 5th space separated fields in " file " as a comma separated list
Archive " / usr / local / " to " / BackUp / usr / local / " on host " XXX.XXX.XXX.XXX " via ssh and show progress
Find all directories under / home / mywebsite / public _ html / sites / all / modules and set their permission to 750
Find all CSS files ( and directories ending with " .css " ) under the current directory tree and print the full paths to the directories containing them
Change directory to the output of command ' ~ / marker.sh go " $ @ " '
Display a named character dump of " test.sh "
Wrap each line in " file.txt " to fit in 80 characters
find all the files in the current directory and sub-directories , that were edited within the last 1 hour and execute the list command with long listing format
Remove duplicate phrases and keep the original order of lines in " $ infile "
Find all .tmp files under and below the / tmp / directory and remove them
display all the files in the current folder which have not been modified in the last 7 days and which are not in the list " file.lst "
Suffix all files and folders in the current directory with " _ SUF "
Print comma separated gaps in file " file " that contains new line separated ordered numbers
find all the files in the file system that start with " win " and searched only in the mounted file systems
Remove duplicate phrases and keep the original order of lines in " $ infile "
Remove duplicate phrases and keep the original order of lines in " $ infile "
Find all .sql files in the current directory recursively and print their path names separated by zeroes
find all the files in the file system which have been accessed in the last 1 day
Print only common strings in sorted content of files ' file1 ' and ' file2 '
Find all files / directores under ' / nas / projects / perl ' directory tree that were modified within the last day
Delete all files under $ INTRANETDESTINATION / weekly directory tree that were modified more than 32 days ago
Save the absolute path of " $ path " to variable " fullpath "
Delete all files under user ' s home directory tree that were accessed more than 365 days after their status was changed
find all the files in the current folder which start with t and have been modified between one hour ( 60 minutes ) and 12 hours ( 720 minutes ) ago .
Find all files / directories with ' .log ' extension that belong to the group ' adm ' under ' / var / log ' directory tree
Save the first line of " $ j " into variable " k " in ksh
Find all regular files under $ FOLDER directory tree that start with ' " . ' and end with ' " ' in their names and were modified in less than $ RETENTION days excluding the files whose contents match one of the regular expressions defined per line in file $ SKIP _ FILE
Rename all files matching " access.log. < number > .gz " incrementing < number > .
Archive " / path / to / sfolder / " to " name @ remote.server : / path / to / remote / dfolder " preserving hard links and compressing the data during transmission
Decompress " path / to / test / file.gz " to standard output and save all lines matching " my regex " to files with a 1000000 line limit
Print content of ' my _ script.sh ' file in the current directory tree
Print a count of each unique line in " ip _ addresses "
Compare " file1 " and " file2 " line by line with 3 lines of unified context
Read a line from standard input with a timeout of 0.1 seconds and prompt " This will be sent to stderr "
Recursively change ownership of " / usr / lib / node _ modules / " to the current user
Remove all files under / home / u20806 / public _ html / that were modified more than 20 days ago
Compare " fastcgi _ params " and " fastcgi.conf " line by line , output 3 lines of unified context , and print the C function the change is in
display a long listing of all the files in the current folder in sorted order , which are bigger than 10KB
Move all files / directories under ' / var / cache / ' directory tree to the ' .data ' directory
Find files in entire file system that are writable by group or other
Display hardware platform , ie. x86 _ 64 even if current kernel uses 32-bit addressing .
Recursively find files in the current directory with a modification time more than 7 days ago , save the filenames to " compressedP.list " , and compress no more than 10 at a time
Recursively copy " / path / to / data / myappdata / * .txt " to " user @ host : / remote / path / to / data / myappdata / "
Find all regular files starting from level 3 of directory tree ~ / container and move them one level up
Show system information : kernel name , hostname , kernel release and version , machine architecture , processor type , hardware platform , and operating system type .
Search for all the files in man pages and return the manual page for grep
find all the files in the folder " / p / cache / " which are present in the same partition as that of the current folder
Removes all files like ' A * .pdf ' from current folder without prompting .
Find all files / directories named ' comma-XXXX ' under ' / path / to / dir ' directory tree
display all the files ending with " .user " or beginning with " admin " or ending with " .user.gz " in / var / adm / logs / morelogs / and excluding all regular files
Find all files / directories under current directory [ a-z ] with the options / home / user / Desktop / home / daily / Mic / Desktop / directory
Remove last two underscore-delimited fields and following characters in " t1 _ t2 _ t3 _ tn1 _ tn2.sh " keeping only " t1 _ t2 _ t3 "
Find all files under ' / raid / 01 / WordP.com ' directory tree , count the number of lines for the case insensitive pattern ' ^ MANTER '
Read a single character from standard input into variable " runCommand " with the prompt " Pick a letter to run a command [ A , B , or C for more info ] "
Print common lines in files " set1 " and " set2 "
Find all files / directories under / home / david / public _ html / , and change their permissions to 644
Strips two last sections from the path $ pathname , and prints basename of the rest part .
Decompress " path / to / test / file.gz " to standard output and save all lines matching " my regex " to files with a 1000000 line limit
Find all files with space in their names under current directory and rename them by replacing all spaces with _
