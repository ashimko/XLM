cd dir1 dir2
mkdir / tmp / foo
mount -l -t nfs4
join a
ls ' readlink somelink '
join -1 2 -2 1 text.txt codes.txt
find . -name * .pdf
find -name " text "
mkdir / tmp / foo
date ' + % Y ' --date = ' 222 days ago '
find -type d
find . -mtime + 1
find . -perm 777 -print
cat $ i | xargs mv -t dir . $ count
find . -perm 0777 -type f -exec ls -l { } \ ;
find . -type d -daystart -mtime 0
find . -path ' * f '
ls -ld
echo " 1 \ n2 \ n3 \ n4 \ n5 " | paste -s -d , / dev / stdin
find -mindepth 3 -maxdepth 3 -type d | grep " New Parts "
echo " fifo forever " | cat - fifo | tee fifo
your / dir = $ ( mktemp -d )
mount | grep nfs
nl file
find . -name \ * .java | tr ' \ n ' ' \ 0 ' | xargs -0 wc
find . -type f -name " * .java " -exec grep -l StringBuffer { } \ ;
find . -name ' * .java '
find . -name " * .java " -print0 | xargs -0 wc
find . -type f -executable -print
find . -mtime + 1
find . -type f -ls
find / -name filename
find / -iname " filename "
find . -name mmm -prune -o -print
echo $ ( basename $ ( dirname $ ( dirname $ pathname ) ) )
echo " 1 \ n2 \ n3 \ n4 \ n5 " | paste -s -d , / dev / stdin
ping -c 1 127.0.0.1 # ping your adress once
chmod 644 img / * js / * html / *
md5sum / path / to / destination / file
find . -type f -empty -delete
find . -name " * .txt " -delete
find . -type f -name " * .mp3 " -exec cp { } / tmp / MusicFiles \ ;
find . -type f -not -name " * .html "
find . -type f -exec shell { } \ ;
find . -name ' * .java '
find -type d -empty -exec rmdir -vp --ignore-fail-on-non-empty { } +
find . -printf " % y % p \ n "
find . -maxdepth 1 -not -name " " . -print0 | xargs --null chown -R apache : apache
find . -type f -print0 | xargs -0 wc -l
find " $ { S } " -type f
find | sort
find | sort
find / dir -type f -print0 | xargs -0i cat { } | grep whatever
echo " a b c d e " | tr ' ' ' \ n ' | tail -1
find images -type f
chmod 644 img / * js / * html / *
ssh -N -L 2222 : remote.example.com : 22 bridge.example.co
join -t , in1 in2
find / -type d ! -perm 777
find . -type d -empty -print0 | xargs -0 / bin / rmdir
find . -size -300M
find . -mtime 0
find . -name " * ... * "
abspath = $ ( readlink -e $ path )
echo " 1 \ n2 \ n3 \ n4 \ n5 " | paste -s -d , / dev / stdin
echo " 1 \ n2 \ n3 \ n4 \ n5 " | paste -s -d , / dev / stdin
find . -print | grep -i foo
md5sum / path / to / destination / file
cat infile.txt | tr -d " [ : space : ] " | fold -80
cat report.txt | grep -i error
cat / dev / urandom | tr -dc ' a-zA-Z0-9 '
cd $ ( which oracle | xargs dirname )
find / usr -type f -name " * .sxw " -atime -3 -user bruno
find X -type f -exec chmod 400 { } \ ;
find . \ ( ! -regex ' . * / \ .. * ' \ ) -type f -name " whatever "
find / home / www -type f -print0 | xargs -0 chmod 644
find / home -user joe
ls -t * .log | tail - $ tailCount | xargs rm -f
ls / home / ABC / files / * .csv | rev | cut -d / -f1 | rev
find . -type f -iname * .mp3
find / tmp / foo -path / tmp / foo / bar -print
find . -print | grep -i foo
curl https : / / www.npmjs.com / install.sh | sh
cat / dev / urandom | tr -dc ' a-zA-Z0-9 '
find / usr -type f -name " * .sxw " -atime -3 -user bruno
join a
find . -type f -perm 0777 -print
find . -type f -not -name " * .html "
find . -type f -exec chmod 400 { } \ ;
find . \ ( ! -name . -prune \ ) -name " * .c " -print
find . -name ' * .java ' -mtime + 7 -print
find . -not -iwholename ' . / var / foo * ' -exec chown www-data ' { } ' \ ;
finger | sort -u
find / -name filename.txt -print
fullpath = ' readlink -f " $ path " '
ls / home / ABC / files / * .csv | rev | cut -d / -f1 | rev
echo -e " \ n / usr / local / boost _ 1 _ 54 _ 0 / stage / lib " | sudo tee -a / etc / ld.
tree -p -d
rm -fR " $ { TMP } / " ;
rename ' s / ^ fgh / jkl / ' fgh *
ssh-keygen -l -f / etc / ssh / ssh _ host _ ecdsa _ key.pub
find your / dir -prune -empty -type d
find bla -name * .so -print0 | sort -rz
find . -type f | xargs grep " text "
find . / -type l -name " * .r * "
find . -print | grep -i foo
grep " ^ core id " / proc / cpuinfo | sort -u | wc -l
grep -o . file | sort -f | uniq -ic
find / -name " testfile.txt "
ssh -i ~ / .ssh / gitkey _ rsa " $ @ "
ssh -i ~ / .ssh / gitkey _ rsa " $ @ "
sudo chown ' whoami ' / vol
cat / dev / urandom | tr -dc ' a-zA-Z0-9 '
find / home -type d -name testdir
find / tmp -type f -mtime -30 -exec cp { } / tmp / backup \ ;
diff -r dir1 dir2
find . -name * .rpm
find / mnt / hda1 / zdjecia / test1 / -iname " * .jpg " -type f -exec cp { } -rv / mnt / hda1
find . -type f -print0 | xargs -0 wc -l
find / usr -name photoA.jpg
ls -d . / * /
ls -d . / * /
ls -tr | head -n -5 | xargs rm
chown -R $ 1 : httpd *
mount / -o remount , rw
mount / -o remount , rw
find . -type d -maxdepth 1 -exec rm -r { } \ ;
find . -depth -name .svn -exec rm -fr { } \ ;
find / -type d -name " needle "
split -b 1024m " file.tar.gz " " file.tar.gz.part- "
find . ! -user john
find . -maxdepth 1 -type f -daystart -mtime + 0
find / home -size + 10M -size -50M
LINES = $ ( cat / some / big / file | wc -l )
find . -type f -print0 | xargs -0 rm
find / path / to / directory / folder { ? , [ 1-4 ] ? , 50 } -name ' * .txt '
TMP _ FILE = " $ ( mktemp -t ) "
find ~ -type f -name test-a -execdir mv { } test-10 \ ;
find . -name photoA.jpg photoB.jpg photoC.jpg
find . -name somename.txt
ls -d . / * /
chmod 755 / folder -R
df -k / example
grep -o . file | sort -f | uniq -ic
find ~ -type f -name test-a -execdir mv { } test-10 \ ;
join -v 1 < ( sort file1 ) < ( sort file2 )
timestamp = ' date --rfc-3339 = seconds '
find / home -xdev -inum 2655341 | xargs rm
find . -name ' * .js ' -and -not -path directory
find / path -perm / ugo + x
find / home -size + 900M -exec ls -sh { } \ ;
find . -group passwd
find -name ' * macs '
find / var / www -name * .pl
echo -n " yourstring " | md5sum
find . -type f -exec rm -fv { } \ ;
find . -exec grep -l foo { } +
touch -d " $ ( date -r filename ) - 2 hours " filename
find . -iname ' * .old ' -delete
find / usr -name ' * .foo ' -print
FOLDERS = $ ( find . -type d | paste -d , -s )
FOLDERS = $ ( find . -type d | paste -d , -s )
gzip -d --stdout file.gz | bash
ping google.com | xargs -L 1 -I ' { } ' date ' + % c : { } '
find . -depth -name .svn -exec rm -fr { } \ ;
bind $ ' " \ x61 " ' : self-insert
timestamp = $ ( find . / $ dir -type f -printf " % T @ % t \ \ n " | sort -nr -k 1,2 | head -n 1 )
find -name " * .jpg " | xargs tar czvf images.tar.gz
find . -type d -empty -print0 | xargs -0 / bin / rmdir
find ' pwd ' -name " accepted _ hits.bam "
find . -path " * / 1 / lang / en.css ' -print
find . -depth -name * .zip
find / file / path ! -newermt " Jul 01 " -type f -print0 | xargs -0 rm
MOD _ DATE1 = $ ( date -d " $ MOD _ DATE " + % s )
read -t5 -n1 -r -p ' Press any key in the next five seconds ... ' key
find . -exec grep -l foo { } +
find . -iname ' * .old ' -delete
find . -type d -printf " % A @ % p \ n " | sort -n | tail -n 1 | cut -d " " -f 2-
find . -type f -name " * .php " -exec grep --with-filename -c " ^ use " { } \ ; | sort -t " : " -k 2 -n -r
find " $ STORAGEFOLDER " -name .todo -printf ' % h \ n '
find . -type f -iregex ' . * \ .jpe ? g '
find / usr / spool / mail -type d | xargs chmod 755
ls -t * .old | sort -u -t , -
LGT _ TEMP _ FILE = " $ ( mktemp --suffix .cmd ) "
comm -12 < ( cut -d " " -f 3 file1.sorted | uniq ) < ( cut -d " " -f 3 file2.sorted | uniq ) > common _ valu
fullpath = ' readlink -f " $ path " '
env $ ( cat .env | xargs ) rails
ping -w 1 $ c
v = $ ( whoami | tr ' a-z ' ' A-Z ' )
mount -o remount , ro -t yaffs2 / dev / block / mtdblock3 / system
find . - \ ( -name " myfile [ 0-9 ] [ 0-9 ] " -o -name " myfile [ 0-9 ] " \ )
find / usr / local -type d | xargs chmod 755
chmod 600 file
md5sum * .java | sort | uniq -d
touch -d ' 30 August 2013 ' * .php
find . \ ( -name " my * " -o -name " qu * " \ ) -print
find . \ ( -name " * .txt " -o -name " * .pdf " \ )
find / home -xdev -samefile file1 | xargs ls -l
find . -type f -print0 | xargs -0 -e grep -nH -e MySearchStr
gzip -d --stdout file.gz | bash
ls | xargs -n 1 cp -i file.dat
echo gzip . $ ( gzip | wc -c )
find . / -iname ! -iname dirname
grep -rnw ' pwd ' -e " pattern "
find . -not -name " * .pl " -not -name " * .sh " -not -name " * .py "
find . -inum $ inum -exec rm { } \ ;
find / -name " * .gz " -exec zcat " { } " + | grep " test "
find / directory1 / directory2 / -maxdepth 1 -type f | sort | tail -n 5 | xargs md5sum
find . -not \ ( -name .svn -prune -o -name .git -prune -o -name CVS -prune \ ) -type f -print0 | xargs -0 file -n | grep -v binary | cut -d " : " -f
find media / -type f -exec chmod 700 { } \ ;
find / var / www / -name wp-config.php -maxdepth 2
find . -depth -empty -type d
find . -name " * .JUKEBOX. * .txt " -maxdepth 1 -print0 | xargs -0 -IFILE mv FILE . / JUKEBOX
echo -e " \ n \ n \ n " | ssh-keygen -t rsa
directories = $ ( diff -qr directory directory.original | cut -d ' ' -f2 | xargs dirname | uniq )
match = $ ( echo " $ { line } " | egrep -o ' run-parts ( - { 1,2 } \ S + ) * \ S + ' )
echo " $ url " | cut -d ' : ' -f1
wc -l * * / * .php
ping -c 5 google.com | grep " round-trip " | cut -f 5 -d " / "
read -e -p " Enter your choice : " choice
find . -depth -name .svn -exec rm -fr { } \ ;
chgrp forge / var / run / fcgiwrap.socket
sudo chmod 755 -R / opt / lampp / htdocs
cd ' basename " $ 1 " '
find TBD / * -mtime + 1 -exec rm { } \ ;
find TBD / * -mtime + 1 -exec rm { } \ ;
find . -type f -print | xargs ls -l
join -ba -nln active _ record.rb | grep ' ^ 111 '
find . -type f -name " Foo * " -exec rm { } \ ;
find / -type f -name * .mp3 -size + 10M -exec rm { } \ ;
find ~ -type f -name " * .txt " -delete
join < ( sort index ) < ( nl strings | sort -b )
join standard input | sort -k1,2 -t ' ; ' --stable some _ data
find -iname ' * .java ' | xargs grep ' class Pool '
find / home / kibab -name ' * .png ' -exec echo ' { } ' ' ; '
find -printf " % y % i % prn "
ls | xargs -n 1 cp -i file.dat
ls -1 | tr ' [ A-Z ] ' ' [ a-z ] ' | sort | uniq -c | grep -v " 1 "
rev file.txt | cut -d ' ' -f1 | rev
find / -maxdepth 1 -name " * .pdf " -print0 | xargs -0 rm
ssh-keygen -l -f / etc / ssh / ssh _ host _ ecdsa _ key.pub
find . / -iname ! -iname dirname
find / -fstype ext3 -name zsh *
ssh -S my-ctrl-socket -O exit jm @ sampledomain.com
ssh -S my-ctrl-socket -O exit jm @ sampledomain.com
find teste1 teste2 -type f -exec md5 -r { } \ ; | sort
find . -name ' * .cgi ' -print0 | xargs -0 chmod 755
find / usr / ports / -name pkg-plist \ * -exec grep ' unexec.rmdir % D ' ' { } ' ' + ' | wc -l
find -amin + 25 -amin -35
find -name ' * .png ' | grep -f ' some string '
echo ' date + " % a % x % X " ' ' hostname '
echo " largest 22 2 2 a b c d e " | tr ' ' ' \ n ' | tail -1
t1 = $ ( date -u -d " 1970.01.01- $ string1 " + " % s " )
grep -r " string to be searched " / path / to / dir
find -L . -type f \ ( -perm -u = x -o -perm -g = x -o -perm -o = x \ )
tac a | grep -m1 -oP ' ( ? < = tag > ) . * ( ? = < / tag > ) '
find / -type f -name * .mp3 -size + 10M -exec rm { } \ ;
find / home / musicuser / Music / -type d -iname " * $ 1 * " -iname " * $ 2 * " -exec echo { } \ ;
find -name " * .txt " -print0 | xargs -0 rm
find / -user tutonics -name " file.txt "
ls -hal / root / | sudo tee / root / test.out
echo " largest 22 2 2 a b c d e " | tr ' ' ' \ n ' | tail -1
chown -R : daemon / tmp / php _ session
df $ path _ in _ question | grep " $ path _ in _ question $ "
ps | egrep 11383 | tr -s ' ' | cut -d ' ' -f 4
( GNU specific ) ( echo " $ { 1 : -P } [ 0-9 ] } " )
mv -T www _ new www
find . -type f -print | xargs grep -il ' ^ Subject : . * unique subject '
dig -x $ IP | grep PTR | cut -d ' ' -f 2 | grep google | cut -f 5
find . -type f -name " * .pl " -print0
find . -name ' * .cgi ' -print0 | xargs -0 chmod 644
find | rename ' s / \ .jpg $ / .jpeg / '
find ! -path " dir1 " ! -path " dir2 " -name " * foo * "
ls -l $ SEARCH _ PATH
diff < ( ls / bin ) < ( ls / usr / bin )
PS4 = ' + $ ( date " + % s . % N " ) \ 011 '
column -t -s $ ' \ t ' list-of-entries.txt
find / full / path / to / dir -name " * .c " -exec rm -f { } \ ;
find . -name vmware- * .log | xargs rm
rsync --specified / ' echo " $ { TMP } / " ;
chgrp forge / var / run / fcgiwrap.socket
find . -name " _ temp _ * " | xargs rm
END _ ABS = ' pwd -P '
find . -name " * .txt " -exec ls -la { } \ ;
find / -name * .mp3 -fprint nameoffiletoprintto
find -name file1 -ok mv { } { } _ 2 \ ;
find . -mindepth 1 -maxdepth 1 -type d | xargs -n 1 cp -i index.html
sort -m < ( zcat $ part0 | sort ) < ( zcat $ part1 | sort ) ...
chmod 755 / folder -R / where / .. / node _ modules /
joblist = $ ( jobs -l | tr " \ n " " ^ " )
find / \ ! \ ( -newer ttt -user wnj \ ) -print
find . -type f -name " postgis-2.0.0 "
find . -perm 040 -type f -exec ls -l { } \ ;
ln -a $ ( readlink -f $ origlink ) $ newlink
find . -name " * .swp " -exec rm -rf { } \ ;
target _ PWD = $ ( readlink -f . )
find / usr / local -name " * .html " -type f -exec chmod 644 { } \ ;
grep -v ' kpt # ' data.txt | nl -nln
grep " $ ( cat file1.txt ) " file2.txt
grep -f file2 file1 | sort | uniq
cd ' find . -name Subscription.java | xargs dirname '
find . ( -name a.out -o -name * .o ) -print
find . -type f -name " * .php " -exec grep --with-filename -c " ^ use " { } \ ; | sort -t " : " -k 2 -n -r
find -type f -maxdepth 1 -writable
which -a rename | xargs readlink -f | xargs file
cp -R t1 / t2
cp -rf --remove-destination ' readlink file ' file
mount | grep -q ~ / mnt / sdc1
find / usr / local / svn / repos / -maxdepth 1 -mindepth 1 -type d -printf " % f \ 0 " | xargs -0 -I { } echo svnadmin hotcopy / usr / local / svn / repos / \ {
find . / -type f -exec grep -H ' text-to-find-here ' { } \ ;
find / -fstype ext3 -name zsh *
cd $ ( dirname $ ( readlink -f $ 0 ) )
find foo -type f -not -path ' * / not-from-here / * ' -exec cp ' { } ' ' / dest / { } ' \ ;
find . -name " * .txt " -exec ls -la { } \ ;
find / home -xdev -samefile file1 | xargs ls -l
find . -type f -name ' * . * ' -iregex ' . * \ .rb $ ' -exec grep -H ' string ' { } \ ;
gzip -d --stdout file.gz | bash
read -r -p " Are you sure ? [ Y / n ] " response
find / full / path / to / dir -name " * .c " -exec rm -f { } \ ;
find . -maxdepth 1 -name " name1 " -o -name " name2 "
find . -exec grep -l foo { } +
mv -T www _ new www
find . -name " _ temp _ * " | xargs rm
find . -type f -iname " * .txt " -print | xargs grep " needle "
find . -name ' * .h ' -execdir diff -u ' { } ' / tmp / master ' ; '
find root -type -f -cmin + 30 -delete
find ! -path " dir1 " ! -path " dir2 " -name " * foo * "
find / etc / -iname " * " -type f -print0 | xargs -0 grep -H " nameserver "
find -name ' * .ogg ' -exec chmod g + s { } \ ;
find . -mindepth 1 -maxdepth 1 -type d | xargs -n 1 cp -i index.html
finger | cut --complement -c36-40
env | grep ' ^ GOROOT '
find ~ / junk -name ' cart [ 4-6 ] ' -exec rm { } \ ;
find . / -iname ! -iname dirname
chown -R root : root / var / cache / jenkins
sudo find / path / to / someDirectory -type d -print0 | xargs -0 sudo chmod 644
cat $ i | xargs mv -t dir . $ count
touch $ ' Icon \ r '
cd ' find . -name " config " '
find / home -type f -name * .mp4 -size + 10M -exec rm { } \ ;
END _ ABS = ' pwd -P '
find . -name modules
find / tmp / -depth -name " * * " -execdir rename ' s / / _ / g ' " { } " \ ;
gzip year.gz | tar xvf -
$ ls -Fltr " . / my dir " " . / anotherdir "
mount / path / to / device / path / to / mount / location -o loop
dig TXT + short o-o.myaddr.l.google.com @ ns1.google.com
find . -not -name " * .pl "
find . -name ' * .png ' | grep -f search.txt
grep -r " string to be searched " / path / to / dir
od file-with-nulls | grep ' 000 '
chown -R : daemon / tmp / php _ session
sudo chown ' whoami ' / vol
diff -y / tmp / test1 / tmp / test2
find . -name * .jpg -exec scp { } / home / peter / macoo.pdf { } \ ;
find . -ok tar rvf backup { } \ ;
find / Path -name " file _ name * "
chgrp pub public
cpio -i -e theDirname | md5sum
cd ' ls -d * / | grep 1670 '
du -csxb / path | md5sum -c file
find / home / mine -iname " * .png " -execdir cp { } / home / mine / pngcoppies / copy { } \ ;
sort -m < ( zcat $ part0 | sort ) < ( zcat $ part1 | sort )
read -r -n 1 -p " $ { 1 : -Continue ? } [ y / n ] : " REPLY
find / mnt / zip -name " * prefs copy " -print0 | xargs -0 -p / bin / rm
find . / -iname ! -iname dirname
grep ' ^ core id ' / proc / cpuinfo | sort -u | wc -l
grep -v ' ^ $ ' | paste -s -d " " , -
grep -r " string to be searched " / path / to / dir
split -l 20 $ FILENAME xyz
script1 = ' mktemp / tmp / .script.XXXXXX ' ;
md5sum * .java | grep 0bee89b07a248e27c83fc3d5951213c1
chown -R $ 1 : httpd *
mv new old -b -S .old
END _ ABS = ' pwd -P '
find / foo / bar -name ' * .mp4 ' -exec mv -t / some / path { } +
FOLDERS = $ ( find . -type d | paste -d , -s )
ls ' which g + + ' -al
LOGNAME = " ' basename " $ 0 " ' _ ' date " + % Y % m % d _ % H % M " ' "
comm < ( sort f1.txt ) < ( sort f2.txt )
sort -m < ( zcat $ part0 | sort ) < ( zcat $ part1 | sort ) ...
sort -m < ( zcat $ part0 | sort ) < ( zcat $ part1 | sort )
find . -ok tar rvf backup { } \ ;
find . | grep -v xml | xargs rm -rf { }
split -b 1M -d file.txt file --additional-suffix = .txt
chown $ FUID : $ FGID " $ FILE2 "
chown $ FUID : $ FGID " $ FILE2 "
cp --help
( GNU specific ) Display info | grep ' inet addr : '
find / nginx / -path ' * / ignored _ directory ' -prune -o -name fileName.txt -print
find / usr \ ( -name doc -and -type d \ )
find . -exec $ 0 { } +
founddata = ' find . -name " filename including space " -print0 '
wc -l ' find . -type f -name ' * .txt ' '
echo " $ ( dirname $ ( readlink -e $ F ) ) / $ ( basename $ F ) "
find . | grep -v xml | xargs rm -rf { }
od -t x1 -t a / dev / ttySomething
mv * / tmp / blah /
cal -h | cut -c 4-17 | tail -n + 3
cd ' ls -d * / | grep 1670 '
find / usr / ports / -name work -type d -print -delete
find ' pwd ' -name " accepted _ hits.bam "
find / usr / local -name " * .html " -type f -exec chmod 644 { } \ ;
grep -rnw ' pwd ' -e " pattern "
shopt -s expand _ aliases extglob xpg _ echo
rsync -a --sparse / tmp / test / sparse-1-copy / file
find . -type f -name " * html " | xargs tar cvf htmlfiles.tar -
finalName = $ ( basename -- " $ ( dirname -- " $ path " ) " )
find / foo / bar -name ' * .mp4 ' -exec mv -t / some / path { } +
echo " The script you are running has basename ' basename $ 0 ' , dirname ' dirname $ 0 ' "
mount -o rw , remount -t rfs / dev / stl12 / system
rsync -a -v --ignore-existing src dst
find $ 1 -type f -not -regex ' . * / \ .. * ' -exec $ 0 hashmove ' { } ' \ ;
find $ 1 -type f -not -regex ' . * / \ .. * ' -exec $ 0 hashmove ' { } ' \ ;
mydir = $ ( mktemp -d " $ { TMPDIR : - / tmp / } $ ( basename $ 0 ) .XXXXXXXXXXXX " )
echo " The script you are running has basename ' basename $ 0 ' , dirname ' dirname $ 0 ' "
echo " The script you are running has basename ' basename $ 0 ' , dirname ' dirname $ 0 ' "
ssh-keygen -f " / root / .ssh / known _ hosts " -R gitlab.site.org
ssh -S my-ctrl-socket -O exit jm @ sampledomain.com
sudo find / var / www -group root -o -nogroup -print0 | xargs -0 chown www-data : www-data
END _ ABS = ' pwd -P '
find . -iname ' * .pdf ' -exec grep -H " function " { } \ ;
OUTPUT = ' top -b -n 1 | tail -n + 8 | head -n 1 '
find / home / u20806 / public _ html -name " robots.txt " -o -maxdepth 1 -mmin + 5 -type f -name " * .txt " -delete
find . / -mtime + 3 -exec rm -rf { } \ ;
grep Subject : \ [ SPAM \ ] ' | wc -l
ping -c 4 -q google.comz
shopt -s expand _ aliases extglob xpg _ echo
cat files | sort -t- -k2,2 -n
cd $ ( ~ / marker.sh go " $ @ " )
find / var / tmp / stuff -mtime + 90 -exec / bin / rm { } \ +
find $ 1 \ ( -name " * $ 2 " -o -name " . * $ 2 " \ ) -print
find $ 1 \ ( -name " * $ 2 " -o -name " . * $ 2 " \ ) -print
OUTPUT = ' top -b -n 1 | tail -n + 8 | head -n 1 '
env | grep ' ^ \ ( GO \ | HOME = \ | PATH = \ ) '
ssh-keygen -pf private.key
find . -name " * .java " -exec grep -Hin TODO { } + | basename ' cut -d " : " -f 1 '
find . -maxdepth 1 -type d -exec chmod -R 700 { } \ ;
find / -type d -name " project.images " -ls
find / var / www / some / subset -type f -perm + 111
find / home / spenx / src -name ' * .txt ' | xargs grep -H ' * def / incoming '
ping -c 1 -t 1 192.168.1.1
find . / -iname file _ name ! -path " . / dirt to be Excluded / * "
tar --one-file-system -czv / home | split -b 4000m - / media / DRIVENAME / BACKUPNAME.tgz
find / -type f -printf " \ n % Ab % p " | head -n 11
find . -not -path ' * / \ . * ' -type f -name ' * some text * '
IP = $ ( dig + short myip.opendns.com @ resolver1.opendns.com )
echo " deb http : / / ppa.launchpad.net / webupd8team / java / ubuntu precise main " | tee -a / etc / apt / sources.list
grep -v ' ^ 2 ' file | cut -d ' ' -f2- | nl -w1 -s ' '
ssh -N -L 2222 : remote.example.com : 22 bridge.example.com &
find . -name " * .js " -print0 | xargs -0 grep " import antigravity "
finger $ USER | head -n1 | cut -d : -f3
zcat ' find / my _ home -name ' * log.20140226 * " | grep ' vid = 123 '
tac a.csv | sort -u -t , -r -k1,1 | tac
find . -type f -name " * . * " -not -path " * / .git / * " -print0 | xargs -0 $ SED _ CMD -i " s / $ 1 / $ 2 / g "
find -iname ' * .java ' | xargs grep ' class Pool '
echo " 1 \ n2 \ n3 \ n4 \ n5 " | paste -s -d , / dev / stdin
find . -name ' * js ' | grep -n ' some string '
od -cvAnone -w1 | sort -b | uniq -c | sort -rn | head -n 20
grep ERROR $ ( find . -type f -name ' btree * .c ' )
find . -name " * .c " -print0 | xargs -0 -n1 -I ' { } ' mv ' { } ' temp
find . -name " * .c " -print0 | xargs -0 rm -rf
find $ { x } -type d -exec chmod ug = rwx , o = ' { } ' \ ;
find -iname ' * .java ' | xargs grep ' class Pool '
find . -type f -regextype posix-extended -regex ' . * / . { 1,24 } $ '
find $ PWD -type d
NET _ IP = ' ifconfig $ { NET _ IF } | grep -Eo ' inet ( addr : ) ? ( [ 0-9 ] * \ . ) { 3 } [ 0-9 ] * ' | grep -Eo ' ( [ 0-9 ] * \ . ) { 3 } [ 0-9 ] * ' | grep -v ' 127.0.
echo $ ( basename $ ( readlink -nf $ 0 ) )
chown -R : daemon / tmp / php _ session
find / data / bin -name " z * " -type f -exec rm { } \ ;
ssh -t somehost ~ / bashplay / f
grep " ^ core id " / proc / cpuinfo | sort -u | wc -l
touch -m 201111301200.00 $ log _ dir / last.check
cat / proc / 17709 / cmdline | xargs -0 echo
END _ ABS = ' pwd -P '
find . -name " * shp * " -exec mv { } .. / shp _ all / \ ;
chmod g + w $ ( ls -1a | grep -v ' ^ .. $ ' )
cd ' ls -d * / | grep 1670 '
find . / dir1 -type f -exec basename { } \ ;
founddata = ' find . -name " filename including space " -print0 '
mytemp = " $ ( mktemp -t " $ { PROG } " ) "
ln -s $ ( echo / original / * .processme ) .
NET _ IP = ' ifconfig $ { NET _ IF } | grep -Eo ' inet ( addr : ) ? ( [ 0-9 ] * \ . ) { 3 } [ 0-9 ] * ' | grep -Eo ' ( [ 0-9 ] * \ . ) { 3 } [ 0-9 ] * ' | grep -v ' 127.0
mount / var / lib / mnt / image / inside -o ro , remote , suppress = 400 / usr / local / storage
find . / dir1 -type f -exec basename { } \ ;
REL _ DIR = " $ ( ssh -t localhost " $ heredoc " ) "
grep ' ^ core id ' / proc / cpuinfo | sort -u | wc -l
find . -type f -name " * .mp3 " -exec cp { } / tmp / MusicFiles \ ;
find / home / mine -iname " * .png " -execdir cp { } / home / mine / pngcoppies / copy { } \ ;
mkdir -p { 1 .. / { 3 , [ 1-2 ] } .. 5 } _ folder }
du -csxb / path | md5sum -c file
END _ ABS = ' pwd -P '
PATH = $ ( echo $ PATH | tr " : " " \ n " | grep -v $ 1 | tr " \ n " " : " )
dig -x 127.0.0.1
ifconfig en0 | grep -o -E ' ( [ [ : xdigit : ] ] { 1,2 } : ) { 5 } [ [ : xdigit : ] ] { 1,2 } '
sort -m < ( zcat $ part0 | sort ) < ( zcat $ part1 | sort ) ...
rsync -avR somedir / . / foo / bar / baz.c remote : / tmp /
cd ' find . -name " config " '
find . / dir1 -type f -exec basename { } \ ;
find . -type f -exec rm -fv { } \ ;
grep -v ' ^ 2 ' file | cut -d ' ' -f2- | nl -w1 -s ' '
sort -m < ( zcat $ part0 | sort ) < ( zcat $ part1 | sort ) ...
od -c MySec OS \ ; | tr -s ' ' | cut -d ' ' -f 1
find . - \ ( -name " myfile [ 0-9 ] [ 0-9 ] " -o -name " myfile [ 0-9 ] " \ )
echo $ modules | column -t | fold | column -t
find . -regextype posix-egrep -regex ' ^ . * / [ a-z ] [ ^ / ] * $ ' -type f
ls -alFt ' find . -name " bla.txt " ' | rev | cut -d " " -f1 | rev | head -1
chown -R $ JBOSS _ AS _ USER : $ JBOSS _ AS _ USER $ JBOSS _ AS _ DIR /
chown -R $ JBOSS _ AS _ USER : $ JBOSS _ AS _ USER $ JBOSS _ AS _ DIR /
find . -type f -name " * .java " -exec grep -il string { } \ ;
find . -regextype posix-egrep -regex ' ^ . * / [ a-z ] [ ^ / ] * $ ' -type f
dig -x $ IP | grep PTR | cut -d ' ' -f 2 | grep google | cut -f 5
sudo chown ' whoami ' / data / db
find / mp3-collection -size + 10000k ! -name " Metallica * "
finger -l | grep " Name : " | cut -d " : " -f 3 | cut -c 2- | sort | uniq
find . / -newermt 2014-08-25 ! -newermt 2014-08-26 -print
find . / test -regextype posix-egrep -type d -regex ' . * / [ 0-9 ] { 5 } $ '
crontab -l -u user | cat - filename | crontab -u user -
cp / file / that / exists / location / for / new / file
mount ~ / .andrev ~ / .xml
crontab -l -u user | cat - filename | crontab -u user -
find . -type d -path ' * / \ . * ' -prune -o -not -name ' . * ' -type f -name ' * some text * ' -print
find . -type f -name " Tes * " -exec rm { } \ ;
echo -e " Icon \ \ r " | xargs touch
find . / -daystart -mtime -3 -type f ! -mtime -1 -printf ' % Tc % p \ n '
cat Little _ Commas.TXT
mv server.log logs / $ ( date -d " today " + " % Y % m % d % H % M " ) .log
find $ LOCATION -name $ REQUIRED _ FILES -type f -mmin + 360 -delete
echo -e " Icon \ \ r " | xargs touch
grep -r " string to be searched " / path / to / dir
split -l 20 $ FILENAME xyz
bzip2 -dc archive.tbz | tar xvf - filename
ping -c 5 google.com | grep " round-trip " | cut -f 5 -d " / "
mount -o rw , remount -t rfs / dev / stl12 / system
grep -o . filename | tr ' [ : upper : ] ' ' [ : lower : ] ' | sort | uniq -c | sort -nr
node = ' ls --dereference = ' * .xml '
ping -c 1 127.0.0.1 # ping your adress once
cat results2.txt | xargs -I { } ln -s { } ~ / newlinks
touch -m 201111301200.00 $ log _ dir / last.check
gzip -dc / usr / src / redhat / SOURCES / source-one.tar.gz | tar -xvvf -
rsync -a --relative / new / x / y / z / user @ remote : / pre _ existing / dir /
chown -v root : root / path / to / yourapp
find . -type d -path ' * / \ . * ' -prune -o -not -name ' . * ' -type f -name ' * some text * ' -print
tFile = $ ( mktemp --tmpdir = / dev / shm )
read -p " ' echo -e ' Please Enter a Message : \ n \ b " " message
split --lines = 50000 / path / to / large / file / path / to / output / file / prefix
find . -maxdepth 1 -ctime + 1 -name file -exec mv -t / tmp / \ ;
egrep -R " word-1 | word-2 " directory-path
cp --remove-destination $ ( readlink $ f ) $ f
mv $ ( readlink -f / usr / local / bin / perl ) / usr / local / bin / perl ' echo $ PWD / root / file.txt '
finger | cut --complement -c36-40
gzip -dc / usr / src / redhat / SOURCES / source-one.tar.gz | tar -xvvf -
rm -f $ ( find / path / to / base / dir -type d -name ' .tar.gz ' )
cat results2.txt | xargs -I { } ln -s { } ~ / newlinks
find / -name * .cpp -o -name * .h -o -name * .java
diff < ( zcat file1.gz ) < ( zcat file2.gz )
find . -maxdepth 1 -type d -iname " * linkin park * " -exec cp -r { } / Users / tommye / Desktop / LP \ ;
IP = $ ( dig + short myip.opendns.com @ resolver1.opendns.com )
chown $ FUID : $ FGID " $ FILE2 "
tar -czf / usr / local / games / usr / local / games / " $ { seg1 } " +
finger | cut --complement -c36-40
echo " * * * * * script " | crontab -
rsync -rvv --recursive / path / to / data / myappdata user @ host : / remote / path / to / data / newdirname
find project -name ' * .php ' -type d -exec chmod 755 { } \ ;
mydir = $ ( mktemp -d " $ { TMPDIR : - / tmp / } $ ( basename $ 0 ) .XXXXXXXXXXXX " )
rsync -a --progress --remove-source-files src / test / dest
finger | cut --complement -c36-40
crontab -l -u user | cat - filename | crontab -u user -
finger $ USER | head -n1 | cut -d : -f3
bind ' " \ e [ 24 ~ " : " \ C-k \ C-upwd \ n " '
ln -f $ GIT _ DIR / .. / apresentacao / apresentacao.pdf $ GIT _ DIR / .. / capa / apresentacao.pdf
grep -o " ^ $ EXTERMINK " < ( grep --include = \ ) . * \ S + *
crontab -l -u user | cat - filename | crontab -u user -
cd ' / cygdrive / c / Program Files ( x86 ) / $ dollarsign '
echo " a b c d e " | tr ' ' ' \ n ' | tail -1
rsync -av --exclude = ' path1 / to / exclude ' --exclude = ' path2 / to / exclude ' source destination
md5 = ' md5sum $ { my _ iso _ file } | cut -b-32 '
find source / directory -ctime -2 | cpio -pvdm / my / dest / directory
( NAME = $ ( ssh -o $ SHELL 80 ) : localhost : 3000 -N ' 3000 '
rsync --specified / path / to / dir --exclude = * . / path / to / files
find . -name " * .what _ to _ find " -type f -exec grep " expression " { } \ ;
cat $ { TMP } / $ { SCRIPT _ NAME } .pid | sort -rh ;
tar cz my _ large _ file _ 1 my _ large _ file _ 2 | split -b 1024MiB - myfiles _ split.tgz _
ls $ PWD / cat.wav
grep -o " _ foo _ " < ( paste -sd _ file ) | tr -d ' _ '
echo " 123 123 123 " | grep -o 123 | wc -l
date --date = " 222 days ago " + " % Y "
mv * / tmp / blah /
cd ' ~ / bin / subl / ' basename / " $ HOME / downloads / fnord / MANCAME / '
ifconfig | grep -Eo ' inet ( addr : ) ? ( [ 0-9 ] * \ . ) { 3 } [ 0-9 ] * ' | grep -Eo ' ( [ 0-9 ] * \ . ) { 3 } [ 0-9 ] * ' | grep -v ' 127.0.0.1 '
shopt -s lastpipe nullglob dotglob
cd ' / cygdrive / c / Program Files ( x86 ) / $ dollarsign '
du -http : / / downloads / -type f -printf " % h \ n " | sort -rh | head -n 20 | sort -n | tail -n1
find \ ( -name " * .htm " -o -name " * .html " \ ) -a -ctime -30 -exec ln { } / var / www / obsolete \ ;
cd ' / cygdrive / c / Program Files ( x86 ) / $ dollarsign '
find / -type f -name ' * .DS _ Store ' -ls -delete
cp -Rvn / source / path / * / destination / path /
find " $ { searchpath } " -type f -print0 | xargs -0 grep -l -E " $ { string1 } . * $ { string2 } . * $ { string3 } "
rsync --iconv = UTF-8-MAC , UTF-8 / Users / username / path / on / machine / ' username @ server.ip.address.here : / home / username / path / on / server / '
tmpfile = $ ( mktemp $ ( pwd ) / templateXXXXXX )
echo " deb http : / / ppa.launchpad.net / webupd8team / java / ubuntu precise main " | tee -a / etc / apt / sources.list
FOLDERS = ' ls -dm $ MY _ DIRECTORY / * / | tr -d ' "
ln -f $ GIT _ DIR / .. / apresentacao / apresentacao.pdf $ GIT _ DIR / .. / capa / apresentacao.pdf
rsync -avzru --delete-excluded server : / media / 10001 / music / / media / Incoming / music /
totalLineCnt = $ ( cat " $ file " | grep " $ filter " | grep -v " $ nfilter " | wc -l | grep -o ' ^ [ 0-9 ] \ + ' ) ;
