find all the php files in the current folder
Print sed commands that would replace all occurrences of ' previousword '
Search the current directory tree for files modified less than 5 days ago
Print file type information of the " java " executable
Find all files / directories owned by user ' root ' under / directory
Find files readable only by the group
Make directory " myfiles "
Copy all files below the current directory whose names contain " FooBar " to directory foo / bar / in user ' s home directory
find all the files ending with " .foo " in the current folder
Find files larger than 100MB in / var / www and exclude files with / download / in their path from the
Print ' su whoami ' for all files with ' .com ' extension under ' / volume1 ' directory
find all text files in the current directory
Find all files / directories under $ something directory
Find all links pointing to / path / to / foo.txt
find all the files in the current folder which have the name net
Find all files / directories under current directory
Find all directories named ' local ' under ' local ' and ' / tmp ' directory tree
find all the file in the current folder
Find all regular files starting from / that have permissions 644
Write ' " myname = " Test " ' to the console and append to " $ CONFI
Read the history file and append the contents to the history list
Set permissions for files in ' foldername ' and its subdirectories to 644
Find all the files in the current directory recursively whose permissions are 777
Replace spaces with underscores in the names of all files and directories in the " / tmp " directory
Find all * .txt files / directories under asia and emea directory
Find all * .gz files / directories under / home / foo
get the root access
Compress " hello world " and save to variable " hey "
Find all files matching pattern " $ pattern " in the current directory tree
Find all files under $ target _ directory
download contents from " https : / / raw.github.com / cre
Add read and execute permission to command " node "
Find all files / directories under current directory
Find all * .java files under current directory
Find all files / directories named ' arrow ' under ' / usr ' directory tree
Print the current directory tree
run ls command on * .pl files
Find all the files whose permissions are 777
Set permissions to ug = rwx , o = for directories under the $ d directory tree
Set permissions to ug = rwx , o = for directories under the $ d directory tree
Delete all directories in the / myDir directory tree
find all the files that have been modified today
Find all directories named " D " in the current directory tree , except the one with path . / D
Find ... files whose name is tecmint.txt
Replace the " openssl " command executable with a symbolic link to " / usr / local / ssl /
Find the passwd file under root and two levels down
Copy * .bar files from the current directory tree to / tmp / MusicFiles /
Represent the UTC date given in time string " 1970.01.01- $
Update the archived copy of the home directory , " alldata.tar "
Show the list of user wnj ' s files that are newer than file ' ttt '
Delete all dir * in their names under dir _ *
Verbosely compresses all files on sixth and fifth depth level keeping origin
find all regular / normal files in the current folder
Find all directories named aaa in the current directory tree
Removes first and last parts of path $ path and saves the result in ' finalName
Find all files / directories under current directory
Search the current directory tree for directories named ' D '
find all the directories in the current folder which have the name 775 but have the users
Search the current directory tree for files modified less than 5 days ago
Find all directories under current directory
Calculate md5 sum of file $ ecriv
Removes all empty folders under current path , aged between ' first ' and ' last ' timestamps
display the base name ( name without extension ) of all the " .flac " files in the current folder
Sort " $ file " and output the result to " $ file "
Represent the UTC date given in time string " 1970.01.01- $ string1
Print the list of files in the home directory tree whose names begin with " Foto "
Print the date followed by " : "
This command find displays the files which are modified in the last 15 minutes . And it lists only the unhid
Find all files / directories under $ 1 directory tree that match the regex ' . * / \ .. * ' in their paths
Rename " original.filename " to " new.original.filename "
Find all files in the current directory tree whose names are " .DS _ STORE "
find all the php files in the current folder
Find all files in your home directory and below that are larger than 100M .
display list of all the hidden files in the directory " / dir / to / search / "
Copy all files with ' .png ' ( case insensitive ) extension under ' / home / mine ' directory tree to ' / home / mine
Represent the UTC date given in time string " 1970.01.01- $ string1
list all the target files in the current directory
List all the regular files in the current directory tree that contain string " texthere "
Find all files / directories under current directory
Recursively copies " $ 1 " to " $ 2 " .
find all files that names are game
Find all * .txt files / directories under current directory
Rename " original.filename " to " new.original.filename "
Find all * .data files under jcho directory
Search in current directory downwards all files whose size is 10 bytes ( Characters ) .
Find all files / directories with ' .tex ' extension under ~ / backup.tar.gz directory
Find all files that have either a .php or a .js extension
Find all files under $ musicdir directory
Find all * . * files / directories under current directory
Find all files / directories named ' gupp.conf ' under ' / var / www ' directory tree
Print the list of files in the home directory tree whose names begin with " Foto "
Print ' date ' formatted with columns 1000
Show the list of files modified less than a minute ago
Print what year it was 222 days ago
Print ' " ' pwd ' " group
This command find displays the files which are modified in the last 15 minutes . And it lists only the unhid
Find all files / directories with ' .app ' extension under ' / path / to / folders ' directory tree
Find all python files / directories under current directory
Find all * .c files under current directory
find all the directories in the current folder which doc have the execute permission .
Find all files in the current directory tree that are not newer than some _ file
Find all regular files with ' .jpg ' ( case insensitive ) extension under current directory non-recursively and sort them numerically
Find all files / directories with permission $ permissions under $ directory directory tree
Search the home directory tree for files newer than file / tmp / txt
Find all files / directories with inode number 16187430 and move them to ' new-test-file-name '
find all the normal / regular files in the current directory and search for the word mail and display the file names
List all the regular files in the current directory tree that contain string " texthere "
find all the text files in the current folder and do not search in somedir , bin directories
same as above example with -exec , in this example with -OK it should ask for confir
Find all directories under current directory and set their permission to 775
find all the cpp files in the current folder
Find the largest files in a particular location
Find all regular files that reside in the current directory tree and were last modified more than 1 day ago
find all the files in the home folder that have been modified in the last 1 year
find all the files in the entire file system that start with top
Find all files / directories with permission $ permissions and change their permission to 644
Search the current directory tree for .sqlite files
Make directory tree ' dirname '
Remove all regular files that were modified more than 3 days ago
Save " $ 1 " into variable " stuff "
Move all * .bak files in the current directory tree
find all the files that have been modified in the last 24 hours
List all regular files in entire file system
Set variable BZIP2 _ CMD to the full path of command " bzip2 "
Set variable " filename " to only the name of document specified by URL , in this case " pic.jpg
show all the files in the folder / proc and those that are present in the sub directories of the current folder
find all files that aren ' t owned by user www-data
Find all the files in the current directory tree that match pattern ' . ? * '
List all regular files in entire file system
Print all files under current directory
Create intermediate directories as required and directory / tmp / test / blah / oops / something
find the file with the name " esxcfg-firewall " in the current folder
Find files / directories that have no owner or group under / path
Recursively copy " dir " to " dir _ a " and delete any files in " dir _ b "
Find all directories under current directory and show their file information
Find all files / directories containing ' farm ' in their names under ' / usr / share ' directory tree
Find all files owned by user ' tom '
Find all files / directories with permission $ permissions under $ directory directory tree
Find all regular files with extensions php , css , ini , txt from directory tree / old / WordPress /
Find all directories under directory tree / dir1 , ! -wholename pattern " $ dir2 "
Show the list of files modified less than a minute ago
Print the contents of " ~ / .ssh / config "
Create an empty file with a carriage return character in its name .
Show the list of files modified less than a minute ago
Print all files / directories under current directory by replacing all spaces with commas ( , )
Read standard input until a null character is found and save the result in variable " line "
Remove all .pyc files in the current directory tree
Remove all libEGL * files from the current directory tree
Find all files / directories under / home / feeds / data directory
Read one character from standard input into variable " REPLY "
View manual page of find utility
Delete all empty directories in minimum 1 level down the directory ' directory '
Print what year it was 222 days ago
find all the files that have been modified today
Find files / directories that are owned by user ' ian ' under ' / tmp ' directory tree
Print the current directory tree with file permissions
Print the list of all regular files residing in the current directory and below
Find all files / directories under directory $ parents directory
Find all files / directories with permission $ permissions and change their permission to 644
Find all directories with permissions 777 under and below / home / user / demo / , and change their permissions to 755
Find all files / directories with execute permission by group or others
Remove all the files that were modified more than 3 days ago
count all the files that are present in a directory
Search in current directory downwards all files whose size is 10 bytes ( Characters ) .
List all * .py files / directories under current directory
display all the files in current folder which are bigger than 1MB
Copy " file0001.txt " to " 1.txt " and output the result to " new-files "
display a long listing of all the files in the current folder which have been modified in the last 60 minutes
Search the current directory tree for regular files whose names end in " .shtml " or " .css "
Find all regular files with permissions 777 under and below / home / user / demo /
Find all SUID files in the current directory tree
Search the current directory tree for regular files that were accessed $ FTIME days ago
Split " $ file " into files with at most 10 lines each and use a prefix length of 5
Find all files / directories under current directory tree excluding files / directories with name ' query _ to _ avoid '
Change all directories under ' foldername ' directory tree to 755
Find files containing string " # ! " in their names
Find all files that were accessed more than 30 days ago
Search the current directory tree for files matching sed regular expression ' . * myfile [ 0-9 ] \ { 1,2 \ } '
Update the archived copy of the home directory , " alldata.tar "
Print the first line of output after alphabetically sorting the file " set "
Delete all files / directories named ' document ' in the current directory tree
Kill all processes which were executed in background by the current shell .
Find all regular files matching the name pattern " $ 1 * " ( where $ 1 is a positional parameter ) under $ 1 directory
Search the current directory tree for regular files that were modified $ FTIME days ago
Search the current directory tree for regular files whose names end in " .shtml " or " .css "
Find all * .ISOLATE files / directories under current directory
Find all directories under maximum 1 level down the current directory and set their permission to 700
Merge already sorted files " file * .txt " and split the result into files of at most 100000 lines each with a prefix
find all the php files in the current folder and search for multiple patterns in these files
Recursively copies " $ appname.app " , preserving symlinks as symlinks to the ' Payload ' directory
Delete all files / directories named ' document ' in the current directory tree
Find all regular files that reside in the current directory tree and were last modified more than 1 day ago
Print file information of command " studio "
Set variable " filename " to only the name of document specified by URL , in this case " pic.jpg "
find all regex ' \ . / [ a-f0-9 \ - ] \ { 36 \ } \ .jpg ' files
Find all files / directories under / home that were modified more than 7 days ago
Compress all files matching " aa.txt " and " $ { DB.txt "
Find all regular files in the / path / to / base / dir tree
find all the files in the entire file system that have been modified exactly 50 days ago
Find all the files which are modified 50 days back
Find all * js files under / working directory
Find files in entire file system that are writable by group or other
Find files in entire file system that are writable by group or other
Print only the line " foo / / / " given two empty directories foo and bar
Read a line from standard input into variable " dir "
Search for all files in the current directory recursively whose names end with " Linkin Park "
Remove all .pyc files in the current directory tree
search for a word in all the files in the current directory
Rename " original.filename " to " new.original.filename "
Find all the files that were modified within the last day
Find all files / directories that have been modified in the last seven days .
Find all regular files that reside in the current directory tree and were last modified more than 7 days ago
Find all files / directories named ' file ' under ' / path / to / search ' directory tree
Find all directories with permissions 777 under and below / var / www / html , and change their permissions to 755
Find all files / directories under / home / me / tmp that are greater than 10MB in size
Find all regular files in the current directory tree that were modified less than 60 days ago
Find all files / directories under ' / usr / local ' directory tree that have been modified within the last day
Find all files / directories named orm.properties under / eserver6 directory
Find all files / directories with execute permission by group or others
Remove all Thumbs files in the / home / peter directory tree
Remove all core dump files from user ' s home directory
Find regular files with permissions less than 2
Search the current directory tree for files whose names match regular expression ' . * packet . * ' , ignoring the case
Report file system containing the current directory disk usage
searches through the root filesystem ( " / " ) for the file named Chapter1 .
Delete all files in the / tmp / directory tree that have not been modified in the last 31 days
Find all empty directories under ' / srv / $ { x } ' directory tree
Find all files named ' test1 ' under current directory tree
find all files that names are game
Print the date followed by " : $ line "
Prints a random number between 2000 and 65000
Lookup information of the current user
Recursively finds strings with " text string to search " in files under ' directory-path ' , regarding provided options ' [ option ] ' .
find all text files in the current directory and display them page wise
Find all * . * files / directories under current directory
display the contents of all the files in the current folder which start with test ( case insensitive search )
Find files owned by no user
Find all files / directories under current directory
Find all files in the ' sourceDir ' directory tree
Sort file1 and file2 then display differences between them .
List files and directories in the / etc directory tree whose names are " * / mostults.txt "
find all regular / normal files in the current folder whose name has the word photo or picture and which have been modified in the last 30 minutes
Compress the file ' file ' with ' bzip2 ' and append all output to the file ' logfile ' and stdout
Search the files from the current directory tree for " chrome "
Search the current directory tree for regular files that were accessed $ FTIME days ago
Perform a dry run replacing " special " with " regular " in all file names in the current directory
Find all 600 permission files / directories under current directory and change their permission to 664
change the owner and group of all the files in the current folder and / home / admin / data / to admin & admin
Delete all files in the / myDir directory tree that were modified more than 7 days ago
Remove all files in the / myDir directory tree that were modified more than 7 days ago
Connect to host " server _ b " as ssh user " user " and copy local file " / my _ folder / my _ file.xml " to server _ b ' s directory " /
find all the files in the file system which have read permission to the user and display the ten files
find all the directories with the name " c " in the current folder which are at least 3 levels deep and which are not present in the path " / p / " .
Search the / home / user / directory tree for files whose names end with " .asm "
Find files in the current directory tree whose names are of the form " cxx _ data.txt " where xx is a number from 40 to 70
List all files / directories under current directory matching the posix-egrep type regex " . + \ . ( c | cpp | h ) $ " in their names excluding the files that contain ' generated
Update the archived copy of the home directory , " alldata.tar "
display all files in the current folder which have not been modified in the last 7 days
Delete all .pyc files in the current directory tree
Find all files / directories under current directory tree excluding hidden files / directories
Change permissions of all files ending " .php " under the current directory to 755 and print a count of modified files
Search the current directory tree for regular files whose names end in " .shtml " or " .css "
Find all * .js files under current directory containing the string ' String '
Search the current directory tree for regular files whose names end in " .shtml " or " .css "
Find all files / directories in directories / files taken from the glob pattern ' / tmp / test / * ' recursively that have not been modified in the last 2 hours and delete
Find all files which are more than 200MB in size under current directory and remove them
download contents from " https : / / raw.github.com / creationix / nvm / ma
Read a line from standard input into variable " REPLY " with prompt " > $ line ( Press Enter to continue ) "
Print full path of command " c + + "
find all the files in the current folder that belong to the user www
Create a symbolic link named " $ 1 / link " to the existing full and real path of " $ 2 "
find all files in the directory " dir " which have been modified exactly 60 minutes ago
Find all directories under $ d directory tree excluding hidden files and count them
Find all files that were accessed more than 30 days ago
Find files / directories named ' file.txt ' that belong to user ' tutonics ' in the entire filesystem
Find files / directories that are owned by the user ' syslog ' in entire filesystem
search for the word " search-pattern " in all the regular / normal files in the current folder and display the matched file name
display all the files in the current folder excluding those that are present in the folder " . / src / emacs "
Copy all files matching " * .mp3 " in directory tree ~ / foo / bar
Sort " $ file " and output the result to " $ file "
Compare files ' text.txt ' and ' text.txt ' and ' text.txt ' and print in this columns and common on
Save the absolute path of the directory of the current script to variable " DIR "
Get the number of regular files in the directory given as the bash script argument $ 1
Find all .zip files in the current directory tree that are not newer than / tmp / zerobyte
Find files under current directory that contains the string ' / bin / ksh '
Add a line number to every line in " infile "
find all files that have been modified in the last seven days .
Find all files with space in their names under ~ / Library directory
find all the files in the folder / opt which have been modified exactly 20 days ago
display all the files in the file system which are bigger than 3 bytes
Find all directories with the name ' project.images ' in the entire filesystem
Search the current directory tree for symbolic links whose names end in " .shtml " or " .css "
Delete files in the ' empt1 ' directory tree whose names are not ' ignore2 ' or ' ignore2 '
Delete all .pyc files in the current directory tree
Represent the UTC date given in time string " 1970.01.01- $ string1 " as number of seconds since the epoch and
Find files under current directory that contains the string ' / bin / ksh '
display all normal / regular files in current folder in sorted order
Search the current directory tree for files whose names end in " rb " or " js " and which contain string " matchNameHere "
find all files that are readable or writable by their owner
Find all files under $ SOURCE _ DIR that are older than $ DAYS _ TO _ SAVE days and print their paths
Find files / directories that are newer than ' / tmp / stamp ' by modification time
Find all files under $ FOLDER directory and show the first field of each line
Search the current directory tree for files whose names match regular expression ' . * packet . * ' , ignoring the case
Change the owner of all files in the directory tree " dir _ to _ start " excluding directory " dir _ to _ exclude " to " owner "
Rename " original.filename " to " new.original.filename "
Find all .axvw files / directories under current directory
Search the current directory tree for .bash files ignoring the " .git " directory
Recursively finds strings with " text string to search " in files under ' directory-path ' , regarding provided options ' [ option ] ' .
Change permissions to 775 for all directories under / var / www / html / , and change their permissions to 775
Find all .zip files that are larger than 2 MB but less than 100MB in size
Delete all hidden files under $ some _ directory
Create a symbolic link named " $ 1 / link " to the existing full and real path of " $ 2 "
find all ' * .c ' files under $ HOME directory which context contains sprintf
Find all directories under ' test ' directory tree that match the regex ' . * / course [ 0-9 . ] * ' in their paths
Find files under / etc that are newer than / etc / passwd
find all the " test " files in the current folder and force delete them
Compare the contents of gzip-ompressed files " file1 " and " file2 "
Filnd all files in root directory with 777 permission and change permision 644 with chmod commad .
Remove all vmware- * .log files under current directory
Recursively finds all files and prints all strings with ' text-to-find-here ' from that files , preceding matched string with filename .
Find all files / directories named ' foo ' under current directory tree without descending into directories named ' foo '
find all the files in the current folder which do not have the read permission
Remove all files in the / myDir directory tree that were last modified more than 7 days ago
Search the current working directory tree for files whose names match pattern " * .rb "
Search all the .c files from the current directory tree for " hogehoge "
Find files / directories whose owner is ' root ' under / usr directory downwards and print them .
Find files / directories whose owner is ' root ' under / usr directory downwards and print them .
find all the files in the folder " main-directory " which have the extension " bar " and have filename extension .
Find all regular .zip files in the current directory tree and search them for " expect.rb "
Find all files / directories under / proc and run ls command on each .
Save the user name of the current user to variable " me "
Remove all " new " files in the current directory tree
Remove all " new " files in the current directory tree
Print the current default full path of the " java " executable
Print absolute path of files in the current directory
Set 644 permission to all regular files under / home / peter directory
Change permissions to 644 for all regular files under the / var / www / html / tree
display all the files in the current folder which have been modified in the last 24 hours
Find all files in the current directory tree whose names are " .DS _ STORE " and delete them
Find all directories under current directory excluding hidden directories
Find all the files whose name is tecmint.txt and contains both capital and small letters in / home directory
Find all the files in the / var / log folder which were modified between 60 minutes and show a few lines of output from the beginning
Remove " * prefs copy " files in the / mnt / zip directory tree
Find all files under $ source _ dir that match the regex expanded by $ input _ file _ type in their paths
Search the current directory tree for .mp3 files
Find files under current directory that contains the string ' / bin / ksh '
Print lines 1000 to 10010 from input " seq 1 100000 "
Delete all files / directories under current directory
Removes all empty folders under current path , aged between ' first ' and ' last ' timestamps .
Print the path names of all files and directories in the current directory tree
Remove all files in the / path directory tree that were modified more than 5 days ago
Sort " $ file " and output the result to " $ file "
Archive " / path / to / files " to " user @ targethost : / path "
Replace all spaces with underscores in directory paths under current directory .
find the oldest normal file in the entire file system
Find all the files under / etc directory which are larger than 10MB and less than 100MB
Find files that are orphaned
Search the current directory tree for * .txt files whose names do not end in " .exe " and " .dll "
Find all files / directories under / var / log directory
Print what year it was 222 days ago
Find all files / directories under current directory tree whose names start with ' test ' followed by two digits and end with ' .txt ' extension
Remove all vmware- * .log files under current directory
Print the contents of " filename "
Find all files / directories under current directory tree that are newer than backup.tar.gz by modification time
Search for ' foo = ' in all * .png files under ' / path / to / search / me ' directory tree and show the matched lines with line numbers
Recursively copies " $ appname.app " , preserving symlinks as symlinks to the ' Payload ' directory .
Shows MAC address of network interface eth0 .
display all the regular / normal files in the current folder that are not accessed in the last 7 * 24 hours
Find all files / directories with ' .mp4 ' extension under ' / home / wsuNID ' directory tree
Search the / usr / include directory tree for regular files that have been modified within the last 24 hours
Find all pdf files in the current directory tree
Find files named core in or below the directory / tmp and delete them . Note that this will work incorrectly if there are any filenames containing newlines , single or double quotes , or spaces .
Search in the current directory tree for files whose names match regular expression " ^ . * ~ "
Display the contents of " file " formatted into a table , removing duplicate lines where the first 12 characters are duplicates , and display the number of occurrences at the beginn
This command find displays the files which are modified in the last 15 minutes . And it lists only the unhidden files. i.e hidden files that starts with a . ( period ) are not
Find all directories in the current directory tree that have the permissions 775
Find all files / directories under ' / home / john ' directory tree that belong to the user ' wnj '
Find all directories in the current directory tree that are not accessible by all
Show a long listing of files not modified in over 20 days or not accessed in over 40 days
Read a line from standard input and save received words sequentially in variables XPID XUSERID XPRIORITY XVIRTUAL XRES
Print all directories under $ root appending a : ( colon ) at the end of each path
Find all regular files under ' / home / mywebsite ' directory tree that have not been modified in the last 2 days
Compare " file1 " and " file2 " line by line with 3 lines of unified context
display a long listing of all the files in the current folder which have been modified in the last 60 minutes
Print out the contents of all * .txt files in the home directory
display all normal / regular files in current folder in sorted order
Search the current directory and all subdirectories for files that have 777 permissions and the permissions to 755
Print the date followed by " : $ line "
Find all symbolic links under $ directory
Search the current directory tree for all files matching either pattern " * .rb " or pattern " * .py "
Print the date followed by " : $ line "
Saves invoked command ' check _ script _ call = $ ( history | tail -1 | grep myscript.sh ) ' in variable ' check _ script _ call ' , preceeding by its number
Find all files in maximum 1 level down the current directory that were modified less than 1 day ago
Count the number of files in the directory trees whose pathnames match pattern ' / dev / sd * [ a-z ] '
run " command " on server " host " as user " user "
Find all * .gif files / directories under current directory
Find all files / directories named ' document ' in the entire filesystem
Display the contents of " file " formatted into a table , removing duplicate lines where the first 12 characters are duplicates , and display the number of occurrences at the beginning
Remove all vmware- * .log files under current directory
This command find displays the files which are modified in the last 15 minutes . And it lists only the unhidden files. i.e hidden files that starts with a . ( period ) are not di
Find source files under and below deleting
Search the files in the ' my _ folder ' directory tree for the regular expression ' . / tmp / . * [ 0-9 ] [ 0-9 ] * [ . ] [ 0-9 ] [ 0-9 ] * '
kill all background jobs
Archive " / path / to / files " to " user @ targethost : / path "
Change the owner of " / home / bob / public _ html " to " root "
Find all files / directories under current directory tree whose paths match the regex ' filename-regex . \ * \ .html '
Find all files / directories under current directory tree whose paths match the regex ' . * / \ ( EA \ | FS \ ) _ . * '
Find all files that were modified less than 1 day ago under ' / path-to-directory ' tree , regarding to dence / directory '
Find all * .txt files / directories under / home / user1 / public _ html / that were modified more than 60 minutes ago
Search directory / Users / Me / Desktop / directory tree for regular files
Search the . / lib / app and / usr / lib / / app / Contents / SharedSupport / bin / subl directory .
Find all regular files that were modified more than 2 days ago under ' / path-to-directory ' directory tree , sort them according to timestamp and print the filenames preceded with the timestamps
Find all files / directories with ' .pyc ' extension under current directory tree without descending into .snapshot suffix lines and count the number of lines with ' .pyc ' in their names
Find all files / directories under ' / usr ' directory tree that have not been modified in the last 356 days counting days from today
Find all files owned by user daniel in the entire filesystem and change their ownership to " user-user "
Split " file.txt " into files of at most 100 lines each with a prefix " new "
Copies file ' index.html ' to each top-level directory in the current directory beginning with ' d ' .
Print the date followed by " : $ line "
Find all * .gif files / directories under current directory
Find all * .ING files under current directory
Find all directories under $ workspace _ ts directory ( nothing ) and were modified more than 30 days ago
Find * .pl files / directories under / users / tom
Add a line number to every line in " infile "
Print server ' source ' from server ' s hostname
This will remove all files ( type f ) modified longer than 14 days ago under / root / Maildir / recursively from there and deeper ( mindepth 1
find all the files in the current folder which have been modified in the last 24 hours
Find all 400 permission files under / data directory , print ' Modifying ' appended with file path for each of them and change their permission to 755
Find all regular files named ' * .gz ' under current directory tree and sort them by replacing all spaces with _
Check if " $ USER _ AT _ HOST " is a mount point
Archive " / path / to / files " to " user @ targethost : / path "
Remove all regular files in and below / tmp / directory
Find all files under $ STORAGEFOLDER directory tree and show the parent directory of them
Search the / dir directory tree for files whose names match regular expression ' . * 2015 . * \ ( album . * \ | picture . * \ ) '
Make directories " Labs / lab4a / folder1 " , " Labs / lab4a / myfolder " , and " Labs / lab4a / foofolder "
Print lines in " / var / log / syslog "
Represent the UTC date given in time string " 1970.01.01- $ string1 " as number of seconds since the epoch and save it in ' t1 ' variable
Find all broken symlinks under current directory
search for a regular / normal file " myfile " in the entire file system excluding the folder in excluded _ path
Find files with extension $ permissions that have been modified in the last 30 days
Find all * .java files under current directory containing the string ' String '
find all the files in the folder / dir which have been modified exactly 60 minutes before
Print all files in the current directory tree as a comma separated list
Read a line from standard input into variable " REPLY " with prompt " $ 1 ( [ y ] es or [ N ] o ) : "
Recursively finds all files and prints only names of files that contain " word " and suppressing error messages .
Search for ' some string ' in all * .py files under current directory and show the matched lines with line numbers
Find all files / directories named ' composer.json ' under / path / to / folders / to / exclude ' directory tree
Make directories " Labs / lab4a / folder1 " , " Labs / lab4a / myfolder " , and " Labs / lab4a / foofolder "
Perform a dry run replacing " special " with " regular " in all file names in the current directory
Find all files under $ STORAGEFOLDER directory tree and show the parent directory of them
Find all files / directories under ' / apps / ' directory tree that have been modified within the last day
Save the absolute path of the directory of the current script to variable " DIR "
Search for a pattern " can ' t " in all the files with the name " file-containing-can ' t " in the current directory tree
Print the 123 space separated fields from standard input
Read a line from standard input into variable " message " with prompt " Please Enter a Message : " followed by a newline
Search for all files with the case insensitive pattern $ TERGET in the entire file system
Remove all files in the / home / directory tree whose names begin with " Foto "
Find all * .andnav files under current directory and show their file information
Add execute permission to " ComputeDate " , " col " , and " printdirections " for all users
Recursively copies ' include / gtest ' to ' / usr / include ' , preserving all attributes , and copying symlinks as symlinks , without following in source files .
Find all files / directories under ' / home / user / ' directory tree whose status was changed exactly 10 minitues ago
Move all files and directories in the current directory to " $ TARGET " excluding files matching " $ EXCLUDE "
Find all files in the ' sourceDir ' directory tree
Print unique lines in sorted file " a.txt " compared to sorted file " b.txt "
Search the current directory tree for regular files whose names end in " .shtml " or " .css "
Calculate md5 sum of file $ ecriv
Find all regular files matching the name pattern " $ 1 * " ( where $ 1 is a positional parameter ) under ' / usr ' , ' / bin ' , ' / sbin ' and ' / opt ' directory tree
Save system information appended with the current date in ' filename ' variable
Archive " / path / to / files " to " user @ targethost : / path "
Find all files which are more than 200MB in size under $ { my _ folder } and search for ' pattern ' in those files
Find all files under current directory that were modified more than 7 days ago and delete them
Find x * files / directories under / tmp directory whose status was changed less than 1 day ago
Find all regular files with ' .aac ' extension under $ DIR directory tree
display list of all the hidden files in the directory " / dir / to / search / "
Find all regular files matching the name pattern ' * . ? htm * ' under ' / srv / www ' and ' / var / html ' directory tree
Find all files / directories under / somefolder that were modified less than 60 minutes ago
Print $ d if $ d is empty
Print $ d if $ d is empty
Find all files / directories in level 2 down the current directory
Print only the line " foo / / / " given two empty directories foo and bar
Prints a random line from file $ FILE .
Create intermediate directories as required and directory / tmp / test / blah / oops / something
Find all the files that were modified within the last day
Search the entire file hierarchy for files larger than 100 megabytes and delete them .
Print only alphanumeric values from " / dev / urandom "
Search the regular files of the user bluher in the file system
Move all files from the ' sourceDir ' directory tree to the ' destDir ' directory
display all the files in the current folder which are in the path ending with the folder f
Search the current directory tree for .mp3 files
Create a symbolic link in the current directory for each file under the directories matching " .. / [ 12 ] [ 0-9 ] [ 0-9 ] "
Find files matching pattern $ 2 in the $ 1 directory recursively and search them for text $ 3 , where $ 1 , $ 2 , $ 3 are the command line arguments to the Bash script
Make directory " / tmp / x / y / z / " on remote host before archiving " file " to " user @ remote : / tmp / x / y / z / "
Find all files in the ' sourceDir ' directory tree
Concatenate files containing ' test ' in their names
Find all the files that were modified within the last day
Find all files with the SUID bit set
Count and show the number of lines for each PHP files in the current directory tree
Find and remove all .txt files and .mp4
Find all pdf files whose name is " Test "
Find all regular files matching the name pattern " $ 1 * " ( where $ 1 is a positional parameter ) under ' / usr ' , ' / bin ' , ' / sbin ' and ' / opt ' directory tree
Find all files with the SUID bit set
display all the xls and javascript and text files in the folder / home
Find all * .xml files under current directory
Search / usr / bin for any files modified within the last 24 hours
Keep the last 4 ASCII characters ( bytes ) of a string .
Find all files / directories named ' upvoter- * ' under ' / path / to / files ' directory tree
Find all * .txt files / directories under current directory
Find all files with the SUID bit set
Remove files from the home directory tree that were last accessed more than 100 days ago
Find all files under $ dir directory that are not the same file as " $ size " in their names
Find all files / directories under $ STORAGEFOLDER directory tree that were modified more than 7 days ago
Find all files whose names end with " ~ " in the / home / peter directory tree , following symlinks , and delete them
find all the files in the file system which have read permission to the user and display the ten files
Print out the contents of all * .txt files in the home directory
Read a line from standard input into variable " message " with prompt " Please Enter a Message : " followed by a newline
Find all pdf files in the current directory
Move all * .mp4 files from directory / foo / bar and its subdirectories to / some / path
Search for $ SEARCH in all regular files under $ DIR directory tree and show the matched lines with line numbers
Print " This is a googlements found in " / usr / local / "
display all the files in the current folder excluding those that are present in the folder " . / src / emacs "
display a long listing of all the files in the current folder which have been modified in the last 60 minutes
Find all files in the current directory tree that are not newer than some _ file
Compares two listings ' ls ' and ' ls * Music * ' , showing only strings that unique for first listing .
Sort file " file " by line
Search the / path directory tree for files lacking the group writable bit
display all the files in the current folder which start with " file2015-0 "
Find files under current directory without descending into other file systems and append a null character at the end of each paths
Get a detailed listing of all symbolic links in / usr / bin starting with " z "
Delete all files under $ { S _ TO _ SAVE directory tree that were accessed more than 7 days ago
find all the files in the current folder which do not belong to any user
Search the / Path directory tree for files whose pathnames match pattern " / Path / bar * " and whose names match pattern " file _ name * "
Find all files / directories under $ STATING _ DIR directory tree that are not greater than than 50 MB
Find all * .jpg files under ~ / Desktop directory
Remove all * .log files from the / home / directory tree that were last accessed more than 5 days ago
Saves invoked command ' check _ script _ call = $ ( history | tail -1 | grep myscript.sh ) ' in variable ' check _ script _ call ' , preceeding by its number in history .
Find all * .andnav files under current directory and rename them by replacing all spaces with _
Find all * . * files / directories under / root / directory / to / search
Mount " / tmp / loop.img " on " / mnt / image " as a loop back device
Search directory trees / usr / local / man and / opt / local / man for files whose names begin with ' my '
Find all files in the current directory tree whose size is greater than 1MB , and move them to the " files " folder
Find all xml files under current directory
Make directory " foo " and do not cause an error if it exists
Search directory tree ' MyApp.app ' for directories whose name is ' Headers ' and delete them in an optimized way
Find all files / directories in directories / files taken from the glob pattern ' / folder / path / * ' recursively that have not been modified in the last 2 hours and delete them
Change to folder where the oracle binary is .
Counts lines in each * .php file .
Make directory expanded by $ dir variable
Search for ' invalidTemplateName ' in all regular files in directories / files taken from the glob pattern ' . / online _ admin / * / UTF-8 / * ' and show the matched lines with the filenames
Archive " src-dir " to " dest-dir " on " remote-user @ remote-host " and delete any files in " dest-dir " not found in " src-dir "
Compare files in $ 1 directory and print them matching strings with ' FOO _ NETEXTERNAL _ SPACE ' keeps ' PATH ' , and print the filenames
Print " 0a.00.1 usb content of the file contents of " tail " + "
Archive " / path / to / files " to " user @ targethost : / path "
Find all directories under / home / mywebsite / public _ html / sites / all / modules and set their permission to 750
Find all CSS files that do something with HTML ID # content
Change to folder where the oracle binary is .
Display a long listing of all the regular files under current directory tree that are newer than " Apr 18 23 : 59 : 59 EDT 2013 ' and older than " Apr 20 00 : 00 : 00 EDT 2013 ' by modification time
Wrap each line in " file " to fit in 80 characters and count the number of lines
find all the files in the current folder that have been modified in the last 24 * 3 hours
Find all files / directories with ' .aux ' extension under ' / path / to / files ' directory tree
Remove all .tmp files in and below / tmp /
display all the files in the current folder which do not belong to any user
Print full path of command " c + + "
Print " aa \ nb \ ncccccccccccc \ nd " as empty environment
find all the files in the current directory which have the name net or comm in them
Find all files / directories with ' .aux ' extension under ' / path / to / files ' directory tree
Find all files / directories with ' .aux ' extension under ' / path / to / files ' directory tree
Find all * .sql files in the current directory tree and search them for string " xyz "
find all the files in the file system which have read permission to the user and display the ten files
Print only alphanumeric values from " / dev / urandom "
Find all files / directories under ' / nas / projects / ' directory tree that were modified more than 7 days ago
Delete all IP addresses in / var / www / mysite / crotly / modules.kb and / var / www / html / wp-includes
Save the short host name appended with " .mysqldb " in variable " DBPREFIX "
Delete all files in the / home / u20806 / public _ html directory tree that were modified more than 5 days ago
find all the files in the current folder which end with .o or with the name a.out and display them .
Find all files / directories with ' .log ' extension that belong to the group ' adm ' under ' / var / log ' directory tree
Save the first line of " $ j " into variable " k " in ksh
Find all regular files under $ { FOLDER } that are older than $ { TYPES _ RE } and move them to $ { TYPES _ LOCATION } also move them to folder $ { TYMESTION }
Rename all files in current directory to lowerase , overwriting any existing files .
Archive " / path / to / files " to " user @ targethost : / path "
Decompress " path / to / test / file.gz " to standard output and save all lines matching " my regex " to files with a 1000000 line limit
Print all files in the current directory tree as a comma separated list
Print a sorted list of * .so files in the bla directory tree
Compare " file1 " and " file2 " line by line with 3 lines of unified context
Read a line from standard input and save received words sequentially in variables XPID XUSERID XPRIORITY XVIRTUAL XRESIDENT XSHARED XSTATE XCPU XMEM XTIME XCOMMAND
Recursively change ownership of " / usr / local / lib " to the current user
Remove all * .txt files in the / home / u20806 directory tree whose names end in " romits-2.5 "
Compare the contents of gzip-ompressed files " file1 " and " file2 "
display a long listing of all images with the name " articles " in the current folder
Move all * .mp4 files from directory / foo / bar and its subdirectories to / some / path
Find files in entire file system that are writable by group or other
Display differences between directories dir1 and dir2 , treating absent files as empty .
find all files in the folder " somefolder " which have not been modified in the last 3 days and display a long listing of them
Recursively copies ' include / gtest ' to ' / usr / include ' , preserving all attributes , and copying symlinks as symlinks , without following in source files .
display all the files in the current folder which do not belong to any user
Show the list of files modified more than 31 days ago
Search for ' invalidTemplateName ' in all regular files in directories / files taken from the glob pattern ' . / online _ admin / * / UTF-8 / * ' and show the matched lines with the filenames
find all the regexp files in the folder " / home / user / demo " and change the owner to " user1 "
Removes all files but 5 newest ones from current folder .
Find all files / directories named ' comma-synced-research ' in the entire filesystem
display all the files ending with " .mov " in the current folder which are present in the words " and " .db " directories
Find all files / directories under [ опция _ поиска ] that are not newer than " значение _ поиска " and опция _ действие and значение .
Remove all files from the / tmp / directory tree whose names begin with " not "
Find all files under test directory that were modified more than 7 days ago and delete them
Read a single character from standard input into variable " key " without backslash escapes , with a timeout of 5 seconds , and with the prompt " Press any key in the next five seconds " ...
Print out the contents of all * .txt files in the home directory
Find all files / directories under / home / user1 / public _ html / sites / all / files with read , write and execute permission for group and other for these files
login as user root
Decompress " path / to / test / file.gz " to standard output and save all lines matching " my regex " to files with a 1000000 line limit
Find all files with the name " eultiple " in their names under the current directory tree and move them to ~ / backup /
