find -name \ * .plist
whoami = $ ( whoami )
find . -type f -name " . * "
join -t , in1 in2
find . -nouser
find . ! -readable -prune
mkdir -p mydir
uname -r
find . -type f -name " * .java " -exec grep -l StringBuffer { } \ ;
find . -type l
whoami = $ ( whoami )
find . -name " * .txt "
find " $ somedir " -maxdepth 0 -empty -exec echo { } is empty . \ ;
find -mindepth 1 -maxdepth 1
LD _ PRELOAD = . / linebufferedstdout.so python test.p
find * -maxdepth 0
find / usr / local -type d
find test2 -type f -print
find / -mount -depth \ ! -readable -prune
extract _ dir = $ ( diff .dir _ list _ 1 .dir _ list _ 2 | grep ' > ' | head -1 |
read -n1 ans
chmod 755 / folder -R
find . -type f -iname " * .c " -print
touch -r A B
find / -name " * .txt "
find -name " * .gz " | wc -l
ls -1 | wc -l
echo hello ' whoami '
find . -not -path ' * / \ . * '
find . -type f -name " * .txt " -exec rm -f { } \ ;
join -t , in1 in2
DATE = $ ( echo ' date ' )
find . -name " * .gz " -exec zcat " { } " + | grep " test "
find . -name " * .java "
find / -name httpd.log
ls -m | tr -d ' ' | tr ' , ' ' ; '
mount -L WHITE / mnt / WHITE -o rw
find . / -atime + 7 -print
od -t x1 -An file | tr -d ' \ n '
od -t x1 -An file | tr -d ' \ n '
find / myDir -name ' log * ' -and -not -name ' * .bz2 ' -ctime + 7 -exec bzip2 -zv { } \
find . -type f -mtime + 7 -name " * .html " -exec mv { } { } .var / www \ ;
find A -type d -name " D "
find . -name \ * .txt -print -exec cat { } \ ;
find . -name " * bills * " -print0 | xargs -0 grep put
LINES = $ ( cat / some / big / file | wc -l )
ln -sfn " $ c " " $ lines "
basename " $ ( pwd ) "
basename " $ ( pwd ) "
env DISPLAY = ' hostname ' : 0 skype
find dir -name \ * ~ | xargs echo rm
ssh -i id _ rsa host
find . -type f -user tommye -iname " * .zip "
grep ! error _ log | find / home / foo / public _ html / -mmin -60
join < ( sort aa ) < ( sort bb )
find . -name " * shp * "
find A -type d -name " D "
find . -type d -exec chmod 2770 { } +
find -print0 | sort -z | cpio -pdv0 .. / new
find . -name abc.xxx -exec rm { } \ ;
find md5sum -name " * .txt "
FOLDERS = $ ( find . -type d -print0 | tr ' \ 0 ' ' , ' )
ls -1 | wc -l
echo -e " length ( FOO _ NO _ TRAIL _ SPACE ) = = $ ( echo -ne " $ {
basename " $ ( pwd ) "
ping -c 1 $ remote _ machine
which programname
pwd | cut -f 1- -d \ / --output-delimiter = $ ' \ n '
find . -type f -name " * .txt " -exec rm -f { } \ ;
join kernel _ leterse _ release = access _ shared
find -type d -maxdepth 1 ! -name " . * " -printf " % f \ n "
find . -name photoA.jpg photoB.jpg photoC.jpg
find ~ -size + 100M
ls | & tee files.txt
ln -sfn " $ c " " $ lines "
basename " $ ( pwd ) "
output = $ ( echo $ input | fold -w4 | tac | tr -d \ \ n )
echo $ ( seq 254 ) | xargs -P255 -I % -d " " ping -W 1 -c 1 192.168.0 . % | grep -
ping -c 1 -t 1 192.168.1.1
cp --parents src / prog.js images / icon.jpg / tmp / package
find . -type f -not -name " * .html "
find . -type f -not -name " * .html "
join -t , in1 in2
find jcho -name * .data
find . -name bin -prune -o -name " * .txt " -print
find ~ -iname ' * .jpg ' -exec ls { } +
find / home -nouser -print
find " $ musicdir " -type f -print
find -name file -delete
find / -name game
ping -c 1 $ remote _ machine
full _ path = ' readlink -fn -- $ path '
env $ ( cat .env | xargs ) rails
inarray = $ ( echo $ { haystack [ @ ] } | grep -o " needle " | wc -w )
echo -n " yourstring " | md5sum
find / -perm / 222
grep --include = \ * . { c , h } -rnw ' / path / to / somewhere / ' -e " pattern "
grep --include = \ * . { c , h } -rnw ' / path / to / somewhere / ' -e " pattern "
diff -arq folder1 folder2
find . -type d -exec chmod 2770 { } +
find | xargs -i sh -c " echo { } { } "
find . -iname " * linkin park * " -exec cp -r { } / Users / tommye / Desktop / LP \ ;
find / path ! -perm / g + w
find . -newer disk.log -print
find . -inum 968746 -print
echo -e " test1 \ ntest2 \ ntest3 " | tr -d ' \ n ' | grep " test1 . * test3 "
echo $ ( seq 254 ) | xargs -P255 -I % -d " " ping -W 1 -c 1 192.168.0 . % | grep -
find . -name " * .png " -mtime + 50 -exec rm { } \ ;
man find | grep ...
sudo chmod 777 .git / hooks / prepare-commit-msg
find -name " * .cpp "
find . -size + 1M -ok mv { } files \ +
find . \ ( -name AAA -o -name BBB \ ) -print
find ~ -group vboxusers -exec chown kent : kent { } \ ;
find -daystart -atime 0
find / path ! -perm / g + w
find . -name \ * .sql
echo foo | readlink / proc / self / fd / 1
find . -ctime + 3 -exec rm -f { } \ ;
SELF = $ ( readlink / proc / $ $ / fd / 255 )
tar -xvzf passwd.tar.gz
find . -type f -name " * .tmp " -exec rm -rf { } \ ;
join -t , < ( sort file1 ) < ( sort file2 )
timestamp = ' date --rfc-3339 = seconds '
timestamp = ' date --rfc-3339 = seconds '
timestamp = ' date --rfc-3339 = seconds '
find -L / -samefile path / to / foo.txt
find . -type f -name ' * .php ' | xargs wc -l
echo -e " $ correctFilePathAndName " | xargs touch
seq $ ( tail -1 file ) | diff - file | grep -Po ' . * ( ? = d ) '
fhost = ' hostname -f '
grep -aR -e . / your / dir | md5sum | cut -c-32
find / -maxdepth 3 -name passwd
bzip2 -dc archive.tbz | tar xvf - filename
touch -d ' 30 August 2013 ' * .php
find . -regex ' . * \ ( net \ | comm \ ) . * '
find . ! -user root -exec chown username { } \ ;
find / path / to / folder -path " * / ignored _ directory " -prune -o -name fileName.txt -print
find / var / www / -name wp-config.php
gzip -d --stdout file.gz | bash
zcat bigfile.z | tail -n + 500 | head -501
basename " $ ( pwd ) "
echo " cpio ps -C java -o pcpu , state , cputime , etimes
proc _ load _ average = $ ( w | head -1 | cut -d " " -f12 | cut -d " " , -f1-2 | tr ' , ' ' . ' )
seq $ ( tail -1 file ) | diff - file | grep -Po ' . * ( ? = d ) '
read -p " ' pwd -P ' \ $ " _ command
rm -rf * ~ important-file
find . -name libEGL * | xargs rm -f
grep -n -i null myfile.txt | wc -l
ifconfig en0 | grep -o -E ' ( [ [ : xdigit : ] ] { 1,2 } : ) { 5 } [ [ : xdigit : ] ] { 1,2 }
BZIP2 _ CMD = ' which bzip2 '
find root -mindepth 2 -type d -empty -delete
scp -r user @ your.server.example.com : / path / to / foo / home / user / Desktop /
diff -q < ( sort set1 ) < ( sort set2 )
find / -type f -user root -perm -4000 -exec ls -l { } \ ;
join -t , -o 1.2,2.2,2.3 -a 1 -a 2 -e ' no-match ' - < ( sort file1.txt )
END _ ABS = ' pwd -P '
find $ topdir -name ' * .py '
find / path / to / folder -path " * / ignored _ directory " -prune -o -name fileName.txt -print
find . -type d -perm 777 -print -exec chmod 755 { } \ ;
find / path ! -perm / g + w
force delete all the files that have not been accessed in the last 240 hours
FOLDERS = $ ( find . -type d -print0 | tr ' \ 0 ' ' , ' )
PS4 = ' + $ ( date " + % s . % N " ) \ 011 '
lists * .py | xargs -n 1 echo
find . -newermt " 5 days "
rename s / 0000 / 000 / F0000 *
ssh -X whoever @ whatever.com
grep -v ' kpt # ' data.txt | nl -nln
grep " ^ core id " / proc / cpuinfo | sort -u | wc -l
grep -L -Z -r ' Subject : \ [ SPAM \ ] ' . | xargs -0 -I { } mv { } DIR
find . -type f -exec grep " example " ' { } ' \ ; -print
split -b 1M -d file.txt file --additional-suffix = .txt
find . -type f -name " * .tmp " -exec rm -rf { } \ ;
find foldername -type d -exec chmod 755 { } " ; "
find . -name photoA.jpg photoB.jpg photoC.jpg
find -not -name " * testfileasdf * "
echo -e " $ correctFilePathAndName " | xargs touch
echo $ ( basename " $ 1 " )
path2 = $ ( echo $ { filename % . * } )
find . -name " * .bak " | xargs rm
ssh -q $ HOST " [ [ ! -f $ FILE _ PATH ] ] & & touch $ FILE _ PATH "
find $ { directory } -name " $ { pattern } " -print0 | xargs -0 $ { my _ command }
grep ' ^ core id ' / proc / cpuinfo | sort -u | wc -l
find . -type f -exec grep " / usr / bin / perl " { } \ ; -ls
shopt -s expand _ aliases
pstree -p -s PID
nl -v1000001 file
BZIP2 _ CMD = ' which bzip2 '
mv file.txt.123456 $ ( ls file.txt.123456 | rev | cut -c8- | rev )
find . -name " * .bak " -delete
find . -type f -name YourProgramName -execdir pwd \ ;
join < ( sort -n A ) < ( sort -n B )
timestamp = ' date --rfc-3339 = seconds '
find -name " * .cpp "
find / home / myuser / -type f -mtime + 7 -print
find . -name [ ab ] * -print
find / path / to / dir ! -perm 0644
find . type -f -ctime -2 | tail -n 5
find . -depth -print | cpio -dump / backup
find . -name " * .JPG "
find / -iname passwd
find / -iname passwd
echo " $ { line } " | egrep --invert-match ' ^ ( $ | \ s * # | \ s * [ [ : alnum : ] _ ] + = ) '
read -p " Do you wish to install this program ? " yn
ping -c 1 127.0.0.1 # ping your adress once
rm -rf * ~ important-file
grep -r -l " foo " .
chgrp -R fancyhomepage / home / secondacc / public _ html / community /
diff -q < ( sort set1 ) < ( sort set2 )
find / -type f -user root -perm -4000 -exec ls -l { } \ ;
find . -type f -mtime + 7 -print0 | xargs -0 rm
find / foo -name " * .txt " -exec du -hc { } + | tail -n1
find / -perm 777 -iname " filename "
find / home / me -type d
find $ { path } -P -type f
find / usr / local -type f -perm / a = x | xargs file | grep ' not stripped ' | cut -d : -f1
find / eserver6 / share / system / config / cluster -name " orm.properties "
find / path / to / folder -path " * / ignored _ directory " -prune -o -name fileName.txt -print
find / home -name Trash -exec rm { } \ ;
find . -depth -name core -exec rm { } \ ;
find . -perm -0002 -print
ln -s $ ( echo / original / * .processme ) .
file / mnt / c / BOOT.INI
cut -d : -f1 / etc / group | sort
rev urllist.txt | cut -d . -f 2- | rev
find / srv / www / * / htdocs / system / application / -name " * .php " -exec rm { } \ ;
find test1 -type f -print
find . / -type l -exec file { } \ ; | grep broken
ps -A | grep mysql
tmpfile = $ ( mktemp $ ( dirname " $ 1 " ) / XXXXXX )
AMV = $ ( mount -l | grep " \ [ $ VLABEL \ ] " )
twofish = ' echo -n $ twofish | md5sum | tr -d " - " '
tar -xzvf backup.tar.gz
find . -name ' * .php ' | xargs wc -l | sort -r
find . -type f -print0 | xargs -0 -n 1 | grep -il ' ^ use strict '
find -type f -printf ' % T + % p \ n ' | sort | head -n 1
find -name ' * .cpp ' -exec dirname { } + | sort -u
ln -s $ ( echo / original / * .processme ) .
sort < ( sort -u file1.txt ) file2.txt file2.txt | uniq -u
env | grep ' ^ \ ( GOBIN \ | PATH = \ ) '
find . / -iname ! -iname dirname
grep -v " # " -R / var / spool / cron / tabs
grep -n ' something ' HUGEFILE | head -n 1
find . -type f -exec grep " example " ' { } ' \ ; -print
shopt -s expand _ aliases
address = $ ( dig + short google.com | grep -E ' ^ [ 0-9 . ] + $ ' | head -n 1 )
sudo chown -R $ ( whoami ) : admin / usr / local
find / myDir -name ' log * ' -and -not -name ' * .bz2 ' -ctime + 7 -exec bzip2 -zv { } \ ;
find / myDir -name ' log * ' -and -not -name ' * .bz2 ' -ctime + 7 -exec bzip2 -zv { } \ ;
find . -type f -exec ls -al { } \ ; | sort -nr -k5 | head -n 25
find . -group staff -perm -2000 -print
find . -perm -111 -type f | sort -r
find / -name myfile -type f -print
gzip " $ file "
jobs -lp | tail -n1 | tr ' \ n ' ' \ n '
echo $ ( date ) " 0 " | tee -a log.csv
rm -rf * ~ important-file
rm -rf * ~ important-file
rm -rf * ~ important-file
mount / dev / shm
find . / -iname ! -iname dirname
grep -r -l " foo " .
find . -type f -exec grep " example " ' { } ' \ ; -print
find / var -type d -name " postgis-2.0.0 "
diff < ( ls / bin ) < ( ls / usr / bin )
find . -size -10c -print
read -p " Enter Here : " text
ssh -Y $ ssh _ user @ $ ssh _ server
sudo chown ' whoami ' / data / db
find . -name " * .xml " -exec echo { } \ ;
find dir -name ' * .py ' | xargs wc -l
find " $ d " -mindepth 1 -prune -empty
find . -maxdepth 1 -not -iwholename ' * Video '
find -name " * * " -type f | rename ' s / / _ / g '
find -name " * * " -type f | rename ' s / / _ / g '
finger | cut -d ' ' -f1 | sort -u | grep -iv login
diff < ( sort $ def.out ) < ( sort $ def-new.out )
MOD _ DATE1 = $ ( date -d " $ MOD _ DATE " + % s )
echo -e " length ( FOO _ NO _ TRAIL _ SPACE ) = = $ ( echo -ne " $ { FOO _ NO _ TRAIL _
founddata = ' find . -name " filename including space " -print0 '
ssh -O exit officefirewall
tar czf - www | split -b 1073741824 - www-backup.tar .
find . -name " * zip " -type f | xargs ls -ltr | tail -1
find . -type f -name " * .java " -exec grep -il ' foo ' { } \ ;
DATECOMING = $ ( echo ' date -d " 20131220 " + % j ' )
find / -iname findcommandexamples.txt
find . -regex ' . * \ . \ ( cpp \ | h \ ) '
find / opt \ ( -name error _ log -o -name ' access _ log ' -o -name ' ssl _ engine _ log ' -o -name ' rewrite _ log ' -o -name ' catalina.out ' \ ) -size
find . -print -exec touch { } \ ;
find . -name not \ * | tr \ \ n \ \ 0 | xargs -0 rm
ls -l $ ( find / etc -name " * .txt " )
echo " error " | tee
rm -rf * ~ important-file
tac a.csv | sort -u -t , -r -k1,1 | tac
find . -type f -name " * .java " -exec grep -il ' foo ' { } \ ;
find . -name " * .java " -exec grep -Hin TODO { } + | basename ' cut -d " : " -f 1 '
find | xargs -i sh -c " echo { } { } "
find . -ctime -1 -print
find " $ SOURCE "
find / usr -newer / tmp / stamp
ls -l -- " $ dir / $ file "
ln -s $ ( echo / original / * .processme ) .
chown -R www-data / var / www / .gnome2 / var / www / .config / var / www / .config / inkscape
target _ PWD = $ ( readlink -f . )
find . / randfiles / -type f | wc -l
grep -r " string here " * | tee > ( wc -l )
nl -s- -ba -nrz
sudo find / var / www / html / -type d -name " postgs "
find . -name " * zip " -type f | xargs ls -ltr | tail -1
find " Test Folder " -type d -name .dummy -exec rm -rf \ " { } \ " \ ;
find . -name " * .xml " -exec echo { } \ ;
find $ HOME -name ' * .c ' -exec grep -s ' hoge.c ' { } ' \ ;
find test -type d -regex ' . * / course [ 0-9 . ] * '
find / etc -print0 | grep -azZ test | xargs -0 file
find . -iname ' * test * ' -exec cat { } \ ;
tail -n + 11 / tmp / myfile
ping -c 1 127.0.0.1 # ping your adress once
find . -iname " * .bak " -type f -print | xargs / bin / rm -f
df -k / tmp | tail -1 | tr -s ' ' | cut -d ' ' -f4
grep -o . file | sort -f | uniq -ic
tar czf - www | split -b 1073741824 - www-backup.tar .
find / myDir -name ' log * ' -and -not -name ' * .bz2 ' -ctime + 7 -exec bzip2 -zv { } \ ;
find / working -type f -name ' * .mp4 '
find . -name \ * .c -print0 | xargs -0 grep hogehoge / dev / null
find . -print -name SCCS -prune
find . -print -name SCCS -prune
find -type f -printf ' % T + % p \ n ' | sort | head -n 1
find -name " * .gz " | wc -l
find . -atime + 7 -o -size + 20480 -print
OUTPUT = ' top -b -n 1 | tail -n + 8 | head -n 1 '
find . -name " * .sh " | xargs rm -rf
find . -name " * .sh " | xargs rm -rf
df -k / tmp | tail -1 | tr -s ' ' | cut -d ' ' -f4
dig + short -x 173.194.33.71
chmod 644 $ ( find / path / to / base / dir -type f )
sudo find / var / www -type f -print0 | xargs -0 chmod 644
chown amzadm.root -R / usr / lib / python2.6 / site-packages /
touch -d " $ ( date --date = " @ $ old _ time " ) " B
cal -h | cut -c 4-17 | tail -n + 3
find . -type f -name " * . * " -not -path " * / .git / * " -print0 | xargs -0 $ SED _ CMD -i " s / $ 1 / $ 2 / g "
diff / tmp / test1 / tmp / test2
find / mnt / zip -name " * prefs copy " -print0 | xargs -0 -p / bin / rm
find " $ source _ dir " -name " * . $ input _ file _ type " -print0
find / -name * .mp3 -fprint nameoffiletoprintto
find . -iname ' * .jar ' -printf " unzip -c % p | grep -q ' < stringWithOrWithoutSpacesToFind > ' & & echo % p \ n " | sh
echo " $ { depsAlastmodified [ $ i ] } " | tr -cd ' [ [ : digit : ] ] ' | od -c
yes ' ' | head -7 | tr -d ' \ n '
mount / dev / shm
find . -iname ' * / modules / * ' -exec rm { } \ ;
find . -mmin -15 \ ( ! -regex " . * / \ .. * " \ )
ssh -v -Y phil @ 192.168.0.14 -p 222
rsync -R src / prog.js images / icon.jpg / tmp / package
bind -x ' " \ eW " : " who " '
find . -name " * .txt " -delete
find / etc -size + 5M -fprintf / etc / .
find . -name ' * ' -exec file { } \ ; | grep -o -P ' ^ . + : \ w + image '
find . -iname " * .txt " -exec du -b { } +
find / var / spool / mail -type f | cpio -pvdmB / home / username / mail
echo -n -e ' \ x61 ' | md5sum
ping -c 1 127.0.0.1 # ping your adress once
find . -iname " * .bak " -type f -print | xargs / bin / rm -f
find . type -f -ctime -2
find . / js / -type f -name " * .js " | xargs rm -f
grep -v ' ^ $ ' | paste -s -d " " , -
mv file.txt.123456 $ ( ls file.txt.123456 | rev | cut -c8- | rev )
END _ ABS = ' pwd -P '
find / data -name " * .img " -exec bzip2 -v { } \ ;
find / home / wsuNID / -name " * .txt "
find usr / include -name ' * .h ' -mtime -399 | wc
yes ' ' | head -7 | tr -d ' \ n '
rev file.txt | cut -d ' ' -f1 | rev
xargs -i rm ' { } '
REL _ DIR = " $ ( ssh -t localhost " $ heredoc " ) "
grep " ^ core id " / proc / cpuinfo | sort -u | wc -l
chown user3 : user3 -R subdir3
find / home / john / script -name " * .sh " -type f -exec chmod 644 { } \ ;
find . -size + 10k
env | grep ' ^ \ ( GOBIN \ | PATH = \ ) '
read -p " Are you sure you wish to continue ? "
ssh -R 10022 : localhost : 22 device @ server
grep -o . filename | sort | uniq -c | sort -nr
sort -m < ( zcat $ part0 | sort ) < ( zcat $ part1 | sort ) ...
touch -m 201111301200.00 $ log _ dir / last.check
touch -m 201111301200.00 $ log _ dir / last.check
find . -name " * .java " -exec grep -Hin TODO { } + | basename ' cut -d " : " -f 1 '
find / mnt / hda1 / zdjecia / test1 / -iname " * .jpg " -type f -exec cp { } -rv / mnt / hda1 / test { } " ; '
FOLDERS = $ ( find $ PWD -type d | paste -d , -s )
find $ { directory } -name " $ { pattern } " -print0 | xargs -0 $ { my _ command }
echo " line1 \ nline2 \ nline2 " | od -a line2
echo " $ 1 " | od -xcb
find / -iname " * .mp3 " -exec mv { } / mnt / mp3 \ ;
find / mnt / raid / upload -mtime -7 -print
pwd | cut -b2- | tr ' / ' ' \ n '
tdir = " $ ( pwd ) / $ ( mktemp -d ) "
find / home / folder1 / * .txt -type f -exec ln -s { } \ ;
LOGNAME = " ' basename " $ 0 " ' _ ' date " + % Y % m % d _ % H % M " ' "
zcat / proc / config.gz | grep CONFIG _ 64BIT
find . -name " vmware- * .log " -exec rm ' { } ' \ ;
grep " ^ core id " / proc / cpuinfo | sort -u | wc -l
grep -v ' ^ 2 ' file | cut -d ' ' -f2- | nl -w1 -s ' '
find / my _ folder -name " * .xml " -print0 | xargs -0 rm -rf
myVariable = $ ( env | grep VARIABLE _ NAME | grep -oe ' [ ^ = ] * $ ' ) ;
rsync -av --rsync-path = " sudo rsync " / path / to / files user @ targethost : / path
sudo chown -R ec2-user : apache / vol / html
sudo mount -t vboxsf myFileName ~ / destination
find . -regex ' . + \ . \ ( php | js \ ) '
rev $ filename | sort | uniq -f = N | rev
touch -d " $ ( date --date = " @ $ old _ time " ) " B
find / Users -type d -iname ' * .bak ' -print0 | xargs -0 rmdir
find . / lib / app -type f | sort
find -name ' * .js ' -not \ ( -path ' . / node _ modules / * ' -o -path ' . / vendor / * ' \ )
rm -rf * ~ important-file
find / -name ' core ' -exec rm -f { } \ ;
find / store / 01 -name " * .fits " -exec chmod -x + r { } \ ; \
split -b 500M -d -a 4 INPUT _ FILE _ NAME input.part .
myVariable = $ ( env | grep VARIABLE _ NAME | grep -oe ' [ ^ = ] * $ ' ) ;
watch ' echo -e " \ tHello World " '
find / home / folder1 / * .txt -type f -exec ln -s { } \ ;
find . -type f -exec basename { } \ ; | wc -l
find . -type d -ctime $ FTIME
find / users / tom -name " * .pl "
read two -p " $ { 1 : -Continue ? } [ y / n ] : " REPLY
ssh -L localhost : 8000 : clusternode : 22 user @ bridge
find / usr / share / man / -regex . * / grep *
find . -name " * .swp " -exec rm -rf { } \ ;
find / data -type f -perm 400 -exec echo Modifying { } \ ; -exec chmod 755 { } \ ;
ls -lR / | tee -a output.file
chgrp myproject _ dev / home / user1 / project / dev
mv $ ( find $ ( find . -name " * shp * " -printf " % h \ n " | uniq ) -type f ) .. / shp _ all /
find teste1 teste2 -type f -exec md5 -r { } \ ; | sort
diff -x ' * .foo ' -x ' * .bar ' -x ' * .baz ' / destination / dir / 1 / destination / dir / 2
find . -type f -name " * .php " -exec grep --with-filename -c " ^ use " { } \ ; | sort -t " : " -k 2 -n -r
mkdir 3 / Labs / lab4a / { folder1 , myfolder , foofolder }
cut -f $ FIELD * | sort | uniq -c | sort -nr
echo $ ( basename / foo / bar / stuff )
grep -r " string here " * | tee > ( wc -l )
md5sum * .java | grep 0bee89b07a248e27c83fc3d5951213c1
find . -type f -not -name " * .html " -exec grep -il ' foo ' { } \ ;
find . -name " * .java " -print0 | xargs -0 wc
find / \ ( -iname " * .png " -o -iname " * .jpg " \ ) -print -exec tar -rf images.tar { } \ ;
find $ FILES _ PATH -type f
read -p " Do you wish to install this program ? " yn
nl -s- -ba -nrz
cat / proc / 2671 / maps | grep ' which tail '
find test -print | grep -v ' / invalid _ dir / '
mkdir 3 / Labs / lab4a / { folder1 , myfolder , foofolder }
shopt -s expand _ aliases extglob xpg _ echo
diff -x ' * .foo ' -x ' * .bar ' -x ' * .baz ' / destination / dir / 1 / destination / dir / 2
find / var / log / -iname anaconda . * -exec tar -cvf file.tar { } \ ;
echo $ j | read k
echo t1 _ t2 _ t3 _ tn1 _ tn2.sh | rev | cut -d _ -f3- | rev
echo " 123 123 123 " | grep -o 123 | wc -l
read -p " $ MYUSERS " CONT
yes | tr \ \ n x | head -c $ BYTES | grep n
find . -iname ' sample * ' | xargs -i echo program { } -out { }
rename ' s / ^ fgh / jkl / ' fgh *
chgrp -R my _ group files
mv -t caniwrite / usr / local / bin / ~ play /
find / usr / bin -name [ ef ] * x
tFile = $ ( mktemp --tmpdir = / dev / shm )
ln -s " $ { TARGET } $ { file } " " $ { DESTINATION } $ { file } "
OUTPUT = ' top -b -n 1 | tail -n + 8 | head -n 1 '
yes y | rm -ir dir1 dir2 dir3
ssh -L localhost : 8000 : clusternode : 22 user @ bridge
find . -type f -exec grep -iH ' / bin / ksh ' { } \ ;
crontab -l -u user | cat - filename | crontab -u user -
mv $ ( find $ ( find . -name " * shp * " -printf " % h \ n " | uniq ) -type f ) .. / shp _ all /
diff < ( echo hello ) < ( echo goodbye )
find . -name " * .css " -exec grep -l " # content " { } \ ;
find / home / folder1 / * .txt -type f -exec ln -s { } " folder2 _ " + \ ;
find $ { DIR } -type f -iname " * .class " -printf " % h \ n " | sort -u
find . -exec echo { } \ ;
ls -d . / * / # # # more reliable BSD ls
ls -1tr * | tail -1
ping -c 1 192.168.1 . $ COUNTER | grep ' ms '
ping -c 1 192.168.1 . $ COUNTER | grep ' ms '
rename ' s / ^ fgh / jkl / ' fgh *
target _ PWD = $ ( readlink -f . )
REL _ DIR = " $ ( ssh -t localhost " $ heredoc " ) "
dig + short -x 173.194.33.71
find . -type f | egrep ' \ . ( shtml | css ) $ '
find / store / 01 -name " * .fits " -exec chmod -x + r { } \ ; \
gzip -dc archive.tar.gz | tar -xf - -C / destination
mv ~ / Linux / Old / ^ Tux.png ~ / Linux / New /
cd ' ls -d * / | grep 1670 '
find . -type f -group sunk
find / -name * .mp3 -fprint nameoffiletoprintto
find . -name ' Subscription.java '
find . -name ' * .php ' -exec chmod 755 { } \ ; | tee logfile.txt
mkdir -p tmp / test / % y / % h / % tmp / % r @ % h : / tmp / % h / % h : % p
ln -s " $ { TARGET } $ { file } " " $ { DESTINATION } $ { file } "
PATH = $ ( echo $ PATH | tr " : " " \ n " | grep -v $ 1 | tr " \ n " " : " )
find . -type f | egrep ' \ . ( shtml | css ) $ '
grep -aR -e . / your / dir | md5sum | cut -c-32
shopt -u nullglob dotglob
find . -iname " * linkin park * " -exec cp -r { } / Users / tommye / Desktop / LP \ ;
find . -depth -name .svn -exec rm -fr { } \ ;
find . -name * .jpg | uniq -u
grep -aR -e . / your / dir | md5sum | cut -c-32
find ~ -type f -user $ ( -perm -002 -o -perm -u + w \ ) -exec ls -l { } \ ;
find -name " * .xml " -exec grep -l " slc02oxm.us.oracle.com " { } \ ;
find . -iname ' sample * ' | xargs -i echo program { } -out { }
AMV = $ ( mount -l | grep " \ [ $ VLABEL \ ] " )
find . -type f -execdir echo ' { } ' ' ; '
find -name " * * " -type d | rename ' s / / _ / g '
find / -newerct ' 1 minute ago ' -print | xargs rm
grep " $ ( cat file1.txt ) " file2.txt
join -j 1 -t : -o 2.1,2.2,2.4,1.3 < ( sort empsal ) < ( sort empname )
join -j1 -o 2.1,2.2,1.2,1.3 < ( sort test.1 ) < ( sort test.2 )
find posns -type f -exec split -l 10000 { } \ ;
find / home / kibab -name ' * .png ' -exec echo ' { } ' ' ; '
sort -m < ( zcat $ part0 | sort ) < ( zcat $ part1 | sort ) ...
read -p " Please Enter a Message : ' echo $ ' \ n > " " message
find . / -daystart -mtime -3 -type f ! -mtime -1 -printf ' % Tc % p \ n '
cd $ ( readlink / proc / $ PID / cwd )
( LOCATE = $ ( cat / etc / passwd )
echo " This should _ recorrect.doc " | xargs -I { } echo somecommand { }
find . -type f -exec grep -iH ' / bin / ksh ' { } \ ;
join < ( sort index ) < ( nl strings | sort -b )
find . -type f -exec cp -t TARGET { } \ +
END _ ABS = ' pwd -P '
find . -name " Linkin Park * "
cp -Rvn / source / path / * / destination / path /
find . -name * .jpg | uniq -u
grep -v ' ^ 2 ' file | cut -d ' ' -f2- | nl -w1 -s ' '
scp -P 2222 / absolute _ path / source-folder / some-file user @ example.com : / absolute _ path / destination-folder
find " $ { S } " -name ' * .data ' -exec mv ' { } ' " $ { S } / data / " \ ;
find . -type f -name " * .mp3 " -exec rm -f { } \ ;
find -type d ! -perm -111 | xargs chmod g + w
find ~ / Library -name ' * * ' -exec ls { } \ ;
find / proc / scsi / -path ' / proc / scsi / usb-storage * ' -type f | xargs grep -l ' Attached : Yes '
grep -f file2 file1 | sort -u
join -t ' : ' < ( sort LN.txt ) < ( sort PH.txt ) | join -t ' : ' - < ( sort AD.txt )
rename ' s / ^ fgh / jkl / ' fgh *
grep -l ' ^ 2 ' file | cut -d ' ' -f2- | nl -w1 -s ' '
tac a.csv | sort -u -t , -r -k1,1 | tac
find . -type f -exec grep -o aaa { } \ ; | wc -l
find . -name " * .py " -type f -exec grep " something " { } \ ;
mv $ ( find $ ( find . -name " * shp * " -printf " % h \ n " | uniq ) -type f ) .. / shp _ all /
CDATE = $ ( date -d @ " $ timestamp " + " % Y- % m- % d % H : % M : % S " )
find MyApp.app -name Headers -type d -exec rm -rf " { } " \ ;
cd / home / ' whoami ' / usr / local / bin
fn = $ ( mktemp -u -t ' XXXXXX ' )
mkdir -p $ ( seq -f " weekly . % .0f " 0 $ WEEKS _ TO _ SAVE )
mkdir -p $ ( seq -f " weekly . % .0f " 0 $ WEEKS _ TO _ SAVE )
proc _ load _ average = $ ( w | head -1 | cut -d " " -f12 | cut -d " " , -f1-2 | tr ' , ' ' . ' )
mv src / js / usr / src / emacs / packages /
REL _ DIR = " $ ( ssh -t localhost " $ heredoc " ) "
echo " Some console and log file message " | tee / dev / fd / 3
rsync _ src = ' mktemp -d -p $ mnt _ dir '
find / home / mywebsite / public _ html / sites / all / modules -type d -exec chmod 750 { } +
rename ' s / ( . * ) $ / new . $ 1 / ' original.filename
tFile = $ ( mktemp --tmpdir = / dev / shm )
OUTPUT = ' top -b -n 1 | tail -n + 8 | head -n 1 '
echo " Hello , world " | tee / tmp / outfile
column -t file | uniq -w12 -c
touch ' cat files _ to _ find.txt '
find / tmp / 1 -iname ' * .txt ' -not -iname ' [ 0-9A-Za-z ] * .txt '
find . -name " * .dat " -type f -cmin + 60 -exec basename { } \ ;
find . -maxdepth 1 -name " * .pdf " -print0 | xargs -0 rm
base = $ ( dirname $ ( readlink $ file ) )
find . / -regex " cmn- . * [ \ x4e00- \ x9fa5 ] * \ .xml "
touch ' cat files _ to _ find.txt '
touch ' cat files _ to _ find.txt '
find . -name " * .sql " -print0 -type f | xargs -0 grep " expression "
grep -Ril " text-to-find-here " /
crontab -l -u user | cat - filename | crontab -u user -
grep -rnw ' pwd ' -e " pattern "
find $ INTRANETDESTINATION / weekly -mtime + 32 -exec rm { } \ ;
ssh -S my-ctrl-socket -O check jm @ sampledomain.com
find / home / u20806 / public _ html -maxdepth 1 -mmin + 5 -type f -name " * .txt " -delete
find . -type f -printf ' % T @ % p \ n ' | sort -n | tail -1 | cut -f2- -d " "
grep --include = \ * . { c , h } -rnw ' / path / to / somewhere / ' -e " pattern "
shopt -u dotglob dotglob
find " $ FOLDER " -type f -printf " % T @ \ n " | cut -f 1 -d . | sort -nr
basename / home / jsmith / base.wiki .wiki
rsync -aHvz / path / to / sfolder name @ remote.server : / path / to / remote / dfolder
crontab -l -u user | cat - filename | crontab -u user -
tmpdir = $ ( mktemp -d / tmp / tardir-XXXXXX )
totalLineCnt = $ ( cat " $ file " | grep " $ filter " | grep -v " $ nfilter " | wc -l | grep -o ' ^ [ 0-9 ] \ + ' ) ;
split --lines = 50000 / path / to / large / file / path / to / output / file / prefix
read -p " Enter your choice : " choice
chown -R apache : apache / vol / html
find / home / u20806 / public _ html -maxdepth 1 -mmin + 5 -type f -name " * .txt " -delete
cd ' / cygdrive / c / Program Files ( x86 ) / $ dollarsign '
echo -e " ONBOOT = \ " YES \ " \ nIPADDR = 10.42.84.168 \ nPREFIX = 24 " | sudo tee -a / etc / sysconfig / network-scripts / ifcfg-eth4
cd ' / cygdrive / c / Program Files ( x86 ) / $ dollarsign '
find . -type d -iregex ' ^ \ . / course \ ( [ 0-9 ] \ . \ ) * [ 0-9 ] $ '
REL _ DIR = " $ ( ssh -t localhost " $ heredoc " ) "
find / somefolder -type f | grep -i ' \ ( . * error . * \ ) \ | \ ( ^ second . * \ log $ \ ) \ | \ ( . * FFPC \ .log $ \ ) '
bzip2 -dc archive.tbz | tar xvf - filename
find . -name ' * .gz ' ! -name ' * dvportgroups * ' ! -name ' * nsanity * ' ! -name ' * vcsupport * ' ! -name ' * viclient * ' ! -name ' vsantraces * ' -exec gunzip -vf { } \ ;
gzip -dc archive.tar.gz | tar -xf - -C / destination
gzip -dc archive.tar.gz | tar -xf - -C / destination
scp -o StrictHostKeyChecking = no root @ IP : / root / K
mytemp = " $ ( mktemp -t " $ { PROG } " ) "
ls -1 / lib * / ld-linux * .so.2
sudo rsync -pgodt / home / / newhome /
find . -name " * " -maxdepth 1 -exec mv -t / home / foo2 / bulk2 { } +
FOLDERS = ' ls -dm $ MY _ DIRECTORY / * / | tr -d ' "
cd ' find . -maxdepth 1 -type d | grep 1670 '
ifconfig en0 | grep -o -E ' ( [ [ : xdigit : ] ] { 1,2 } : ) { 5 } [ [ : xdigit : ] ] { 1,2 } '
ls -l / lib * / ld-linux * .so.2
find " * 201111 * " -print0 | xargs -0 -I { } mv { } / home / backup
tmpfile = $ ( mktemp $ ( dirname " $ 1 " ) / XXXXXX )
crontab -l -u user | cat - filename | crontab -u user -
find . -name " * .class " -print0 | xargs -0 -n1 dirname | sort --unique
