Make directory " dir1 "
Make directory " / tmp / foo "
Recursively removes all empty folders under current folder .
Find files owned by no user
Find files that are empty
remove all core files in the file system
find all pdf files in the current folder
find all text files in the current directory
Make directory " / tmp / foo "
Print the date formatted with " % a % x % X "
display all the directories in the current folder
find all the files that have been modified today
display all the files in the entire file system
Counts lines in each * .php file .
find all files without 777 permision
Find all directories with space in their names under current directory and rename them by replacing all spaces with _
Find all files named " filename " in the current directory tree , not descending into " FOLDER1 "
Find files on the system modified more than 90 minutes ago
Print command history
Find all the files whose permissions are 777
Compress every file in the current directory tree with gzip and keep file extensions the same
Find directory " your / dir " if it is empty
Remove all symlinks from the current directory tree
Gunzip all files matching " file * .gz " and answer " n " to any prompts
delete all the regular files in the current folder
Find all files / directories with ' .js ' extension under current directory tree
Find all .java files under current directory
Find all .java files under current directory
Find all the SGID files in the current directory tree
find all the files that have been modified in the last 24 hours
Find files / directories that are bigger than 10000 KB in size uder ' / usr / local ' directory tree
Find all files named ' filename ' in the entire filesystem
Find file ' hosts '
Find all symbolic links in the current directory tree
Print the type of the current shell
Print command history
Show only group names
Set 644 permission to all regular files under current directory
Print the file system " file / goes / here " is on
Find all regular files in the current directory tree and search them for " example "
Find all regular files starting from level 3 of directory tree ~ / container and move them one level up
Find all files , folders , symlinks , etc matching pattern " * .php " in the current directory recursively
Find all symbolic links under " / proc / $ pid / fd "
Find all .sh files in the current directory tree and remove them
Find all .java files starting from the current folder
Search the current directory tree for empty directories and files
Find all the files which are accessed in last 1 hour
Find files in the current directory tree whose size is 24000 bytes
find all the regular / normal files in the current folder which belong to the group " flossblog "
Find all regular files under $ { S } directory tree that match the regex expanded by $ { TYPES _ RE
display all the files in the current folder
Find all the files whose name is tecmint.txt in the current directory
display all the files in the folder " / your / dir " which are bigger than 50MB
searches through the / usr directory for the regular file named ' Chapter1 * '
Find all files under images directory
Set 644 permission to all regular files under current directory
Save the date 222 days before today to the variable ' date _ 222days _ before _ To
Print file type information of the " java " executable
Find all directories with permissions 777 under and below / var / www / html , and change their permissions to 755
Delete all empty directories in the current directory tree
find all files in current folder which are exactly 300MB
Find all files that are modified in last 3 days
Find all files / directories under .. directory and copy them to ~ / foo / bar
Write " Australia / Adelaide " to standard output and to " / etc / timez
Print command history
Delete history entry at offset , defined in first argument of executed script
Search the current directory tree for files whose name is " .note " , case insensitive
Print the file system " file / goes / here " is on
Show all files in user ' s home directory that have read , write and execute permissions set for user , group and others .
Copies all files with " FooBar " in the path under the current directory to the ' ~ / foo / bar ' directory .
Print the number of entries ( files , directories , symlinks , etc . ) in the subdirectories of the current directory , stopping search
Move the directory named " some-dir " and residing under the current one to x /
search all the " .sh " files in the / usr folder
Find all files under images directory
Find all files readable by the world
Find all .php files in the / home / www directory tree
Find out all hard links in the / home directory to file1
Find all * .log files under current directory and print their contents
Find all * .jpg files in the current directory and below .
Find all regular files that reside in the current directory tree and were last modified at least 1 day ago
Search directory foo for files containing " foo / bar " in their full names
Search the current directory tree for files whose name is " .note " , case insensitive
Take a file path from standard input and remove it .
Print the number of lines in file.txt .
search all the " .sh " files in the / usr folder and follow the symbolic links to their original file
Find all files / directories named ' TEST _ 3 ' under ' / usr / share ' directory tree
display all the files in the current folder which have the permissions 777 and which have been modified in the last 24 hours .
find all the regular / normal files in the current folder
display the number of lines in all the files in the current folder
Find all files in the current directory tree whose names are " .DS _ STORE "
Find files modified in last 7 days
Find all the files which are modified in last 1 hour
Show the list of files larger than 100 MB
Find files / directories named ' filename.txt ' under ' / usr ' directory tree
Delete all files / directories under current directory
Find all * .jpg files under current directory and print only unique names
Find all * .code files under current directory
Print the current directory
Print the current directory
Rename all files in current directory whose name starts with ' F0000 ' , trimming a zero from any sequence
Save long listing of all running processes in the ' log ' file , and save number of process strings that contain
Find directory " your / dir " if it is empty
Find blabla * files under current directory
Find all the files which were modified 50 days ago
Find all symbolic links containing ' linux ' in their names under ' / root ' directory tree
Search for files whose name is " filename " and whose permissions are 777
Find all * .tif files under current directory
Find all filename.txt files / directories under / home / user / Desktop directory
Search the system for the file " testfile.txt "
Save the short DNS lookup output of $ WORKSTATION to ' WORKS
Save the canonical path of " $ dir / $ file " in variable " path "
Change owner of " folder " to " user _ name "
Find all files / directories under current directory matching the case insensitive pattern ' pattern '
Find all directories named ' vimrc ' in the entire filesystem
Search directory " / tmp / 1 " for files with extension " .mp3 "
Find all empty files ( zero byte files ) in your home directory and its sub-directories .
Find all .rpm files / directories under current directory
list all files / directories under current directory
find all the regular / normal files in the current folder which belong to the group ' tom '
find all the photos files in the entire file system
Delete all .svn files / directories under current directory
Delete all .svn files / directories under current directory
Find all files larger than 100M and delete them
recursively change owner of the directory / usr / local / lib to the current user
Remount root filesystem " / "
Remount " / " without writing in " / etc / mtab "
find all the files in the current folder which do not have the execute permission
Delete all files / directories named test under maximum 2 level down the current directory
Search the directories that match pattern ' / path / to / directory / folder { ? , [ 1-4 ] ? , 50 } ' for .txt files
split file t.txt into pieces per 30000000 lines named as " t.NN " with numeric suffix
find all of jchel files in the current folder
Search the current directory tree for * .conf and * .txt files
Find all the files in entire file system which are accessed 50 days back
Find all files / directories under current directory
Find all regular files in the current directory tree , except GIT files
Find all files / directories under current directory tree
Gunzip all files matching " file * .gz " and answer " n " to any prompts
find all files in the home folder that end with " macs "
Find all files / directories named ' photo ? .jpg ' under current directory tree
Search the current directory tree for files named " somename " , case insensitive
Find all regular files under current directory tree that are not newer than backup.tar.gz by modification time
Set permissions of all directories under " / opt / lampp / htdocs " to 755
Report file system inodes usage in human readable format
find all the files in the home folder which have been modified after a file
find all the files in the home folder that end with " .xbm "
Rename file file.txt.123456 to file.txt
Set shell option ' histverify ' .
find files owned by the " staff "
find all files that have the extension " bam " in current directory
Find files that are 0 bytes in size in the current directory tree and remove them
find files in home directory that were modified less than a day ago
find the passwd file in the entire file system
Search the current directory recursively for regular files with the extension given as variable $ extension
display all the html files in the folder / var / www
Compress all files under / -name ' directory tree that match with gzip
Remove all regular files that were modified more than 60 days ago under ' / path-to-directory ' directory tree
Find all files / directories with ' .note ' extension under current directory tree
find all the php files in current folder using regular expressions
Find all * .old files and move them to directory oldfiles
Find all files / directories named ' document ' in maximum 4 levels down the ' / usr ' directory
Compress every file in the current directory tree with gzip and keep file extensions the same
count the lines of java code for all the java files in the current directory
Save absolute path of " $ path " that may not exist to variable " abspath "
Create an empty file with a carriage return character in its name .
Remove all files / directories named test under maximum 2 level down the current directory
Replace all spaces with underscores in directory paths under current directory .
Set shell option ' nounset ' .
Search the current directory for all .jpg files whose names begin with " orapw "
Find all directories in the current one recursively which have the write bit set for " other "
Find files modified in last 7 days
Find all files in the current directory tree ignoring the " .git " directory
Remove all files and directories in the current directory by answering with " y " to all prompts
Delete file with inode number 314167125
Shows MAC address of network interface eth0 .
Read a line from standard input into variable " date " with prompt " BGC enter something " , and storing typed backs
Find all files / directories with ' .note ' extension under current directory tree
Remove all * .old files from the current directory tree
Find files in the current directory tree whose size is less than 24000 bytes
display all the php files in the current folder
Search $ SEARCH for all regular files under $ DIR directory tree
Find regular files modified within the last 7 days
Find every file under the directory / var / spool that was modified more than 60 days ago .
Find all * .jpg files under current directory and print only unique names
find the file " dateiname " in the entire file system ( case insensitive search )
Print common lines in files " set1 " and " set2 "
Counts number of * .php files in a current folder and subfolders .
List level 2 subdirectories of the current directory
Print the date formatted with " % a % x % X " followed by the host name
print readline bindings that use key code ' \ \ e \ \ C-k '
List all files in the current directory tree that were last modified on the 3rd of March , 2010 or later
Print command history
Search the / usr / local directory tree for directories named ' myfile '
Find all files under media / directory and change their permission to 600
Search all files in the current directory tree whose pathnames match pattern " . / sr * sc "
Search all files in the / directory tree whose names end in " 1 " for string " 1 "
Find files whose pathnames end in " config "
find all files in current folder which are bigger than 270MB
Find all files that are set group ID to 10
Find all files / directories in level 2 down the current directory
Print the list of all regular files from the current directory tree that contain " confirm " , case insensitive
Find recursively all files changed within the last 5 minutes starting from directory b
Print the IP addresses for the current host name
Search the current directory tree for regular files omitting directory ' omit-directory '
Find find symlinks pointing to / mnt / oldname * in the entire file system
Find all files / directories named ' myletter.doc ' under current directory tree
Delete interactively all the files / directories with inode number 782263 under current directory tree
Search the / path / to / dir directory tree for .c files
Search everywhere for directories named ' root '
Search the current directory and all of its sub-directory for any PDF files .
Find all files under media / directory and change their permission to 600
Find all regular files under ' / var / www ' directory tree
Find all files / directories named ' hosts ' under ' / usr ' directory tree
Find all * prefs copy files in the current directory tree to confirm command
Print whether the unique contents of " set1 " and " set2 " differ
Print the current directory tree with file sizes
Print the $ N ' th line from file by replacing commas ( ' , ' ) with newlines
Find all regular files that were modified more than 2 days ago under ' / path-to-directory ' directory tree , sort them according to timesta
Find all * .txt files under $ DIR directory tree with null character as the delimiter
search for the word " mysql " in all the files in the current containing the word " notes " in their name
Adjust the timestamp of ' filename ' by subtracting 2 hours from it .
Remove all files / directories named test under maximum 2 level down the current directory
Changes group ownership of ' myfile ' to ' git ' .
Find all 777 permission files and use chmod command to set permissions to 644
Move all files from the ' sourceDir ' directory tree to the ' destDir ' directory
Delete all files in the / TBD directory that were modified more than 1 day ago
Search the XML files from directories / res / values-en-rUS and / res / xml for string " hovering _ msg "
display list of all the hidden regular / normal files in the directory " / dir / to / search / "
Add group write permission to all files and directories in the current directory including hidden files and excluding " " ..
Remove files that are less than 1MB in size under current directory
Search the system for files named " findcommandexamples.txt " , ignoring the case
Find all text files in the home directory
display a long listing of all the directories in the entire file system
count all the regular files that are present in a directory
display all the normal / regular files in the current folder which are empty
Find all * .tmp files under and below the / home / backups /
Find files and directories that are at least seven levels of nesting in the directory / usr / src
Find recursively all regular files changed within the last 5 minutes starting from directory b
Print the list of files and directories of the current directory
Remove all regular files from the given names modified more than 5 days ago
Print the current directory tree with file sizes
Run command ' su whoami ' on host ' remotehost '
Search all regular files in the current directory tree for " string "
Find all * .old files and move them to directory oldfiles
Save the full path of command " ~ / f " to variable " foo "
Save the date 222 days before today to the variable ' date _ 222days _ before _ TodayDay '
display all the regular / normal files in the / tmp folder which have been modified in the last 48 hours
Find all * .cgi files / directories under current directory and change their permission to 755
find all files that do not have execute permission to all
find files which have all permissions to all the users in the current directory
list all javascipts file which whole name does not contain " directory "
Compress every file in the current directory tree with gzip and keep file extensions the same
Find all regular files under current directory tree that contain ' some text ' in their names excluding paths that contain dot files / directories
Find all files , folders , symlinks , etc matching pattern " * .php " in the current directory recursively
Find all files / directories with ' .bar ' extension in maximum 2 levels down the current directory
Search the current directory recursively for files last modified within the past 24 hours ignoring .swp files and paths . / es * and . / en *
Mount " tmpfs " filesystem to " / path / to / dir "
Find all * .mp3 ( case insensitive ) files / directories under entire file system
Find x * files / directories under / tmp directory whose status was changed less than 1 day ago
Search the current directory recursively for .txt files with lines that match regular expression ' ^ From : . * unique sender ' , ignoring ~ / src and ~ / bin
Find all files / directories under / proc and run ls command on each .
Print out the contents of all * .txt files in the home directory
Find all regular files under current directory tree that contain ' some text ' in their names excluding paths that contain dot files / directories
Check if the directory tree whose name is given as variable $ somedir contains no regular files
Report file systems disk usage in 1GB blocks .
display all the php files in the current folder
Reports count of processors in system .
change the permissions of all the regular / normal files in the current folder
display list of all the files in the / etc folder which have been modified in the last 24 hours
Find all files larger than 100M and delete them
Search the / dir directory tree for files whose names match regular expression ' . * 2015 . * \ ( album . * \ | picture . * \ ) '
Find all files / directories with ' .bar ' extension in maximum 2 levels down the current directory
Search the current directory tree for files whose names start with " f "
find StringBuffer in all * .java files , ignoring case
display all the files in the file system which have been changed in the last 24 hours .
Find all .sh files in the current directory tree and remove them
Find files with name ' TEST _ 3 ' in the current directory tree
Compare " current.log " and " previous.log " line by line and print lines containing regex pattern " > \ | < "
find files in / full / path / to / dir / file.txt
Remove all vmware- * .log files under current directory
Archive " $ top " to " user @ host : / path " via ssh on port 2222 and display progress
Check if the $ somedir directory is empty
Remove all _ _ temp _ _ * directories under maximum 1 level down the current directory tree
Copy all files matching " file _ name.extension " to " / path / to / receiving / folder " preserving directory hierarchy
Find all files in the current directory tree whose path names match pattern ' . / sr * sc '
display all the files in the file system excluding all the " .c " files
Find all * .txt ( case insensitive ) files of user root under / directory and show a few lines of output from the beginning
find all the file which name end with c or h and content contain ' thing '
Sort the lines of the file ' set1 ' and the output it in-place
Change permissions to 755 for all directories in the current directory tree
Filters only directories from long file listing of the current directory
Find files / directories that are newer than ' foo.txt ' under current directory tree
Find all regular files named postgis-2.0.0 under your home directory
Find all the SGID files in the current directory tree
Copy " / path / to / source " to ' / path / to / dest ' in remote " username @ computer "
Find all * .swp files / directories under current directory
Save list of groups which user $ line belongs to and not matching pattern " _ unknown | sciences | everyone | netaccounts " in '
Find all 100MB + files and delete them
Find all * .txt files / directories under current directory discarding ' Permission denied ' errors
Find files ending in " config "
display all the files in the current folder which end with " .bash "
Saves real path of the folder containing the current script
Remove all " core " files that were last changed more than 4 days ago from the current directory tree
Find all files / directories under current directory tree that start with ' test ' in their names without descending into directories with the same name pattern
Find all files in the level 6 subdirecotries of / usr / src and below , ignoring CVS files
display a long listing of all the java files in the current folder in sorted order
Archive the entire file system into tarfile.tar.bz2
Find all files / directories under current directory tree whose paths start with ' . / sr ' and end with ' sc '
Search the current directory tree for directories
find all the files in the entire file system whose size is greater than 20MB
Search the current directory recursively for MOV files , following symlinks
Find all * .old files and move them to directory oldfiles
Move all files from the ' sourceDir ' directory tree to the ' destDir ' directory
find foo , Foo , FOo , FOO , etc . , but only files
Find all files in the current directory tree whose pathnames match pattern ' * / 1 / lang / en.css '
Remove any file containing string " GUI "
Search the xargstest / directory recursively for files matching pattern ' file ? ? '
Print reverse lookup for IP address 72.51.34.34
Read standard input until a null character is found and save the result in variable " line "
find files in / full / path / to / dir / file.txt which have not been modified in the last 2 days
Find all files / directories named ' whatever ' under current directory tree excluding paths that contain any hidden directory
find all the directories in the current folder which have been modified in 24 hours and move them to the folder / path / to / target-dir
Search the current directory tree for * .c and * .asm files , ignoring the case
Find and copy all log files in the current directory tree to / tmp / log-files
find all the regular / normal files in the current folder which belong to the group " flossblog "
Suffix all files and folders in the current directory with " _ SUF "
find all the files in the file system which have been accessed in the last 1 day
find StringBuffer in all * .java files , ignoring case
Find * .conf files / directories only upto 2 levels down under / etc directory and show a few lines of output from the end
find all the " monfichier " files in the current folder
Find all files / directories named ' file ' without descending into directories with the same name under current directory tree
search for the directory " mysql " in the / etc folder
List all files / directories under $ dir _ name with size $ sizeFile and print them according to the format string ' % M % n % u % g % s % Tb % Td % Tk : % TM %
find all the files in the current folder which have been modified in the last 60 minutes , which are atleast 1 level deep and display a long listing of these files
Find all regular files in the current directory tree ignoring GIT and SVN directories
Find all regular files under and below / var / www directory and change their permission to 700
Find all directories under / path / to / someDirectory tree and change their permission to 755
Find all regular files in the current director and set their permissions to ' 644 ' .
display all the files in the temp folder which end with " .bmp "
Search the / tmp / directory recursively for files matching regular expression " . * file [ 0-9 ] + $ "
Find all files starting from / whose names end with " .rpm " and change their permissions to 755
Save the user name of the current user to variable " x "
Find the most recently changed files in a subtree
Search the / tmp / directory recursively for files matching regular expression " . * file [ 0-9 ] + $ "
Print the current date in ' % H : % M : % S ' format followed by the string ' : done waiting. both jobs terminated on their own or via timeout ; resu
Search the / path directory tree for files that are smaller than 100 megabytes in size
Find all directories under / foo / bar and set their permission to 775
Measure the disk space taken up by all * .txt files in the current directory tree
Find files matching regular expression regexp
Find all hidden files
Search the / path / to / dir directory tree for .c files
Unsets shell option ' extglob ' .
Find files / directories named ' new ' under ' / usr ' directory tree
Find all files owned by group ' group2 '
Find all files larger than 100M and delete them
Search the home directory tree for files owned by sam
find all the files in the current directory and print them excluding those that have the name SCCS .
Search the / Path directory tree for files matching pattern " file _ name * "
Changes group ownership of ' public ' to ' pub ' .
searches through the / usr / local directory for files that end with the extension .html
Make directory named in variable " $ HOME / Labs / lab4a "
See what files are executable by the file ' s owner and group
Find all regular files under $ FOLDER directory tree that start with ' " . ' and end with ' " ' in their names and were modified in less than $ RETENTION days excluding the files whose conten
Print out the full path name of " mypathname " with dots resolved
Print all files and directories in the ' . ' directory tree skipping SCCS directories
Remove files under / mnt / zip matching " * prets copy " with confirmation
Search the current directory tree for regular files whose names end in " .shtml " or " .css "
Search the current directory tree for regular files that contain " string "
Search the regular files of the current directory tree for string " foo "
Search the / path / to / dir directory tree for regular files modified 61 days ago
Split " file.txt " into files of at most 20 lines each with a prefix " new "
Print the full path of command " rails "
Compress all files under / source directory tree using gzip with best compression method
Find files owned by nonexistent users
Delete all hidden files / directories under $ some _ directory including $ some _ directory
Find all files under current directory and append a null character at the end of each of their paths
Find all * .csv files under / foot / bar / and move them to some _ dir
Print the current date followed by " : $ line "
Find all files / directories under current directory with ' FooBar ' in their paths and copy them to ~ / foo / bar
display all the files in the folder / home which are bigger than 10MB and smaller than 50 MB
Print only common file names in sorted listings of directory ' dir1 ' and ' dir2 '
Print out the contents of all * .txt files in the home directory
Print out the contents of all * .txt files in the home directory
Find regular files matching pattern " * oraenv * " and excecute the " file " utility for each of them
search in the current folder for all the directories with the name " test "
Split " file.txt " into files of at most 20 lines each with a prefix " new "
Change permissions to 755 for all directories in the / path / to / someDirectory /
Find all regular files in the current directory tree that have been modified within the last 10 minutes
Find all files under $ sourceDir directory that match \ * .tex and * $ EXCLUDE * in their names
Stores system load average number in the ' proc _ load _ average ' variable .
Search the home directory tree for files modified less than 7 days ago
Find files / directories under ' / usr ' directory tree that are newer than / tmp / stamp $ $ by modification time
display the count of total number of empty files in the current folder
Display " / tmp / file " as a table of width 30 with columns filled before rows
Compress all * .img files using bzip2
Search the current directory tree for files whose names do not end in " 1 " and " 2 "
search in the current folder for all the directories with the name " test "
Find all regular files with ' .txt ' extension excluding ' README.txt ' files under current directory tree
Find all files under $ source _ dir that match the regex expanded by $ input _ file _ type in their paths
Search the current directory tree for files without " test " in their path names
Find all files / directories under ' / tmp ' directory tree that have not been modified in the last 356 days counting days from today
find files in the current directory and sub-directories , whose content was updated within the last hour
Find files / directories named ' document ' in ' ext2 ' partitions in entire filesystem
Find all files / directores that are newer than / etc / motd and conain the string ' top ' at the beginning of their names under user ' s home directory tree
Find all files under current directory whose file type description contains " image " , display the paths to files and file type descriptions .
Count the number of the regular files residing under and below . / randfiles /
Archive " / usr / local / " to " / BackUp / usr / local / " on host " XXX.XXX.XXX.XXX " via ssh and show progress
Find all files under current directory that were modified in the last 24 hours and also include the files that were modified in less than 1 day ago
Print the list of files changed within the last minute
Find all * .csv files under / foo / bar and move them to some _ dir
Search the / path directory tree for files missing g + w or o + w bits
List all files in the current directory tree except for those in the . / src / emacs directory
Archive the entire file system into tarfile.tar.bz2
Find all files in $ 1 which have not been accessed in the last 30 minutes
Find all files / directories under $ 1 which have at least write permission for their owner and set write permission for group for these files / directories
Removes resursively all files and folders named " Thumbs.db " , ignoring case distincts .
Search the / path directory tree for files missing g + w or o + w bits
Search the / path directory tree for files missing g + w or o + w bits
Print a listing of the ' other ' directory
Save the user name of the current user to variable " x "
Change permissions to 644 for all files showing the respective chmod command
Compress all files in the current directory tree with gzip and keep file extensions the same
Search the current directory tree for hidden files skipping .htaccess
Print info about all mounted file systems , and grand total statistic about available and used space
display all the files in the folder / tmp / 1 excluding those which do not have spaces in their names
Print every 98 characters from standard input as field in " file "
Create symbolic links in current directory for all files located in " dir " directory and have filename extension " jpg "
Prints groups list that current user belongs to .
Save system information appended with the current date in ' filename ' variable
display a long listing of all the files in the current folder which are bigger than 10KB
Find all files / directories named ' .todo ' under $ STORAGEFOLDER directory tree and print the parent directory names
Delete files in / var / tmp / stuff and below that have not been modified in over 90 days
Find all files in $ 1 which have not been accessed in the last 30 minutes
Find all files / directories under $ 1 which have at least write permission for their owner and set write permission for group for these files / directories
Print info about all mounted file systems , and grand total statistic about available and used space
List all files / directories under $ dir _ name with size $ sizeFile and print them according to the format string ' % M % n % u % g % s % Tb % Td % Tk : % TM %
Create an empty file ( or update timestamp of file ) specified by variable " correctFilePathAndName "
Find all files / directories under current directory that were modified later than / reference / file
Find all files / directories under current directory tree whose paths start with ' . / sr ' and end with ' sc '
Find a directory named ' project.images ' in the entire filesystem and show it in long listing format
Change permissions to 644 for all subdirectories
Search the / home / directory tree for files matching regular expression ' . * file [ 0-9 ] * $ '
Md5sum the last 5 files in / directory1 / directory2 /
Find all * .tex regular files in maximum 2 levels down the current directory
create a symbolic link named " / usr / bin / my-editor " to file " / usr / share / my-ditor / my-editor-executable "
Find all regular files under and below / root that are bigger than 500 megabytes in size
Find all * .ini files that were changed $ FTIME days ago
Move each of the directories in / path / to / folders / * to another directory whose name is constituted by appending .mbox to each directory name and create a directory named Messages in this directory
Delete the files under the current working directory with inode numbers specified on standard input
delete all the normal files in the current folder which have not been modified in the last 60 minutes
Save the date 222 days before today to the variable ' date _ 222days _ before _ TodayDay '
display all the normal / regular files in the current folder which are present in the pattern file " file _ list.txt "
Find all regular files that reside in the current directory tree and were last modified more than 4 days ago
Show file type information for files in / usr / bin
Archive " _ vim / " to " ~ / .vim " suppressing non-error messages and compressing data during transmission
Search the current directory tree for files whose names end in " rb " or " js "
Search the current directory tree for all .java files that were last modified at least 7 days ago
Add a line number to every line in " infile "
display all the .jpg files in the current folder and do not search in sub folders
Correct permissions for directories in the web directory
Archive " / path / to / application.ini " on host " source _ host " to current directory .
find all the files in the current folder which start with t and have been modified between one hour ( 60 minutes ) and 12 hours ( 720 minutes ) ago .
find all the files ending with " .c " in current folder and search for a word in them .
Find all directories under $ x directory and set read-write-execute permission for owner and group and no permission for other for those directories
Find all * .java files under current directory and archive them to myfile.tar
display all the files ending with " .foo " including those that are in the directory " .snapshot " , this is the wrong way of using prune .
Find regular files named " expression -and expression " under and below / dir / to / search /
Sort " -t " , delimited lines in " file " by the first and third field preserving only unique lines
Remove everything in a current folder prompting user on each action .
Check if $ path _ in _ question is mount point of filesystem
Print all the files / directories under current directory tree as space separated between $ GIT _ DIR variable
Print the path names of all files in the directory tree skipping SCCS directories
Find all files / directories under ' / data ' directory tree that have not been modified in the last 356 days counting days from today
Shows state of ' extglob ' shell option .
Numerically sort each line in file " bb " and output the result to console from greatest value to least value
Compress all files under / myfiles directory tree with gzip
Copy all files unconditionally and directories in directory tree " myfiles " to " target-dir " preserving directory hierarchy and modification time
Search the current directory tree for files matching sed regular expression ' . * myfile [ 0-9 ] \ { 1,2 \ } '
Move all files / directories under current directory to ~ / play
Search the regular files from directory tree ' directory _ name ' for " word " and print the names of the matched files
Display the 5 largest files in the current directory and its sub-directories .
Removes all top-level empty folders within the current folder .
Find all regular files under $ sourcePath directory that were modified more than 7 days ago and move them to $ target directory
Sort " file " using a buffer with a size 50 % of main memory
Change permissions of all directories residing under and below . / debian to 755
Search the regular files from directory tree ' directory _ name ' for " word " and print the names of the matched files
Prints calendar of February , 1900 .
Find all files / directories under ~ / documents with ' * .bar ' and ' . / between up-user ' s home directory tree
find all the files in the current folder which have execute permission
Find files in the current directory tree that match pattern " * sub * "
Make directory " dir " and do not cause an error if it exists
See what files are executable by the file ' s owner and group
Save the UTC date represented by time string $ sting2 as the seconds since epoch to variable ' FinalDate '
find all the regular files in the current directory tree that have been modified in the last last 24 hours and display a long listing of them
Print all business days in the current month without column titles
Read a line from standard input and save response in variable " VARNAME "
Find files in entire file system that are writable by group or other
Archive " foo / bar / baz.c " to " / some / path " on host " server " as a remote host
Move all files and directories matching " * .boo " in the current directory to " subdir "
Search the regular files from directory tree ' directory _ name ' for " word " and print the names of the matched files
Search the current directory recursively for files last modified within the past 24 hours ignoring .swp files and paths . / es * and . / en *
Find all files in / dir1 and print only the filenames ( not paths )
display all the regular / normal files in the entire file system
View line 500 to line 500 + 501 in gzipped file " bigfile.z "
display all the files ending with " .foo " including those that are in the directory " .snapshot " , this is the wrong way of using prune .
search for a word in all the files in the current directory
Search the entire system for SUID or SGID files
List all environment variables ( name and value ) whose name either equals HOME or PATH , or starts with GO
Change the owner of " $ JBOSS _ CONSOLE _ LOG " to " $ JBOSS _ USER "
Recursively change owner and group to " $ JBOSS _ AS _ USER " of " $ JBOSS _ AS _ DIR / "
find all the files in the current folder which have not been modified in the last 90 days and force delete them
Search the entire system for SUID or SGID files
Print the path names of all files and directories in the current directory tree
Change the owner of " / etc / rc.conf " to " root " using at most 10 files at a time
find all the files in the folder " / mp3-collection " which are bigger than 10MB excluding those that start with the word Metallica
Type unique list of all directories contiaining each file named ' myfile ' under the / home directory
Remove all files in ~ / clang + llvm-3.3 / bin / and print ' basename / file / path ' for each file
Find files matching regular expression regexp
Print the first 10 files or directories found in the / tmp directory tree by ' find '
Decompress " path / to / test / file.gz " to standard output and save all lines matching " my regex " to files with a 1000000 line limit
Remove all files matching the pattern * .bak and * .backup files that were modified more than 5 days ago
create a symbolic link named " / usr / bin / my-editor " to file " / usr / share / my-ditor / my-editor-executable "
Find the directories whose pathnames contain " New Parts " at level 3 of the current directory tree and create symlinks to them in / cygdrive / c / Views
delete all the files in the current folder which do not belong to any user
Remove each unique item listed on standard input and do nothing if empty
Find all files / directories under current directory tree excluding hidden files / directories
Find all files / directories older than 48 hours in / path / to / files * paths and print the timestamp in YmdHMS format along with their paths
Decompress ' file.gz '
Delete files under $ LOCATION that match $ REQUIRED _ FILES in their names and were modified more than 360 minutes ago
Remove each unique item listed on standard input and do nothing if empty
Find all files under / path / to / dir that were modified less than 7 days ago with null character as the delimiter
Compare " file1 " and " file2 " line by line with 3 lines of unified context
Recursively copy " $ appname.app " , and " $ appname.app " to local directory " $ appname.app " , and compress data during transmission
Print the CDS characters from " / dev / urandom "
Removes all files like ' * .bak ' in a current folder , and prints messages about what is being done .
Search the current directory tree for regular files whose names end in " .shtml " or " .css "
Print the MD5 message digest of " / path / to / destination / file "
Print permissions of all directories in the / tmp directory tree whose names are " Trash " , and " $ 1 "
Find all files / directories under $ 1 which have at least write permission for their owner and set write permission for group for these files / directories
Find all broken symlinks under / path / to / search directory
Create a symbolic link named " / usr / bin / perl " to file " / usr / local / bin / perl "
Change permissions to u = rw , g = r , o = for all files in the current directory tree
Find all files in the / the / path directory tree that match pattern " . * \ .abc $ " in their names
Find the directories whose pathnames contain " New Parts " at level 3 of the current directory tree and create symlinks to them in / cygdrive / c / Views
Move all files and directories in the current directory to " / tmp / blah / "
Read a line from standard input into variable " message " with escaped prompt " \ nPlease Enter \ na Message : ' "
Split " complete.out " into files with at most " $ lines _ per _ file " lines each
Print the file system owned by group ' staff '
Silently read exactly 1 character ignoring any delimiters into variable " SELECT "
Archive the recursive to host " server " as user " user " and copy local file " / my _ folder / my _ file.xml " to server _ b ' s directory " / my _ new _ folder / " .
Archive " / path / to / local / storage " to " user @ remote.remoted.from " / path / to / local / storage "
Print the list of files in the current directory tree ignoring .svn , .git , and other hidden directories
Create a symbolic link to file " / usr / bin / perl " named with escaped characters " / usr / local / bin / perl \ r \ n "
Search for files / directories with the case insensitive pattern anaconda . * in var / log directory and create an archive ( file1.tar ) of the last block of files sent to xargs
Search PATH for utilities called " rename " , display the type of file ( script , executable , ... ) for each match found .
display a long listing of all the xls or csv files in the entire file system
display a long listing of all the " Trash " files in the folder / home
display all the files ending with " .user " in / var / adm / logs / morelogs / and excluding all regular files
Print all lines from file ' report.txt ' containing any-cased ' error ' pattern
Find all files / directories under current directory with ' foobar ' ( case insensitive ) in their names and copy them to ~ / foo / bar
Find files / directories ignoring the case of that contain ' .js ' in their names under ' / usr / local ' directory tree
Print the list of files in the current directory tree ignoring .svn , .git , and other hidden directories
search for all the regular / normal files in the / etc folder which have been modified in the last 24 hours
Archive " / usr / local / " to " / BackUp / usr / local / " on host " XXX.XXX.XXX.XXX " via ssh and show progress
Find all files / directories under ' / project / ' directory tree that match the case insensitive regex ' . * \ . \ ( album | picture . * \ ) '
Removes resursively all files and folders named " Thumbs.db " , ignoring case distincts .
Archive the list of 1st level subdirectories in / fss / fin to / fss / fi / outfile.tar.gz
Print the list of files in the current directory tree ignoring .svn , .git , and other hidden directories
Save the number of matching executables for " $ cmd " in $ PATH to variable " candidates "
Search for files with " sitesearch " in their names and " demo " in their path names
Compress all files under / source directory tree using gzip with best compression method
Find all IP addresses in / etc directory files
Find all files under $ searchpath directory that match the regex ' pattern ' in their name and display the matched files
Saves list of logged in users in system together with ' USER ' header in the ' a ' variable .
Move " file.txt " to docker container " $ COUNTAINER _ ID " in path " / var / lib / docker / aufs / mnt / $ CONTAINER _ ID / rootfs / root / file.txt "
searches through the root filesystem ( " / " ) for the file named Chapter1 .
Archive " / usr / local / " to " / BackUp / usr / local / " on host " XXX.XXX.XXX.XXX " via ssh and show progress
Print content of ' a ' file , showing all non-printing characters including TAB characters , and displaying $ at the end of each line .
Find all files under $ source _ dir that match the regex expanded by $ input _ file _ type in their paths
Locate all files in the current directory and below that have " testfile " in their names regardless of the case
Archive " / path / to / files " to " / path " on host " user @ targethost " with elevated permission on the remote host
Search the current directory tree for all files matching either pattern ' * .rb ' or pattern ' * .py '
Search PATH for utilities called " rename " , display the type of file ( script , executable , ... ) for each match found .
Move all files not matching " Tux.png " in " ~ / Linux / Old " to " ~ / Linux / New / " using zsh with " EXTENDED _ GLOB "
display all the files in the folders / etc / srv excluding the paths / etc / mtab and / srv / tftp / pxelinux.cfg
Remove duplicate phrases and keep the original order of lines in " $ infile "
Print a sorted list of directories from the ~ / Music tree containing files whose names begin with " cover " .
Print the current date in ' % H : % M : % S ' format followed by the string ' : done waiting. both jobs terminated on their own or via timeout ; resuming script '
Archive " / usr / local / " to " / BackUp / usr / local / " on host " XXX.XXX.XXX.XXX " via ssh and show progress
Move all * .emlx files / directories under / path / to / folders / to . / Messages / directory
Print a list of all the files in entire file system whose inode has been modified no later than one minute ago
Perform a dry run to recursively copy " test / a " to " test / dest " excluding " test / a / b / c / d "
Move all * .emlx files / directories under / path / to / folders / to . / Messages / directory
Searches the manual pages with descriptions in section 3 , that name begins with lowercase letter .
find all the files in the entire file system that have been changed exactly 60 days and display ten files
Change directory to the " lib " directory located two parent directories above the path to command " perl "
Find files / directories that isn ' t owned by the user ' apache ' under / var / www
Decompress " path / to / your / file " to standard output and save all lines matching " my regex " to files with a 1000000 line limit
Find all files under $ { searchpath } that match the regex $ { string1 } . * $ { string2 } . * $ { string3 } in their contents where $ { string1 } etc .. will be expanded
Archive " / usr / local / " to " / BackUp / usr / local / " on host " XXX.XXX.XXX.XXX " via ssh and show progress
Decompress and extract " $ { arr } " and split the result into files of size 1024 MiB with prefix " myfile _ split.gz _ "
Print the compressed size , uncompressed size , compression ratio , and uncompressed filename of " file.zip "
Save the first " " . separated field of the system host name to variable " HOSTZ "
Find all directories under / path / to / folders / * excluding paths that match the case insensitive pattern * $ node _ modules / *
Archive " / media / 10001 / music / " on host " server " to local directory " / media / incoming / music / " and skip files that are newer in the destination , delete any files in the destination not in the source , and compress data during transmission
Print a count of all unique lines in " ports.txt " sorted from most frequent to least frequent
