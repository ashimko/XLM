create directory dir1
create directory / tmp / foo
Recursively list contents of the current directory in a tree-like format
Find files owned by nonexistent users
Find files that are empty
remove all core files in the file system
find all pdf files in the current folder
find all text files in the current directory
create directory / tmp / foo
Print the date formatted with " % a % x % X "
display all the directories in the current folder
find all the files that have been modified today
display all the files in the entire file system which have permissions 777 and which have been modified in the last 24 hours .
Counts lines of $ file .
find all files without 777 permision
Find all directories with space in their names under current directory and rename them by replacing all spaces with _
Find all files / directories under ' / usr / share / doc ' directory tree that contain ' readme ' ( case insensitive
Find all files on the system that are larger than 600 MB
Print command history
Find all 777 permission directories under current directory and set permissions to 755
Compress every file in the current directory tree with gzip and keep file extensions the same
Find directory " your / dir " if it is empty
Remove all symlinks from the current directory tree
gunzip all files matching " file * .gz " and answer " n " to any prompts
Delete all regular files whose names do not end in " * .html "
Find all files / directories with ' .js ' extension under current directory tree
Find all * .java files under current directory
Find all * .java files under current directory
Find all the SGID files in the current directory tree
find all the files that have been modified in the last 24 hours
Find files / directories that are larger than 500 MB in size under ' / home / user ' directory tree
Find all files named " filename "
Find file ' hosts '
Find recursively all regular files in the current directory tree not ending in .dll or .exe
Print the type of the current shell
Delete history entry at offset , defined in first argument of executed script
Sort file " find.txt " by line to standard output
Set 644 permission to all regular files under current directory
Print the file content of command " f "
Find all regular files in the current directory tree and search them for " example "
Find all regular files starting from level 3 of directory tree ~ / container and move them to the current directory
Find all files whose owner is ' user1 '
Find all symbolic links under " / proc / $ pid / fd " with name " $ save _ path "
Find all .sh files in the current directory tree and remove them
Find all .java files starting from the current folder
Search the current directory recursively for directories
Find all the files which are accessed in last 1 hour
Find files / directories in entire file system newer than myfile
find the number of regular files in the current folder and display the number of lines in the output
Find all regular files under $ { S } directory
display all the text files in current folder
Find all the files whose name is tecmint.txt
Find all files under and below / dir whose names are " .DS _ STORE "
searches through the / usr directory for the regular file named ' Chapter1 * '
Find all files under images directory
Set 644 permission to all regular files under current directory
Save the date 222 days before today to the variable ' date _ 222days _ before _ To
Print file type information of the " java " executable
Find all directories with permissions 777 under and below / var / www / html , and change their permissions to 755
Delete all directories in the current directory .
find all files in current folder which are exactly 300MB
Find all files that are modified in last 3 days
Find all files / directories under .. directory and print each of them with a target character as the delimiter
Write " Hello , world " to standard output and to " / tmp / outfile "
Delete history entry at offset , defined in first argument of executed script
Delete history entry at offset , defined in first argument of executed script
Search the current directory tree for files whose name is " .note " , case insensitive
Print the file system " file / goes / here " is on
Show all files that have not been accessed in the $ HOME directory for 30 days or more
Copies all files with " FooBar " in the path under the current directory to the ' ~ / foo / bar ' directory .
Print first word of lines unique for ' file1 ' file
Move " $ file " to " $ file "
search all the " .sh " files in the / usr folder
Find all files under images directory
Find all files readable by the world
Search the / home / www directory tree for regular files
Find out all hard links in the / home directory to file1
Find all * .log files under current directory and print their timestamps and paths
Find all * .jpg files in the current directory and below .
Find all regular files that reside in the current directory tree and were last modified at least 1 day ago
Search directory trees / tmp and / var / tmp for " testfile.txt "
Search for files whose name is " filename " and whose permissions are 777
Take a file path from standard input and remove it .
Print the number of entries ( files , directories , symlinks , etc . ) in the subdirectories of the current directory , stopping search
search all the " .sh " files in the / usr folder
Find all files / directories with ' TAB ' extension under ' / usr / share ' directory tree
display all the files in the current folder which have the permissions 777 and which have been modified in the last 24 hours .
find all the regular / normal files in the current folder
display the number of lines in all the files in the current folder
Find all files in the current directory tree whose names are " .DS _ STORE "
Find files changed in the last 1 day
Find all the files which are modified in last 1 hour
Show the list of files larger than 100 MB
Find all filename.txt files / directories under / root / directory
Delete all files / directories under current directory
Find all * .jpg files under current directory and print only unique names
Find all * .code files under current directory
Print the current directory
Print the current directory tree with file permissions
Rename all files in current directory whose name starts with ' F0000 ' , trimming a zero from any sequence
Save all directories under the current directory as a comma separated list in variable " FOLDERS "
Find directory " your / dir " if it is empty
Find blabla * files under current directory
Find all the files which were modified 50 days ago
display all the symbolic links in the current folder
Search for files whose name is " filename " and whose permissions are 777
Find all * .tif files / directories under current directory
Find all filename.txt files / directories under / home
Search the system for the file " testfile.txt "
Save the current date to ' DATE ' variable
Save the canonical path of " $ dir / $ file " in variable " path "
Change owner of " folder " to " user _ name "
Find all files / directories under current directory matching the case insensitive pattern ' pattern '
Find all directories named ' vimrc ' in the entire filesystem
Search directory " / tmp / 1 " for files with text " documentclass "
Find all empty files in the current directory and delete them
Find all .rpm files / directories under current directory
list all files / directories under current directory
find all the regular / normal files in the current folder which belong to the group " flossblog "
Find all files / directories named ' photo ? .jpg ' under current directory tree
Delete all .svn files / directories under current directory
Delete all .svn files / directories under current directory
Find all files larger than 100M and delete them
Recursively change the owner and group of all files in the current directory to " andrewr "
Remount root filesystem " / "
Remount " yaffs2 " filesystem " / dev / block / mtdblk4 " to " / system
find all the files in the current folder which do not have the execute permission
Delete all files / directories named test under maximum 2 level down the current directory
Search the directories that match pattern ' / path / to / directory / folder { ? , [ 1-4 ] ? , 50 } ' for .txt files
split file t.txt into pieces per 30000000 lines named as " t.NN " with numeric suffix
find all the files in the current folder which are of size 0 bytes .
Search the current directory tree for * .conf and * .txt files
Find all the files in entire file system which are accessed 50 days back
Find all files / directories under current directory
Find all regular files in the current directory tree whose names end with " .DS _ Store " and delete them
Find all files / directories named ' foo ' in the entire filesystem
Gunzip all files matching " file * .gz " and answer " n " to any prompts
find all files in the home folder which end with " , txt "
Find all files / directories named ' photo ? .jpg ' under current directory tree
Search the current directory tree for files named " somename " , case insensitive
Find all regular files under current directory tree that are not newer than backup.tar.gz by modification time
Set permissions of all directories under " / opt / lampp / htdocs " to 755
Report file system containing the current directory disk usage
find all the files in the home folder which have been modified after a file
find all the files in the home folder that are modified day before yesterday
Print host name without a newline
Set shell option ' histverify ' .
Find files owned by nonexistent users
find all files that have the extension " bam " in current directory
Find files that are 0 bytes in size in the current directory and remove them
find files in home directory which have been modified in the last 40 hours
Find the passwd file under root and one level down .
Search the current directory recursively for regular files with the extension given as variable $ extension
display all the html files in the folder / var / www
Compress all files with ' .txt ' extension under current directory
Remove all regular files that were modified more than 60 days ago under ' / path-to-directory ' directory tree
Delete all files / directories with ' .old ' extension under current directory tree
find all the php files in current folder using regular expressions
Find all * .old files and move them to directory oldfiles
Find all files / directories named ' document ' in maximum 4 levels down the ' / usr ' directory
Compress every file in the current directory tree with gzip and keep file extensions the same
count lines of C or C + + or Obj-C code under the current directory
Save absolute path of " $ path " that may not exist to variable " abspath "
Create an empty file " foo " in each directory under the current directory containing a file named " bar " .
Delete all files / directories named ' test ' under current directory tree
Replace all spaces with underscores in directory paths under current directory .
Set variable value to current kernel release name .
Search the current directory for all .jpg files under current directory and print their count
Find all directories in the current one recursively which have the write bit set for " other "
Find files modified within the past 24 hours
Find all files in the current directory tree ignoring the " .git " directory
Find and uncompress all files in the current directory tree ending in " .csv.gz "
Delete file with inode number 314167125
Shows MAC address of network interface eth0 .
Read a line from standard input into variable " arrow "
Delete all files / directories with ' .old ' extension under current directory tree
Find all * .old files and move them to directory oldfiles
Find files in the current directory tree whose size is greater than 24000 bytes
display all the php files in current folder
Search $ SYURCER in all files under $ DIR directory tree for * .txt ( case insensitive )
Find regular files modified within the last 7 days
Find every file under the directory / usr ending in " .stat " .
Find all * .jpg files under current directory and print only unique names
find the file " dateiname " in the current folder ( case insensitive search )
Print common lines in " file1 " and " file2 "
Counts number of * .php files in a current folder and subfolders .
List level 2 subdirectories of the current directory
Print the date formatted with " % a % x % X " followed by the host name
print readline bindings that use key code ' \ \ e \ \ C-k '
List all files in the current directory tree invoking xargs only once
Print command history
Search / usr / local for subdirectories whose names end with a number 0-9
Find all files under media / directory and change their permission to 600
Search all files in the current directory tree whose path names match pattern " . / sr * sc "
Search all subdirectories of the current directory , except for " bar " , " foo " , " a " , and " b "
Find files whose content was modified at least 1 minute ago
find all the files in current directory of size greater than 2GB .
Find all files that are set group ID to staff
Find all files / directories in level 2 down the current directory
Print the last 10 lines of " great-big-file.log "
Find recursively all files changed within the last 5 minutes starting from directory b
Print the IP addresses for the current host name
Search the current directory tree for regular files omitting directory ' omit-directory '
Find find symlinks pointing to / mnt / oldname * in the entire file system
Find all files / directories named ' myletter.doc ' under current directory tree
Delete all files with indoe number $ inum under current directory tree
Search the / path / to / dir directory tree for .c files
Find all files / directories under current directory and set their permission to 775
Find files / directories under current directory and print them as null terminated strings .
Find all files under media / directory and change their permission to 600
Find all regular files under / var / www and below that have changed in the last 10 minutes
Find all files / directories named ' hosts ' under / home directory
Find all files in the ' work ' directory tree , pass them to grep and search for " profit "
Print whether the unique contents of " set1 " and " set2 " differ
Print the current directory tree with file sizes
Print the $ N ' th line from file by replacing commas ( ' , ' ) with newlines
Find all regular files that were modified more than 60 days ago under ' / path-to-directory ' directory tree , sort them according to timesta
Search directory tree $ DIR for * .txt files
search for the word " put " in all the files in the current folder which have the word " bills " in their name and display the matched line al
Adjust the timestamp of file $ filename by subtracting 2 hours from it
Remove all files / directories named ' test ' under current directory tree
Changes group ownership of ' myfile ' to ' fullylob ' .
find all files without 777 permision
Move all files / directories under current directory to ~ / play
Delete all files in the / TBD directory that were modified more than 1 day ago
Search the XML files from directories / res / values-en-rUS and / res / xml for string " hovering _ msg "
display list of all the hidden directories in the directory " / dir / to / search / "
Add execute permission to all files ending in " .sh "
Remove files that are less than 1MB in size under current directory
Search the system for files named " findcommandexamples.txt " , ignoring the case
Find all text files in the home directory
display a long listing of all the directories in the entire file system
count all the regular files that are present in a directory
display all the normal / regular files in the current folder and do not go beyond 3 levels
list all * .tmp files under the / home / older than 20 days
Find files and directories that are owned by user ' comp ' in their names under current directory tree
Find recursively all regular files changed within the last 5 minutes starting from directory b
Print the list of files and directories of the current directory including " " .
Remove all regular files in the ~ / directory tree that were last modified more than 5 days ago
Print the first 10 files or directories found in the current directory tree by ' find '
Print unique lines of sorted file " a " compared with sorted file " b "
Search all regular files in the current directory tree for " example "
Find all * .old files and move them to directory oldfiles
Save the -l of all directories under " / home / user / ' directory tree to variable ' LOGDIR '
Save the date 222 days before today to the variable ' date _ 222days _ before _ TodayDay '
display all the regular / normal files in the / tmp folder which are modified after a file
Find all * .cgi files / directories under current directory and change their permission to 755
find all files in the current directory that are modified in the last 1 day
Find files that are 100k
list all unique parent directories of .class files found under the current directory
Compress every file in the current directory tree with gzip and keep file extensions the same
Find all regular files under current directory tree without descending into ' . / dir1 ' ( except ' . / dir1 / subdir1 * ' pattern ) and ' . / dir2 ' directories
Find all files / directories starting with ' readme ' ( case insensitive ) under ' / usr / share / doc ' directory tree
Find all files / directories with ' .bar ' extension in maximum 2 levels down the current directory
Search recursively through / mydir , outputting only the base ( leaf ) name of each file , directory , symlink etc. without any containing directories ,
Mount " proc " file system on " / var / snmp3 / proc "
Find all * .mp3 ( case insensitive ) files / directories under / tmp and remove them
Find x * files / directories under / tmp directory whose status was changed less than 1 day ago and move them to ~ / play
Search the current directory recursively for .txt files with lines that have read and write the write permission for ' others '
Find all files / directories under / proc and run ls command on each .
Print out the contents of all * .txt files in the home directory
Find all regular files under current directory tree without descending into ' . / dir1 ' ( except ' . / dir1 / subdir1 * ' pattern ) and ' . / dir2 ' directories
Check if the file " somelink " links to exists
Report file systems inode usage .
display all the php files in the current folder
Reports count of processors in system .
change the permissions of all the regular / normal files in the current folder
display list of all the hidden files in the directory " / dir / to / search / "
Find all files larger than 100M and delete them
Search the / dir directory tree for files whose names match regular expression ' . * 2015 . * \ ( album . * \ | picture . * \ ) '
Find all files / directories with ' .old ' extension under current directory tree
Search the current directory tree for files whose names start with " f "
find StringBuffer in all * .java files , ignoring case
display all the files in the file system which do not belong to the user " wnj " and which are modified before the file " ttt "
Find all .sh files under and below the current directory and move them to folder ~ / back.scripts
Find files with name ' aaa.txt ' under the current directory
Compare " current.log " and " previous.log " line by line and print lines containing regex pattern " > \ | < "
Find files / directories under full / path / to / your / directory and rename them by replacing all spaces with _
Remove all vmware- * .log files under current directory
Archive " / path / to / files " to " user @ targethost : / path "
Check if the $ somedir directory is empty
Delete all _ _ temp _ _ * directories under maximum 1 level down the current directory tree
Copy all files in " / myfiles " to " / path / to / files " preserving directory hierarchy and modification time
Find all files in the current directory tree whose path names match pattern ' . / sr * sc '
display all the files in the file system excluding all the " .c " files
Find all * .txt ( case insensitive ) files of user root under / directory and show a few lines of output from the beginning
find all the file which have been modified in the last 15 minutes excluding hidden files .
Sort second from the end field from slash-separated string in file ' datafile '
Change permissions to 755 for all directories in the current directory tree
Filters only directories from long file listing of the current directory
Find files / directories that are newer than ' foo.txt ' under current directory tree
Find all regular files named postgis-2.0.0 under your home directory
Find all the SGID files in the current directory tree
Copy " / path / to / source " to ' / path / to / dest ' in remote " username @ computer "
Find all * .swp files / directories under current directory
Print groups of all users logged in
Find all 100MB + files and delete them
Find all * .txt files / directories under current directory discarding ' Permission denied ' errors
Find all files / directories with space in their names under $ 1 directory
display all the files in the current folder which end with " .bash "
Saves real path of the folder containing the current script
Remove all " core " files that were last changed more than 4 days ago from the current directory tree
Find all files / directories under current directory tree whose names start with ' test ' followed by two digits and end with ' .txt ' extension
Find all files / directories in level 2 down the current directory
display a long listing of all the java files in the current folder in sorted order
Archive the recursive path / to / path / to / files into it existing files that match in " / path / to / files / "
Find all files / directories under current directory and print their paths
Search the current directory tree for directories
find all the files in the / usr folder which have size greater than 1KB
Search the current directory recursively for MOV files , following symlinks
Find all * .old files and move them to directory oldfiles
Move all files from the ' sourceDir ' directory tree to the ' destDir ' directory
find directory which name is Cookbook under / users / al
Find all files in the current directory tree whose path names match pattern ' . / sr * sc '
Remove any file containing string " GUI "
Search the xargstest / directory recursively for files matching pattern ' file ? ? '
Reverse the order of lines in " myfile.txt " using BSD " tail " command
Read standard input until a null character is found and save the result in variable " line "
find files in / full / path / to / your / directory and do not search beyond 2 levels
Search the file ' whatever ' for all files with ' .git ' , ignoring the case
find all the directories in the current folder and do not search in sub directories and move them to the directory / directory1 / directory2 .
Search the current directory tree for * .c and * .asm files , ignoring the case
Find and copy all log files in the current directory tree to / tmp / log-files
find all the regular / normal files in the current folder which belong to the users with the user id ' s between 500 and 1000
Suffix all files and folders in the current directory with " _ SUF "
find all the files in the entire file system that have been accessed in the last 60 days ago
find StringBuffer in all * .java files , ignoring case
Find * .conf files / directories only upto 1 level down under / etc directory and show a few lines of output from the end
find all the " .c " files in the current folder which are present in the pattern list search .txt
Find all files / directories named ' file ' without descending into directories with the same name under current directory tree
search for all the files in current folder which start with " file2015-0 " and move them to another folder
List all files / directories under $ dir _ name with size $ sizeFile and print them according to the format string ' % M % n % u % g % s % Tb % Td % Tk : % TM %
find all the files in the current folder which have been modified in the last one minute
Find all regular files in the current directory tree ignoring GIT and SVN directories
Find all regular files under and below / var / www directory and change their permission to 700
Find all directories under / path / to / someDirectory tree and change their permission to 755
Find all regular files in the current director and set their permissions to ' 644 ' .
display all the files in the temp folder which have not been modified in the last 24 hours
Search the / tmp / directory recursively for files matching regular expression " . * file [ 0-9 ] + $ "
Find all files starting from / whose names end with " .rpm " and change their permissions to 755
Save the user name of the current user to variable " me "
Find the most recently changed files in a subtree
Search the / tmp / directory recursively for files matching regular expression " . * file [ 0-9 ] + $ "
Print the date formatted with " % a % x % X " followed by the host name
Find files / directories under current directory that are newer than $ date _ time in regards of modification time
Find all files / directories under / foo / bar and set read-write permission for owner and group and no permission for other for those directories
Measure the disk space taken up by all * .txt files in the current directory tree
Find files matching regular expression regexp
Find all hidden files
Search the / path / to / dir directory tree for .c files
Unsets ' history ' shell option .
Find files owned by no group
Find all files owned by user daniel in the current directory and its sub-directories .
Find all files larger than 100M and delete them
Search the home directory tree for files owned by sam
find all the files in the current directory and sub-directories whose status was changed after / etc / fstab was modified
Search the / Path directory tree for files matching pattern " file _ name * "
Changes group ownership of ' public ' to ' pub ' .
searches through the / usr directory for the regular file named ' Chapter1 * '
Make 3 directories named " $ HOME / Labs / lab4a / folder " followed by a 3 width zero padded number from 1 to 3
See what files are executable by the file ' s owner and group
Find all directories under $ FOLDER , take the first fields ( dot ( . ) as the delimiter ) from their timestamps and reverse sort them numerically
Print out the full path name of " mypathname " with dots resolved
Print all files and directories in the ' . ' directory tree skipping SCCS directories but printing out the SCCS directory name
Remove files under / mnt / zip matching " * prets copy " with confirmation
Search the current directory tree for regular files whose names end in " .shtml " or " .css "
Search the current directory tree for regular files that contain " string "
Search the regular files of the current directory tree for string " foo "
Search the / path / to / dir directory tree for .c files
Split " file.txt " into files of at most 20 lines each with a prefix " new "
Print the full path of command " gcc "
Compress all files under / source directory tree using gzip with best compression method
Find all files owned by user vivek
Find the oldest file in the current directory and its subdirectories
Find all files under current directory and append a null character at the end of each of their paths
Find all * .csv files under / foot / bar / and move them to some _ dir
Print the date formatted with " % a % x % X " followed by the host name
Find all files / directories under current directory with ' FooBar ' in their paths and copy them to ~ / foo / bar
display all the files in the folder / home which are bigger than 10MB and smaller than 50 MB
Print only common file names in sorted listings of directory ' dir1 ' and ' dir2 '
Print out the contents of all * .txt files in the home directory
Print out the contents of all * .txt files in the home directory
Find regular files matching pattern " * oraenv * " and excecute the " file " utility for each of them
search in the current folder for all the directories with the name " test "
Split " file.txt " into files of at most 20 lines each with a prefix " new "
Change permissions to 755 for all directories in the / path / to / someDirectory /
Find regular files in the current directory tree that have any executable bits set
Find all files under $ sourceDir that match the regex expanded by $ input _ file _ type in their paths
Reports count of processors in system .
Search the home directory tree for files owned by sam
Find files under / usr that are newer than / FirstFile File under ' / usr ' directory tree
display the count of total number of non empty files in the current folder
Display the entire file system in a tree-like format
Counts all * .flac files in a current folder and subfolders and prints total count as well .
Search the current directory tree for files whose names match regular expression ' . * packet . * ' , ignoring the case
search in the current folder for all the directories with the name " test "
Find all regular files with ' .txt ' extension excluding ' README.txt ' files under current directory tree
Find all files / directories under $ source _ dir / * paths and null character as the delimiter
Search the current directory tree for files without " test " in their path names
Find files / directories under ' / tmp ' directory tree that contain a white space safety
find files in the current directory and sub-directories , whose content was updated within the last hour
Find files / directories named ' document ' in ' ext2 ' partitions in entire filesystem
Search directories called ' backup ' from / usr directory downwards and print them .
Find all files under current directory whose file type description contains " image " , display only path to each file .
Count the number of .java files in all folders rooted in the current folder
Archive " / my / dir " on host " server " as user " user " to the current local directory excluding files ending in " .svn "
Find files under current directory that contains the string ' / bin / ksh '
Print the list of files changed within the last minute
Find all * .csv files under / foo / bar and move them to some _ dir
Search the / path directory tree for files missing g + w and o + w bits
List all files in the current directory tree except for those in the . / src / emacs directory
Archive the entire file system into tarfile.tar.bz2
Find all files / directories under $ 1 which have at least write permission for their owner and set write permission for group for these files / directories
Find all files / directories under $ 1 which have at least write permission for their owner and set write permission for group for these files / directories
Removes resursively all files and folders named " Thumbs.db " , ignoring case distincts .
Search the / path directory tree for files missing g + w or o + w bits
Search the / path directory tree for files missing g + w and o + w bits
Print a listing of the ' other ' directory
Save the user name of the current user to variable " whoami "
Change permissions to 644 for all files showing the respective chmod command
Compress all files in the " $ LOGDIR " directory tree that have been modified within the last 90 days and decompress them
Search the .pdf files residing in the current directory tree for string " blash "
Print info about all mounted file systems , and grand total statistic about available and used space
display all the files in the folder / tmp / 1 excluding those which do not have spaces in their names
Print the first line of each file under the home directory
Create symbolic links in the current directory for all files excluding " CONFIGFILE " located under " / your / project " directory tree
Prints all Saturday days of a current month .
Save the system host name in variable " HOSTNAME "
display a long listing of all fles in current folder which have been modified in the last 60 minutes
Find all files / directories named ' .todo ' under $ STORAGEFOLDER directory tree and print their parent paths
Delete files in / var / tmp / stuff and below that have not been modified in over 90 days
Find all files / directories under $ 1 which have at least write permission for their owner and set write permission for group for these files / directories
Find all files / directories under $ 1 which have at least write permission for their owner and set write permission for group for these files / directories
Print info about all mounted file systems , and grand total statistic about available and used space
List all files / directories under $ dir _ name with size $ sizeFile and print them according to the format string ' % M % n % u % g % s % Tb % Td % Tk : % TM %
Create an empty file ' last.check ' in directory pointed by variable " log _ dir " , with specified timestamp .
Find all files / directories under current directory that were modified later than / reference / file
Find all files / directories under current directory tree whose paths start with ' . / sr ' and end with ' sc '
Find a directory named ' project.images ' in the entire filesystem and show it in long listing format
Change permissions to 644 for all subdirectories
Search for " vid = 123 " in all compressed files found under " / my _ home " matching " * log.20140226 * "
download content from " http : / / 127.0.0.1 : 8000 " and output to " index.html "
Find all * .tex regular files in maximum 2 levels down the current directory
create a symbolic link with absolute path " / cygdrive / c / Users / Mic / mypics " to file " / cygdrive / c / Users / Mic /
display all the files in the folder / root / which are bigger than 50MB
Find all * .ini files
Move all files and directories not starting with " l " in " / mnt / usbdisk " to " / home / user / stuff / " .
Delete the files under the current working directory with inode numbers specified on standard input
delete all the normal files in the current folder which have been modified in the last 60 minutes
Save the directory name of the canonical path to the current script in variable " MY _ DIR "
display all the normal / regular files in the current folder which have been modified in the last 24 hours and display a long listing of them
display all the files in current folder which have been modified in the last 24 hours whose name has only 1 letter
Show file type information for all regular files under ' / home ' directory tree
Archive " _ vim / " to " ~ / .vim " suppressing non-error messages and compressing data during transmission
Search the current directory tree for files whose names end in " rb " or " js "
Search the current directory tree for all .java files that were last modified at least 7 days ago
Add a line number to every line in " infile "
display all the normal / regular files in the current folder and do not go beyond 3 levels
Correct permissions for files in the web directory
Archive " / path / to / application.ini " on host " source _ host " to current directory .
find all the files in the current folder which start with t and have been modified between one hour ( 60 minutes ) and 12 hours ( 720 minutes ) ago .
find all the files ending with " .foo " in the folder mail ( case insensitive )
Find all directories under $ x directory and set read-write-execute permission for owner and group and no permission for other for those directories
Find all * .java files under current directory and archive them to myfile.tar
display all files ending with " ini " in current folder
Find regular files named " expression -and expression " under and below / dir / to / search /
Sort " file " using a buffer with a size 50 % of main memory
Remove everything in a current folder prompting user on each action .
Check if $ path _ in _ question is mount point of filesystem
Set variable " finalName " to the second-to-last slash-separated path component of variable " path "
Print the path names of all files in the directory tree skipping SVN files
Find all files / directories in entire file system that are owned by " shadow " group
Shows state of shell option ' extglob ' .
Numerically sort standard input by the second word of each line
Counts all files in a current folder and subfolders .
Copy all files under director ' foo ' whose name doesn ' t contain ' Music ' to directory ' bar ' .
Search the current directory tree for files matching sed regular expression ' . * myfile [ 0-9 ] \ { 1,2 \ } '
Move all files / directories under current directory to ~ / play
Search the regular files from directory tree ' directory _ name ' for " word " and print the names of the matched files
Display the 5 smallest files in the current directory and its sub-directories ignoring any empty files .
Removes all top-level empty folders within the current folder .
Find all files under $ sourcePath directory that were modified more than 7 days ago and delete them
Sort " file " using a buffer with a size 50 % of main memory
Change permissions of all directories residing under and below . / debian to 755
Search the regular files from directory tree ' directory _ name ' for " word " and print the names of the matched files
Prints calendar of February , 1900 .
Find all files under ~ / documents that belong to the group ' Files '
find all the files in the current folder which have execute permission to all the users
Find files in the current directory excluding CVS , SVN , GIT repository files and all binary files .
Make directory " foo " and do not cause an error if it exists
See what files are executable by the file ' s owner and group
Save the UTC date represented by time string $ sting2 as the seconds since epoch to variable ' FinalDate '
find all the regular files in the current directory which have been modified in the last 24 hours .
Enables shell option ' cdable _ vars ' .
Read a line from standard input into a timeout of 10 seconds
Find files in entire file system that are writable by group or other
Archive " foo / bar / baz.c " to " / some / path " on host " server " as a remote host
Move all files and directories in the current directory to " somewhere / "
Search the regular files from directory tree ' directory _ name ' for " word " and print the names of the matched files
Search the current directory recursively for files last modified within the past 24 hours ignoring .swp files and paths . / es * and . / en *
Find all files in / dir1 and print only the filenames ( not paths )
display all the regular / normal files in the entire file system
Views text content of compressed FileB file in TarFile archive .
display all the files ending with " .user " in / var / adm / logs / morelogs / and excluding all regular files
search for a word in all the files in the current directory
Search the entire system for SUID or SGID files
List all files with their paths that have identical content .
Change the owner of " $ JBOSS _ CONSOLE _ LOG " to " $ JBOSS _ USER "
Recursively change the owner to " $ USER " and group to " $ GROUP " of " / var / log / cassandra "
find all the files in the current folder which have the permission 777 and with the name " dateiname "
Search the entire system for SUID or SGID files
Print the path names of all files and directories in the current directory tree
Change the owner of " / etc / rtfgener.sock / root / " to " root "
find all the files in the folder " / mp3-collection " which are bigger than 10MB excluding those that start with the word Metallica
The file " files _ to _ find.txt " contains a list of filenames , create each file or update its timestamp if it exists .
Remove all files in ~ / clang + llvm-3.3 / bin / and print ' basename / file / path ' for each file
Find files matching regular expression regexp
Print the first 10 files or directories found in the / tmp directory tree by ' find '
Decompress " path / to / test / file.gz " to standard output and save all lines matching " my regex " to files with a 1000000 line limit
Remove adjascent duplicate lines from file ' input ' comparing all but last space-separated fields
create a symbolic link named " / usr / bin / my-editor " to file " / usr / share / my-ditor / my-editor-executable "
Find the directories whose pathnames contain " New Parts " at level 3 of the current directory tree and create symlinks to them in / cygdrive / c / Views
delete all the files in the current folder which do not belong to any user
Remove each unique item listed on standard input and do nothing if empty
Find all files / directories named ' query ' under current directory tree
Find all files / directories under current directory in maximum 3 levels deep
Decompress ' file.gz '
Delete files under $ LOCATION that match $ REQUIRED _ FILES in their names and were modified more than 360 minutes ago
Remove each unique item listed on standard input and do nothing if empty
Find all files under / path / to / dir that were modified less than 7 days ago and show only first several lines of output
Compare " file1 " and " file2 " line by line with 3 lines of unified context
Recursively copy " $ NAME / LaunchAgener.app " to " $ { USER } " and removes them to folder " $ { FOLDER } "
Print the CDS directories residing in the current directory tree
Removes all files like ' A * .pdf ' from current folder without prompting .
Search the current directory tree for regular files whose names end in " .shtml " or " .css "
Print the MD5 message digest of " / path / to / destination / file "
Print the list of directories residing in the current directory tree
Find all $ 1 files / directories under current directory and enter into the parent directory of the first one found
Find all broken symlinks under / path / to / search directory
Create a symbolic link named " wh " to " $ wh "
Change permissions of " / var / www / html / mysite / tmp _ file " to 777
Find all files / directories under / the / path directory and below them that have been modified today ( from day start ie , 00 : 00 )
Find the directories whose pathnames contain " New Parts " at level 3 of the current directory tree and create symlinks to them in / cygdrive / c / Views
Move all files and directories in the current directory to " somewhere / "
Read a line from standard input into variable " message " with prompt " Please Enter a Message : " followed by a newline
Split " complete.out " into files with at most " $ lines _ per _ file " lines each
Print file size and user name with color support for each file in the current directory tree
File ' save _ pid.txt ' contains a process ID , instantly kill this process with SIGKILL signal .
Archive the list of 1st level subdirectories in / fss / fin to / fss / fi / outfile.tar.gz
Archive " / path / to / local / storage " to " user @ remote.example.com " authenticating as user " usr " , compress data during transmission , show progress details .
Print the list of regular files in the current directory and all subdirectories
Create a symolic link in " / usr / local / " to " / Applications / Sublime \ Text.app / Contents / SharedSupport / bin / subl "
Search for files / directories with the case insensitive pattern anaconda . * in var / log directory and create an archive ( file.tar ) of all the files found
Search PATH for utilities called " rename " , display the type of file ( script , executable , ... ) for each match found .
display a long listing of all the java files in the current folder in sorted order
display a long listing of all the files in the current folder in sorted order , which are bigger than 10KB
display all the files ending with " .user " in / var / adm / logs / morelogs / and excluding all regular files
Print all unique strings in $ 1.tmp file .
Find all files / directories under current directory with ' FooBar ' in their paths and copy them to ~ / foo / bar
Find files / directories owned by user ' com.xxx ' and change their user to ' temp '
Print the list of regular files in the current directory ignoring .svn , .git , and other hidden directories
search for all the files in the current folder which have spaces and force delete them
Archive " / path / to / files " to " / path " on host " user @ targethost " with elevated permission on the remote host
list all javascipts file which whole name does not contain excludeddir or excludedir2 or excludedir3
Removes all files and folders that match pattern ' / usr / local / { lib / node { , / .npm , _ modules } , bin , share / man } / npm * '
Archive " path / subfolder " to " path " , skipping files that are newer at the destination .
Print the list of regular files in the current directory and all subdirectories
Save the number of matching executables for " $ cmd " in $ PATH to variable " candidates "
Recursively search for all files with names ending with " _ test.rb " , renaming them to end with " _ spec.rb " , using at most 4 concurrent processes .
Compress all files in the " $ LOGDIR " directory tree that have been modified within the last 90 days and compress them to a file
Find all * .pdf files under $ { IPUT _ LOCATION } and move them to $ { OUTPUT _ LOCATION } also move them to $ { OUTPUT _ FILE _ LIST
Find all files under $ { searchpath } that match the regex $ { string1 } . * $ { string2 } . * $ { string3 } in their contents where $ { string1 } etc .. will be expanded
Saves list of logged in users in system together with ' USER ' header in the ' a ' variable .
Move " / usr / bin / openssl " to directory " / root / "
searches through the root filesystem ( " / " ) for the file named Chapter1 , and prints the location
Archive " / path / to / files " to " / path " on host " user @ targethost " with elevated permission on the remote host
Print content of ' a ' file , showing all non-printing characters including TAB characters , and displaying $ at the end of each line .
Find all files under $ source _ dir that match the regex expanded by $ input _ file _ type in their paths
Locate all files in the current directory and below that have " testfile " in their names regardless of the case
Archive " / path / to / files " to " / path " on host " user @ targethost " with elevated permission on the remote host
Search the current directory tree for all files matching either pattern " * .rb " or pattern " * .py "
Search PATH for utilities called " rename " , display the type of file ( script , executable , ... ) for each match found .
Move all files not matching " Tux.png " in " ~ / Linux / Old " to " ~ / Linux / New / " using zsh with " EXTENDED _ GLOB "
display all the files in the folder / etc / srv excluding those that are present in the path of . / srv / tftp / pxelinux.cfg * and / etc / mtab
Find all data files under ' / data / SpoolIn ' directory tree that contain the string ' xpilot ' in their names
Print a sorted list of unique directory paths in entire file system that match the pattern ' < name _ pattern > ' in their names
Print the current date in ' % H : % M : % S ' format followed by the string ' : done waiting. both jobs terminated on their own or via timeout ; resuming script '
Archive " blanktest / " to " test / " deleting any files in the destination not found in the source
Move all * .emlx files / directories under / path / to / folders / to . / Messages / directory
Print a list of all the files in entire file system whose inode has been modified no later than one minute ago
Perform a dry run to recursively copy " test / a " to " test / dest " excluding " test / a / b / c / d "
Move all * .emlx files / directories under / path / to / folders / to . / Messages / directory
Searches the manual page names and descriptions by ' disk ' keyword .
find all the files in the entire file system that have been changed exactly 60 days and display ten files
Change directory to the download directory specified in the current user ' s user-dirs.dirs file
Find files / directories that does not have write permssion for group or others
Decompress " path / to / test / file.gz " to standard output and save all lines matching " my regex " to files with a 1000000 line limit
Find all files under $ { searchpath } that match the regex $ { string1 } . * $ { string2 } . * $ { string3 } in their contents where $ { string1 } etc .. will be expanded
Archive " / path / to / files / source " to " user @ remoteip : / path / to / files / destination " via ssh on port 2121
Decompress " $ { set1 [ @ ] } " to standard output and save all lines matching " my _ specified string " : "
Print the compressed size , uncompressed size , compression ratio , and uncompressed filename of " file.zip "
ssh into default vagrant host without running " vagrant ssh " by passing the configuration parameters vagrant uses for ssh
Find all directories under / path / to / folders / without descending into directories named ' .snapshot ' directory tree
Archive " / media / 10001 / music / " on host " server " to local directory " / media / incoming / music / " and skip files that are newer in the destination , delete any files in the destination not in the source , and compress data during transmission
Print a colon-separated list of all directories from the ~ / code directory tree , except hidden ones and those below them
