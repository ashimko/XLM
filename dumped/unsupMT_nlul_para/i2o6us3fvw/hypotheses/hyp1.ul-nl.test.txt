Make directory " dir1 "
Make directory " / tmp / foo "
Recursively remove all " * .txt " files and answer " n " to any prompt
Find smallest file in the current directory and below
Find files that are empty
remove all the core files in the home folder
Find all pdf files in the file system
find all text files in the current directory
Make directory " / tmp / foo "
Print the date followed by the host name
display all the directories in the current folder
find all the files that have been modified today
display all the files in the file system which have the permissions 777
Counts lines of all * .php files in a current folder and subfolders and prints total count as well
Find all the files without permission 777
Find all directories with the name ' query ' under current directory
Find all files / directories under ' / usr ' directory tree that have not been modified in the last 356 days counting
Find files on the system accessed during the last 24 hours but not within the last hour
This command find displays the files which are modified in the last 15 minutes . And it lists
Find all the files whose permissions are 777
Composes full process tree with process id numbers , and prints only those strin
Find directory " your / dir " if it is empty
Remove all symlinks from the current directory tree
Gunzip all files matching " file * .gz " and answer " n " to any prompts
Delete all regular files whose names contain " @ " in directory tree ~ / $ folder
Find all files / directories with ' .jar ' extension under current directory tree
Find all the files in the current directory
Find all the files in the current directory
Find all the SGID bit files whose permissions set to 644
find all the files that have been modified today
Find files readable only by the group
Find all files / directories named ' filename '
Find file ' myfile '
Search the current directory tree for symbolic links
Print which files differ in " dir1 " and " dir2 " recursively
This command find displays the files which are modified in the last 15 minutes . And it lists only the un
show all the files in current directory
Set 644 permission to all regular files under current directory
Print the file content of command " f "
Find all regular files in the current directory tree last modified between 1 and 3 days ago and list them using format ' %
display all the files in the current folder which do not belong to any user
Find all files / directories which have execute permission under current directory tree
Find " / proc / $ pid / fd " and rename them by replacing all spaces with _
Find all .sh files in the current directory tree
Find all .java files under current directory
Delete empty directories
Find the largest files in a particular location
Find files in the current directory tree whose size is less than 24000 bytes
find all the regular / normal files in the current folder which have been modified in the last 24 hours
Find all regular files under $ { S _ DIR } directory
display all the files in the current folder excluding those that are present in the folder " . / etc "
Find all the files whose name is tecmint.txt and contains both capital and small letters in /
Find all regular files under and below / dir / to / search /
searches through the root filesystem ( " / " ) for the file named Chapter1 .
Find all files / directories under images directory
Set 644 permission to all regular files under current directory
Save the date 222 days before today to the variable ' date _ 222days _ before _ To
Print file information of command " studio "
Find all directories with permissions 777
Delete all directories in the current one recursively
find all files in current folder which are bigger than 300MB
Find all files that were modified less than a day ago
Find all files / directories under ... directory and print them with the first argument
Write " Australia / Adelaide " to standard output and to " / etc / timez
This command find displays the files which are modified in the last 15 minutes . And it lists only the unhidde
This command find displays the files which are modified in the last 15 minutes . And it lists only the unhidde
Search the current directory tree for files whose names end in " rb " or " js " and which contain string " matchNameHere "
Print the file content of command " f "
Show the list of files modified less than a minute ago
Copies all files under the current directory but ones with ' * / not-from-here / * ' in path to the '
Print the number of lines in file ' file _ name ' variable
Move all files matching case insensitive " .cpp " in the current directory tree to " . / test / "
Find all * .sh files under / usr
Find all files / directories under image-directory
Find files readable only by the group
Find all * .php files under / home / www
Find all files owned by user ' job.root '
Find all * .log files under current directory and print their contents
Find all * .jpg files / directories under current directory
Find all regular files whose names contain " @ " in directory tree ~ / $ folder
Find all * .java files under foo directory
Search the current directory tree for files whose names end in " rb " or " js " and which contain string " matchNameHere "
Take the section of variable " FILE " between the last slash and the following dot , if any
Print the number of lines in all files matching " * .php "
Find all * .sh files / directories under / usr
Find all files / directories named ' X11 ' under ' / usr ' directory tree
Find all regular files with permissions 777
find all regular / normal files in the current folder
display the number of lines in all the files in the current folder
Find all files in the current directory tree whose names are " .DS _ STORE "
Find files modified at least 5 days in the future
Find files larger than 1MB in the current directory tree
Show the list of files modified less than a minute ago
Find all filenames ending with .c in the / usr directory tree
Delete all files / directories named ' file ' under current directory tree
Find all * .jpg files under current directory and print only unique names
Find all * .code files under current directory
Print the current directory tree with file permissions
Print the current directory tree with file permissions
Rename " original.filename " to " new.original.filename "
Save all directories under the current directory as a comma separated list in variable ' FOLDERS '
Find directory " your / dir " if it is empty
Find broken symlinks in current directory
Find all the files which were accessed 50 days ago
Find all symbolic links containing ' vim ' in their names under current directory tree
Search the current directory tree for files whose names match regular expression ' . * packet . * ' , ignoring the case
Find all * .tif files / directories under current directory
Find all filename.txt files / directories under / home directory
Find all files / directories with the name " testfile.txt " in the entire filesystem
Save the canonical filename of " $ BASH _ SOURCE " in variable " me "
Save the canonical filename of " $ BASH _ SOURCE " in variable " me "
Change the owner of all " .txt " files in directory tree " / mydir " to " root "
Find all files / directories under current directory tree that match the case insensitive regex ' pattern '
Find all the files / directories in the current directory tree
Search " / tmp / 1 " for files with text " 12007 characters
Find all empty files in the current directory and delete them
Find all files / directories under current directory tree that have modified in the last 2 days and contain ' blah ' ( case insensitive ) in their names
Find all files in the current directory tree whose names end with the suffix " .keep. $ 1 " , where $ 1 is the
find all the regular / normal files in the current folder which are not accessed in the last 10 minutes
Find all files / directories named ' photo ? .jpg ' under / tmp directory tree
Find all .svn files / directories under current directory and print their path names
Find all .svn files / directories under current directory
Find all files larger than 10000k
recursively change owner of the directory / tmp to the current user
Removes all empty folders under current path , aged between ' first ' and ' last ' timestamps .
Removes all empty folders under current path , aged between ' first ' and ' last ' timestamps .
find all the files in the current folder which do not have the execute permission
Delete all files / directories named test under current directory
Search the entire file system for the file " needle "
Split " $ file " into files with at most 200000 lines each and use a prefix " $ { tdir } / x "
find all the files owned by user vim
Search the current directory tree for files modified less than 5 days ago
Find all the files in file system which are accessed in last 1 hour
Find all files / directories under current directory
Find all regular files in the current directory tree whose names do not end with " ignore1 " or " ignore2 "
Find all * .foo files under / path directory
Gunzip all files matching " file * .gz " and answer " n " to any prompts
find all files in the HOME folder ending with " .c "
Find all files / directories named ' photo ? .jpg ' under current directory tree
Search the current directory tree for files named " somename " , case insensitive
Find all regular files under current directory tree that are newer than some _ file
Set permissions to 777 for directories under var /
Report file system containing the current directory disk usage
Find all files / directories named ' file _ name ' under your home directory
find all the files in the home folder which end with " .asm "
Rename " original.filename " to " new.original.filename "
Set variable " path " to name of current directory ( without the containing directories ) converted to lowercase .
Find files owned by no group
find all files that have been modified in the last seven days .
Find files that are 20 bytes in size
Find files in the home directory tree that were accessed within the last 90 minutes
Find the passwd file under root and two levels down
Search the current directory tree for regular files whose names end in " .shtml " or " .css "
Find all regular files in the / var / www / html / directory tree
Compress all files with ' .tar ' extension under current directory
Remove all regular files that were modified more than 1 day ago
Find all files / directories with ' .note ' extension under current directory tree
find all the php files in current folder and search for multiple patterns in these files
Find all * .old files and move them to directory oldfiles
Find all files / directories named ' document ' in the entire filesystem
Compress the file ' file ' with ' bzip2 ' and append all output to the file ' logfile ' and stdout
count all the files that are present in a directory
Save absolute path of " $ path " that may not exist to variable " abspath "
Create an empty file with a carriage return character in its name .
Remove all files named " test " from the current directory tree , ignoring directory " test "
Replace all colons ( ' : ' ) with newlines in $ list and search for the first match to the regex " ^ $ removepat \
Set variable BZIP2 _ CMD to the full path of command " bzip2 "
Search the current directory tree for all files matching pattern " * .jpg "
Find all directories in the current one recursively that are not " apache "
Find files / directories modified within the last day under / usr directory downwards and run the parent directory of them
Find all files in the current directory tree whose names end with the suffix " .keep. $ 1 " , where $ 1 is the first command line
Find and remove all .mp3 files
Delete all files with inode number 13167125
Shows state of shell option ' extglob ' .
Read a line from standard input into variable " arrow "
Find all files / directories with ' .note ' extension under current directory tree
Remove all * .old files from the current directory tree
Find files in the current directory tree whose size is less than 24000 bytes
display all the php files in the current folder
Find all files / directories under $ STATING _ DIR directory tree
Find regular files that were modified more than 5 days ago
Search the / usr / spool directory tree for regular files whose names begin with " arrow "
Find all * .jpg files under current directory and print only unique names
find all the " testfile " files in the current folder
Print out the contents of all * .txt files in the home directory
Counts lines of / etc / fstab file .
List all files / directories under current directory matching the posix-egrep type regex " . + \ . ( c | cpp | h ) $ " in their
Print the date followed by " : $ line "
print bindings for " p " and " e " with no case sensitivity
List all files in the current directory tree invoking xargs only once
This command find displays the files which are modified in the last 15 minutes . And it lists only the unhidden files
Find all files / directories under ' / usr / local ' directory tree that match the case insensitive pattern ' * / tmp / * ' in their names
Find all files under media / directory and change their permission to 600
Find all files in the current directory tree whose names are " .DS _ STORE "
Search the / directory tree for files whose names match regular expression ' . * packet . * ' , ignoring the case
Find files whose pathnames end in " config "
Find all 12345 files under current directory
Find all files that have either a .php or a .js extension
Find all regular files 1 level down the $ dir directory
Print the contents of " $ 1 "
Find recursively all files changed within the last 5 minutes starting from directory b
Print IP addresses of the host name
Search the current directory recursively for regular files last accessed less than 2 days ago
Find all files in maximum 1 level down the current directory that were modified less than 1 day ago
Find all files / directories named ' myletter ' under current directory tree
Delete all files with inode number 804180
Find all files / directories under / path / to / dir directory tree that match the case insensitive pattern ' / path / to / dir '
Search everywhere for directories named ' root '
Search the current directory tree for files and directories whose names do not end in " .exe " and " .dll "
Find all files under media / directory and change their permission to 600
Find all regular files with ' .db ' extension under ' / var / www ' directory tree
Find all .hosts files starting from the current directory and below
Find all * .css files under / workspace
Print whether " $ file " and " $ { file / $ { dir1 } / $ { dir2 } } " differ
Print the current directory tree with file permissions
Print the string ' google.com '
Find all regular files that were modified more than 2 days ago under ' / path-to-directory ' directory tree , sort them according to timesta
Search directory tree $ DIR for * .txt files
search for the regular / normal file ' myfile ' in the folder / root excluding those that are present in the " work " directory
download contents from " https : / / raw.github.com / creationix / n
Remove all files named " test " from the current directory tree , ignoring directory " test "
Changes group ownership of ' target _ directory ' to ' target _ group ' .
Find all 777 permission directories under current directory and set permissions to 755
Move all files from the ' sourceDir ' directory tree to the ' destDir ' directory
Search the / TBD directory tree for files whose names begin with " Wallica "
Search the XML files from directories / res / values-en-rUS and / res / xml for string " hovering _ msg "
display list of all the hidden files in the directory " / dir / to / search / "
Add execute permission to " ComputeDate " , " col " , and " printdirections " for all users
Find all files that are exactly 50 bytes
Find all files / directories named ' transfer ' in their names under ' / path / to / files ' directory tree
Find all * .txt files / directories under your home directory
display a long listing of all the files in the current folder which have been modified in the last 60 minutes
count all the html files having a specifc word in a folder .
display all normal / regular files in current folder in sorted order
Find all * .tmp files / directories in maximum 2 levels down the directory $ DIR
Find files and directories newer than ' ttt ' that are newer than ' ttt '
Find recursively all files changed within the last 5 minutes starting from directory b
Print the current directory tree with file permissions
Remove all regular files in the " ~ / junk / " directory tree that were last modified more than 5 days ago
Print the current default full path of the " java " executable
Run commands " df -k ; uname -a " on server " 192.168.79.134 "
Search all regular files in the current directory tree for " string "
Find all * .old files and move them to directory oldfiles
Save the first " " . separated field of the system host name to variable " HOSTZ "
Save the system host name to variable " HOST "
Find all regular files under the ' / tmp ' directory tree that are not newer than file $ newerthan
Find all * .cgi files / directories under current directory and change their permission to 755
find all files that names are game
Find files used by the group group2
Find all image * .png files under current directory
Compress every file in the current directory tree with gzip and keep file extensions the same
Find all regular files under current directory tree that contain ' some text ' in their names without descending into directories that contain the string ' txt '
Find all files starting from / whose names end with " .rpm " and change their permissions to 755
Find all files / directories with ' .mp3 ' extension under current directory tree
Search the current directory recursively for files with the exact permissions u = rwx , g = rx , o = rx
Mount " ext4 " filesystem " / dev / xvdf " on " / vol "
find all the mp3 files in the file system
Find x * files / directories under / tmp directory whose status was changed less than 1 day ago
Search the current directory tree for all files except SVN ones
Find all files / directories under / proc and run ls command on each .
Print out the contents of all * .txt files in the home directory
Find all regular files under current directory tree that contain ' some text ' in their names without descending into directories that contain ' some text '
Check if the $ somedir directory is empty
Report file systems disk usage in 1GB blocks .
display all the php files in the current folder
Reports count of processors in system .
Recursively change the permissions of all files in " / path / to / dir " to 644
Search the / etc directory tree for regular files modified less than 2 days ago
Find all files in the current directory tree which are larger than 100MB
Search the / dir directory tree for files whose names match regular expression ' . * 2015 . * \ ( album . * \ | picture . * \ ) '
Find all files / directories with ' .ogg ' extension under current directory
Search the current directory tree for files whose names end in " rb " or " js " and which contain string " matchNameHere "
Find Symfony files under current directory
display all the files in the file system which have the permission 777 and with the name " dateiname "
Find all .sh files under the current directory and below
Find all files with the name ' TestProgram.c ' in the entire filesystem
Compare " Austruct.194.34 " line by line
find files in the / full / path directory which have been modified after a modification time
Remove all vmware- * .log files under current directory
Archive " / path / to / files " to " user @ targethost : / path "
Check if $ WINCH _ PATH is the current user
Remove all _ temp _ _ * directories under current directory
Copy all files matching " * txt " in directory tree ~ / foo / bar " to " ~ / foo / bar " preserving the directory hierarchy and modification time
Find all files in the current directory tree whose names end with the suffix " .keep. $ 1 " , where $ 1 is the first command line argument , and remove
display all the files in the entire file system
Find all * .txt ( case insensitive ) files of user root under / directory and show a few lines of output from the beginning
find all the file which name end with " .mp3 " and move them to another folder
Sort " set1 " and output the result to " set2 "
Change permissions to 755 for all directories in the / path directory tree
Fix files to default permissions 755
Find files / directories that are newer than / tmp / apache-perl
Find all regular files named postgis-2.0.0 under the current directory tree
Find all the SGID bit files whose permissions set to 644
Copy the entire contents of the current directory preserving ownership , permissions , and times
Find all * .swp files / directories under current directory
Print groups of all users logged in
Find all files in the file system with the SUID bit
Find all * .txt files / directories under current directory
Find files containing string " # ! / bin / ksh " and append their names and matching strings to / tmp / allfiles
display all the files in the current folder which end with " .ksh "
Saves invoked command ' check _ script _ call = $ ( history | tail -1 | grep myscript.sh ) ' in variable ' check _ scri
Remove all " core " files that were last changed more than 4 days ago from the current directory tree
Find all files / directories under current directory tree that match the case insensitive regex ' \ . / ( . * \ .error. * | second . * log | . * FFPC \ .log ) $
Find all files / directories in level 2 down the current directory
display a long listing of all the files in the current folder which have been modified in the last 60 minutes
Archive " / path / to / files " to " user @ targethost : / path "
Find all files / directories under current directory and run ls command for each of them
Search the current directory tree for directories
Find all files / directories with inode number 16187430 and move them to ' new-test-file-name '
Search the current directory tree for files matching regular expression ' . * myfile [ 0-9 ] [ 0-9 ] ? '
Find all * .old files and move them to directory oldfiles
Move all files from the ' sourceDir ' directory tree to the ' destDir ' directory
find foo , Foo , FOo , FOO , etc . , but only files
Find all files in the current directory tree whose names match regular expression ' . * Message . * \ .java '
Search the file system for the regular file " myfile "
Search the xargstest / directory recursively for files matching pattern ' file ? ? '
Print reverse lookup for adress 127.0.0.1
Read standard input until a null character is found and save the result in variable " line "
find files in the / full / path directory which have been modified between two dates
Find all files / directories named ' whatever ' under current directory tree
find all the directories in the current folder and create the same directory structure in a remote machine using ssh
Search the current directory tree for * .c and * .asm files , ignoring the case
Find and remove multiple * .mp3 files
find all regular / normal files in the current folder which have been modified in the last 120 hours
Print full path of command " c + + "
find all the files in the file system which have been modified in the last 10 minutes
Find Symfony files under current directory
Find all * .conf files / directories only upto 2 levels down under / etc directory
find all the " monfichier " files in the current directory
Find all files named ' file ' in 1 level down the current directory whose status were changed more than 1 hour ago
Search for files / directories which have read and write permission for their owner , and group and only read permission for others
List all files / directories under current directory
find all the files in the current folder which have the word cache in them and do not search in the sub directories of the folder .
Search all the regular files in the current directory for " example "
Find all regular files with ' .php ' ( case insensitive ) in their names under ' / var / www ' directory tree
Find all directories under / path / to / someDirectory tree and change their permission to 755
Find all regular files that were modified more than 7 days ago under ' / path-to-directory ' directory tree , sort them according to timestamp and print the filenames preceded with the timestamps
delete all the regular files in the temp folder which have not been modified in the last 24 hours
Search directory / tmp / a1 and below for files matching regular expression " . * / tmp / . * \ ( case insensitive )
Find all files / directories starting with ' app- ' and ending with ' .log ' in their names and have been modified in the last 5 minutes
Print all files in the current directory tree as a comma separated list
Find all files / directories named modules under current directory
Search the / tmp / directory recursively for files matching regular expression " . * file [ 0-9 ] + $ "
Print the date followed by " : $ line "
Search the directory tree / directory / containing / files for " string "
Find all directories under ' / foo ' directory tree without descending into ' . / bar ' and delete them
Measure the disk space taken up by all * .txt files in the current directory tree
Find all files matching regular expression ' . * / test . * [ 0-9 ] [ 0-9 ] * [ . ] [ 0-9 ] [ 0-9 ] * [ . ] [ 0-9 ] [ 0-9 ] * ' in their names
Find all * .dbf files / directories under current directory
Search the / path directory tree for files whose names end in " .exe " and " .dll "
Unzip all " .gz " files in the current directory tree to their respective directories
Find all files / directories in entire file system that are owned by " shadow " group
Find all files owned by group ' group2 '
Find all the files which are greater than 100MB and delete them
Find all files / directories under ~ / mypassing directory which are at least 3 levels deep and which are not present in the path " / home / user / Series "
find all the files in the current folder which have been modified in the last 24 hours
Search the / Path directory tree for files matching pattern " file _ name * "
Changes group ownership of ' public ' to ' pub ' .
searches through the root filesystem ( " / " ) for the file named Chapter1 .
Make directory " $ HOME / .npm-gconfig "
Searches through the htdocs and cgi-bin directories for files that end with the extension .cgi. When these files are found , their permission is changed to mode 755 ( r
Find all regular files under $ FOLDER directory tree that were modified more than 7 days ago
Print out the contents of all * .txt files in the home directory
Print all files and directories in the ' . ' directory tree skipping SCCS directories
Remove " * prefs copy " files in the / mnt / zip directory tree
Search the current directory tree for regular files whose names end in " .shtml " or " .css "
Search the current directory tree for files whose names match regular expression ' . * packet . * ' , ignoring the case
Search the current directory tree for regular files whose names end in " .shtml " or " .css "
Search the / path directory tree for files whose names end in " .exe " and " .dll "
Split " file.txt " into files of at most 100 lines each with a prefix " new "
Print the full path of command " rails "
Compress all files in the current directory tree with gzip
Find all files owned by group ' group2 '
Delete the oldest file with ' .tgz ' or ' .gz ' extension under ' / home / backups ' directory tree
Find all files under current directory and enter the file name
Search the / foo.bar directory tree for files whose names match regular expression " ^ From : . * \ . [ apr ] [ 0-9 ] + "
Print the date followed by " : $ line "
Find all files / directories under current directory with ' FooBar ' in their paths and copy them to ~ / foo / bar
display all the files in the folder / home which are bigger than 10MB
Print out the contents of all * .txt files in the home directory
Print out the contents of all * .txt files in the home directory
Print out the contents of all * .txt files in the home directory
Find all regular files matching the name pattern " $ 1 * " ( where $ 1 is a positional parameter ) under ' / usr ' , ' / bin ' , ' / sbin ' and ' / opt ' directory
search in the current folder for the file with the name " test "
Split " file.txt " into files of at most 100 lines each with a prefix " new "
Change permissions to 644 for all regular files under and below / path / to / someDirectory /
Find all regular files in the current directory tree that have permissions 777
Find all files under $ sourceDir directory and search for the regular expression " . * \ .rb "
Stores system load average number in the ' proc _ load _ average ' variable .
Search the ~ / bin directory for files called " test "
Find files / directories that are newer than ' / tmp / stamp ' by modification time
display the count of all the directories present in a folder
Display file1 and file2 files under current directory
Counts lines of / etc / fstab file .
Search the current directory tree for files whose names match regular expression ' . * packet . * ' , ignoring the case
search in the current folder for the file with the name " test "
Find all regular files with ' .txt ' ( case insensitive ) extension under ' / path / to / dir ' directory tree
Find all files under / source directory that match ' * / dest / files * ' in their names
Find all files / directories under current directory that match the case insensitive regex . / \ ( RT \ | ED \ ) . * and show several lines of output from the beginning
Search the / tmp / directory tree for files last modified more than 10 days ago
find all files in the current folder that are not modified in the last 10 minutes
Find all files / directories named ' document ' in the entire filesystem
Search / usr / local for files whose names end with " .rpm "
Find all files under current directory whose file type description contains " image " , display only path to each file .
Count the number of lines in all " .php " files in the current directory tree
Archive " / path / to / files " to " user @ targethost : / path "
Find files under current directory that contains the string ' / bin / ksh '
Print the list of files and directories of the / etc directory
Find all * .mp4 files under / foo / bar and show the few lines of output from the beginning
Search the / path directory tree for files missing g + w and o + w bits
List all files in the current directory tree invoking xargs only once
Archive " / path / to / files " to " user @ targethost : / path "
Find all files / directories under $ 1 which have at least write permission for their owner and set write permission for group for these files / directories
Find all files / directories under $ 1 which have at least write permission for their owner and set write permission for group for these files / directories
Removes resursively all files and folders named " Thumbs.db " , ignoring case distincts .
Search the / path directory tree for files missing g + w and o + w bits
Search the / path directory tree for files missing g + w and o + w bits
Print a listing of the ' other ' directory
Save the user name of the current user to variable " me "
Change all files in " / var / www / html " to " root "
Compare the files in ' MEGES ' and ' MD5 ' and ' MD5 ' and ' MD5 ' and ' MD5 ' file
Find all pdf files whose name is " Test "
Finds strings having text " searched-string " in all files recursively in a current folder .
display all the tmp files in the folder / tmp / after and move them to the folder / tmp / after
Print the number of lines with any-cased ' merge ' from standard input
Create a symbolic link named " $ 1 / link " to the existing full and real path of " $ 2 "
Prints current month calendar , without highlighting of a current date .
Save system information appended with the current date in ' filename ' variable
display a long listing of all the files in the current folder which have been modified in the last 60 minutes
Find all files / directories with ' .mp4 ' extension in the home directory tree
Delete files in / var / tmp / stuff and below that have not been modified in over 90 days
Find all files / directories under $ 1 which have at least write permission for their owner and set write permission for group for these files / directories
Find all files / directories under $ 1 which have at least write permission for their owner and set write permission for group for these files / directories
Finds strings having text " searched-string " in all files recursively in a current folder .
List all files / directories under current directory
Create an empty file with a carriage return character in its name .
Find all files / directories under current directory that were modified later than / reference / file
Find all files / directories under current directory tree whose paths match the regex ' filename-regex . \ * \ .html '
Find all directories with the name ' project.images ' in the entire filesystem
Change permissions to 644 for all subdirectories
Find all * .txt files / directories under / home / user1 / public _ html / that were modified more than 60 minutes ago
download contents from " https : / / raw.github.com / creationix / nvm / master / install.sh " and execute
Find all * .tex files / directories under current directory
create a symbolic link named " www " to file " www1 "
Find all regular files in the ' / root ' directory tree that are less than 50 bytes in size
Find all * .ini files
Move all files and directories in the current directory to " $ TARGET " excluding files matching " $ EXCLUDE "
Search the current working directory tree for files whose names start with " fileA _ " or " fileB _ "
Find all the regular files in the current directory tree that have the user " tom "
Save ' myname = ' in ' myvariable ' variable
display all the normal / regular files in the current folder which have been modified in the last 24 hours
Find all regular files that reside in the current directory tree and were last modified more than 2 days ago
Show the list of files modified less than a minute ago
Archive " / path / to / files " to " user @ targethost : / path "
Search the current directory tree for files last modified less than 2 days ago
Search the current user ' s home directory and its sub-directories for any files accessed after alldata.tar was last accessed and add them to that same tar archive .
Add a line number to every line in " infile "
display all the normal / regular files in the current folder which have been modified in the last 24 hours
Concatenate files containing ' test ' in their names
Archive " / path / to / files " to " user @ targethost : / path "
find all the files in the current folder which start with t and have been modified between one hour ( 60 minutes ) and 12 hours ( 720 minutes ) ago .
find all the files ending with " .c " in current folder and search for a pattern
Find all directories under $ x directory and set read-write-execute permission for owner and group and no permission for other for those directories
Find all * .json files and archive them to myfile.tar
Find all regular files with ' .aac ' extension under ' / path / to / files ' directory tree
display all the php files in the current folder
Sort " bigfile.tex " and " file.tar.gz " by the first and third field of both files matches , print unpairable lines from both files , replace missing fields with " no-match " , and output the second
Remove everything in a current folder without prompting .
Check if a drive with UUID " $ UUID " is mounted
Save the first line of " $ j " into variable " k " in ksh
Print the path names of all files and directories in the current directory tree
Find all files / directories under ' / data ' directory tree that have not been modified in the last 2 days and display their contents
Shows state of shell option ' extglob ' .
Numerically sort each line in file " out " and print the result to console
Compress all files in the " myfiles " directory tree that were last modified more than 7 days ago
Copy all files matching " * .JPG " in the current directory tree to " $ JBOG "
Search the current directory tree for files matching regular expression ' . * myfile [ 0-9 ] [ 0-9 ] ? '
Move all files / directories under current directory to ~ / play
Search the current directory tree for regular files whose names end in " .shtml " or " .css "
Display the contents of " file " formatted into a table , removing duplicate lines where the first 12 characters are duplicates , and display the number of occurrences at the beginning of each line .
Removes all empty folders under current path , aged between ' first ' and ' last ' timestamps .
Find all files under $ sourcePath directory that were modified more than 7 days ago and delete them
Sort " : " delimited lines in " test.txt " by the first and third field preserving only unique lines
Change permissions of all files in the / var / www directory tree to 644
Search the current directory tree for regular files whose names end in " .shtml " or " .css "
Prints information about active network interfaces in system .
Find all files / directories under ~ / documents with the options / node _ modules directory tree
find all the files in the current folder which have execute permission
Find files in the current directory tree whose names are of the form " cxx _ data.txt " where xx is a number from 40 to 70
Make directory " foo " and do not cause an error if it exists
Searches through the htdocs and cgi-bin directories for files that end with the extension .cgi. When these files are found , their permission is changed to mode 755 ( rwxr-xr-x ) .
Save " $ USERNAME " to variable " RM "
find all the regular files in the current folder that have been modified in the last 4 days and not today and copy them to another folder
Enables shell option ' nullglob ' .
Read a line from standard input and save received words sequentially in variables XPID XUSERID XPRIORITY XVIRTUAL XRESIDENT XSHA
Find files in the current directory tree whose names are of the form " cxx _ data.txt " where xx is a number from 40 to 70
Archive " / foo / bar / baz.c " to " / some / path " on host " server.com " authenticating as user " usr " , compress data during transmission , show progress details .
Move all files and directories in the current directory to " $ TARGET " excluding files matching " $ EXCLUDE "
Search the current directory tree for regular files whose names end in " .shtml " or " .css "
Search the current directory tree for files not newer than file / tmp / t1 but not newer than file / tmp / t2
Find all files in / dir1 and print only the filenames ( not paths )
display all the regular / normal files in the entire file system
View manual page of find utility
Find all regular files with ' .mp3 ' ( case insensitive ) in their names under current directory tree
search for a word in all the files in the current directory
Search the file system for SUID or SGID files
List all environment variables ( name and value ) whose name either equals PATH or starts with GOBIN
Change the owner of all files in the directory tree " dir _ to _ start " excluding directory " dir _ to _ exclude " to " owner "
Recursively change the owner and group of " / home / el / svnworkspace " and " 775 " to " your _ user _ name "
find all the files in the current folder which end with .o or with the name a.out and display them .
Search the file system for SUID or SGID files
Print the path names of all files and directories in the current directory tree
Change the owner of " / etc / hosts " to " root "
find all the files in the folder " / mp3-collection " which are bigger than 10MB excluding those that start with the word Metallica
The command runs all the directories ( -type d ) found in the $ LOGDIR directory wherein a file ' s data has been modified within the last 24 hours ( -mtime + 0 ) and compresses them ( compress -r { } ) to save disk space .
Remove all files in ~ / clang + llvm-3.3 / bin / and ' basename / old / WordPress / ' in their contents
Find all files matching regular expression ' . * / test . * [ 0-9 ] [ 0-9 ] * [ . ] [ 0-9 ] [ 0-9 ] * [ . ] [ 0-9 ] [ 0-9 ] * ' in their names
Print the first 10 files or directories found in the / tmp directory tree by ' find '
Deletes empty folder ' nonsense _ dir ' .
Remove all files in the ~ / Music / directory tree with confirmation prompt
create a symbolic link named " / usr / lib / jvm / default-java " to file " / usr / lib / jvm / java-7-oracle "
Find all directories whose names end with " ~ " in the / home / peter directory tree , following symlinks , and delete them
find all the files in the current folder which do not belong to any user
Find all files in the " test " directory tree except those with ' / invalid _ dir / ' in their names
Find all pdf files under current directory
Find files in the current directory tree skipping hidden files and directories that contain the word " vpwared "
Decompress and extract ' archive.tar.gz ' into ' / destination '
Delete all files under $ LOCATION that match $ REQUIRED _ FILES in their names
Find all files in the " test " directory tree except those with ' / invalid _ dir / ' in their names
Search the / path directory tree for files whose names match regular expression ' . * 2015 . * \ ( album . * \ | picture . * \ ) '
Compare " file1 " and " file2 " line by line with 3 lines of unified context
Recursively copies " $ { TARGET } " to " $ { MD5 } " , renaming relative paths
Print " Cannot acquire lock - already locked by " followed by content of $ lockfile file
Removes all empty folders under current path , aged between ' first ' and ' last ' timestamps .
Search the current directory tree for regular files whose names end in " .shtml " or " .css "
Print the MD5 message digest of " / path / to / destination / file "
Print " 0 " to the console and append to " $ c " as the first argument of " $ d "
Find all files / directories under $ 1 path and search for the regex expanded by $ 3 in those files
Find all broken symlinks under / path / to / search directory
Create a symolic link in " / usr / local / bin / " to " / Applications / Sublime \ Text \ 2.app / Contents / SharedSupport / bin / subl "
Change permissions to 644 recursively only for files
Find the files / directories with ' .abc ' extension in the / path / to / folders and delete them
Search the current directory tree for files whose names match regular expression ' . * packet . * ' , ignoring the case
Move all files and directories in the current directory to " $ TARGET " excluding files matching " $ EXCLUDE "
Read a line from standard input into variable " message " with prompt " Please Enter a Message : " followed by a newline
Split " $ INFILE " into files of at most " $ SPLITLIMT " with a numeric suffix and a prefix " x _ "
Print file type information of the " java " executable
Silently read a line from standard input into variable " REPLY " without backslash escapes and using the prompt $ ' Press enter to continue ... \ n '
Archive " / path / to / files " to " user @ targethost : / path "
Archive " / path / to / files " to " / path " on host " user @ targethost " with elevated permission on the remote host
Print the contents of " n "
Create a symolic link in " / usr / local / bin / " to " / Applications / Sublime \ Text \ 2.app / Contents / SharedSupport / bin / subl "
Search for files / directories with the case insensitive pattern anaconda . * in var / log directory and create an archive ( file.tar ) of the last file found
Search PATH for utilities called " rename " , display the type of file ( script , executable , ... ) for each match found .
display a long listing of all the files in the current folder which have been modified in the last 60 minutes
display a long listing of all the files in the current folder which have been modified in the last 60 minutes
display all the files ending with " .foo " including those that are in the directory " .snapshot " , this is the wrong way of using prune .
Print all files , folders , symlinks , and searching for string " text "
Find all files / directories under current directory that match the case insensitive extended regex . * / ( EA | FS ) _ . *
Find files in / usr directory without going into sub-directories that were modified more than 7 days ago
Print the contents of " n "
search for all the regular / normal mp3 files in the file system and move them to the folder / mnt / mp3
Archive " / path / to / files " to " user @ targethost : / path "
find all the files in the folder " project " which have been modified in the last 24 hours
Removes resursively all files and folders named " Thumbs.db " , ignoring case distincts .
Archive " / path / to / files " to " user @ targethost : / path "
Print the contents of " n "
Save the first " " . separated field of the system host name to variable " HOSTZ "
Search for all files with either " sitesearch " or " demo " in their path names
Compress all " log " files in the current directory tree with gzip
Find all IP addresses in / etc directory files
Find all files under $ searchpath directory and show a few lines of output from the beginning
Saves invoked command ' check _ script _ call = $ ( history | tail -1 | grep myscript.sh ) ' in variable ' check _ script _ call ' , preceeding by its number in history .
Move all files and directories in the current directory to " $ TARGET " excluding files matching " $ EXCLUDE "
searches through the root filesystem ( " / " ) for the file named Chapter1 .
Archive " / path / to / files " to " user @ targethost : / path "
Go to first directory specified in PATH which contains the command ' oracle '
Find all files under $ source _ dir that match the regex expanded by $ input _ file _ type in their paths
Locate all * .csv files under the current directory tree
Archive " / path / to / files " to " user @ targethost : / path "
Search the current directory tree for all files matching either pattern " * .rb " or pattern " * .py "
Search PATH for utilities called " rename " , display the type of file ( script , executable , ... ) for each match found .
Move all files from the ' sourceDir ' directory tree to the ' destDir ' directory
display all the configuration files in the etc folder along with the last access & modification time
Find all files / directories with ' .aux ' extension under ' / path / to / files ' directory tree
Print a sorted list of * .so files in the bla directory tree
Print the date followed by " : $ line "
Archive " blanktest / " to " test / " deleting any files in the destination not found in the source
Move all * .mp4 files from directory / foo / bar and its subdirectories to / some / path
Print a minimal set of differences between files in directories " a " and " b " , ignore the first 3 lines of output , and print any line starting with " - " with the first character removed
Perform a dry run replacing " special " with " regular " in all file names in the current directory
Move all * .mp4 files from directory / foo / bar and its subdirectories to / some / path
Searches through the htdocs and cgi-bin directories for files that end with the extension .cgi. When these files are found , their permission is changed to mode 755 ( rwxr-xr-x ) .
find all the files in the file system which have read permission to the user and display the ten files
Change to folder where the oracle binary is .
Find files / directories that does not have write permssion for group and others
Decompress " path / to / test / file.gz " to standard output and save all lines matching " my regex " to files with a 1000000 line limit
Find all files under $ { searchpath } that match the regex $ { string1 } . * $ { string2 } . * $ { string3 } in their contents where $ { string1 } etc .. will be expanded
Archive " / path / to / files " to " user @ targethost : / path "
Decompress " $ { set1 [ @ ] } " and save all output to files with at most 1000 lines each and use the result to variable ' DESTATE '
Print " deb http : / / ppa.launchpad.net / webupd8team / java / ubuntu precise main " and append to file " / etc / apt / sources.list "
Save the first line of " $ j " into variable " k " in ksh
Find all files / directories under / path / to / folders / * paths and print the timestamp in YmdHMS format along with their paths and object of symlinks
Archive " / path / to / files " to " / path " on host " user @ targethost " with elevated permission on the remote host
Print a sorted list of * .so files in the bla directory tree
