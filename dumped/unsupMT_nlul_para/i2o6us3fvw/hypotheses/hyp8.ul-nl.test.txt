Make directory " dir1 "
Make directory " / tmp / foo "
Recursively print all directories in the current directory tree
Find files whose type multiple *
Find files that are empty
remove all core files in the file system
find all pdf files in the file system
find all text files in the current directory
Make directory " / tmp / foo "
Print the date formatted with " % a % x % X "
display all the directories in the current folder
find all the files that have been modified today
display all the files in the entire file system which have the permissions 777
Counts lines in each * .php file .
find all files without 777 permision
Find all directories with space in their names under current directory
Find all files named " filename " in the current directory tree , not descending into " FOLDER1 "
Find all files on the system that are larger than 600 MB
Print command history
Find all the files whose permissions are 777
Compress " hello world " and save to variable " hey "
Find directory " your / dir " if it is empty
Remove all symlinks from the current directory tree
unsafed rm all file which name start with ' # '
Delete recursively empty files named ' bad '
Find all files / directories with ' .js ' extension under current directory tree
Find all * .java files under current directory
Find all * .java files under current directory
Find all SGID files in the current directory tree
find all the files that have been modified in the last 24 hours
Find files / directories that are readable by the user ' du ' under ' / home ' directory tree
Find all files named ' filename ' in the entire filesystem
Find file ' hosts '
Find recursively all l files in the current directory
Print the type of the current shell
Delete history entry at offset , defined in first argument of executed script
Show only the last 10 files
Set 644 permission to all regular files under current directory
Print the file system " file / goes / here " is on
Find all regular files in the current directory tree and search them for " example "
Find all regular files starting from level 3 of directory tree ~ / container and move them one level up
Find all files whose owner is ' user1 '
Find all symbolic links under " / proc / $ pid / fd "
Find all .sh files in the current directory tree and remove them
Find all .java files starting from the current folder
Search the current directory recursively for directories
Find all the files which are accessed in last 1 hour
Find files in the current directory tree whose size is 24000 bytes
find the number of regular files in the current directory tree
Find all regular files under $ { S } directory
display all the files in the current folder excluding the directory aa
Find all files whose name or type description includes " text " , display only paths to files .
display all files in the directory " dir " which are empty
searches through the / usr directory for the regular file named ' Chapter1 * '
Find all files under images directory
Set 644 permission to all regular files under current directory
Save the date 222 days before today to the variable ' date _ 222days _ before _ To
Print file type of the executable file of command " file "
Find all directories with permissions 777 under and below / var / www / html , and change their permissions to 755
Delete all empty directories in the current directory tree
find all files in current folder which are exactly 300MB
Find all files that are modified in last 3 days
Find all files / directories under .. directory and count the number of lines for the output
Write " error " to standard output
Delete history entry at offset , defined in first argument of executed script
Delete history entry at offset , defined in first argument of executed script
Search the current directory tree for files whose name is " .note " , case insensitive
Print the file system " file / goes / here " is on
Show all files that have not been accessed in the $ HOME directory for 30 days or more
Copies all * .xml files under current directory
Print the number of entries ( files , directories , symlinks , etc . ) in the subdirectories of the current directory , stopping search
Move " $ file " to " $ file "
search all the " .sh " files in the / usr folder
Find all files under image-dir
Find all files that are readable
Find all * .php ( case insensitive ) files under / home / jul / directory
Find out all hard links in the / home directory to file1
delete all the log files in the current folder
Find all * .jpg files in the current directory and below .
Find all regular files that reside in the current directory tree and were last modified at least 1 day ago
Search directory trees / tmp and / var / tmp for " testfile.txt "
Search for files whose name is " filename " and whose permissions are 777
Take a file path from standard input and remove it .
Print the number of lines in file.txt .
search all the " .sh " files in the / usr folder and follow the symbolic links to their original file
Find all files / directories named ' TEST _ 3 ' under current directory tree
display all the files in the current folder which have the permissions 777 and which have been modified in the last 24 hours .
find all the regular / normal files in the current folder
display the number of lines in all the " .c " files in the current folder
Find all files in the current directory tree whose names are " .DS _ STORE "
Find files modified in last 7 days
Find all the files which are modified in last 1 hour
Show the list of files larger than 100 MB
find the file " filename.txt " in the entire file system
Delete all files / directories under current directory
Find all * .jpg files under current directory and print only unique names
Find all * .code files under current directory
Print the current directory
Print the current directory
Rename all files in current directory with names starting with " fgh " so they start with " jkl " instead
Save the list of all .py files under and below the current directory that contain " something " in their pathnames to output.txt
Find directory " your / dir " if it is empty
Find blabla * files under current directory
Find all the files which were modified 50 days ago
Find all symbolic links containing ' javaplugin ' in their names under current directory tree
Search for files whose name is " filename " and whose permissions are 777
Find all * .tif files / directories under current directory
Find files named " filename.txt " in the / home directory tree
Search the system for the file " testfile.txt "
Save the short DNS lookup output of $ WORKSTATION to ' WORKS
Save the canonical path of " $ dir / $ file " in variable " path "
Change owner of " folder " to " user _ name "
Find all files / directories under current directory matching the case insensitive pattern ' pattern '
Find all directories named ' vimrc ' in the entire filesystem
Search directory tree " / tmp / 1 / " for files matching regular expression " ^ 2 "
Find all empty files starting from the current directory and delete them
Find all * .rpm files / directories under current directory
list all files / folders in current directory
find all the regular / normal files in the current folder which belong to the group " flossblog "
find all the php files in the entire file system
Delete all .svn files / directories under current directory
Delete all .svn files / directories under current directory
Find all files larger than 100M and delete them
Recursively change the owner and group of all files in the current directory to " andrewr "
Remount root filesystem " / "
Remount " yaffs2 " filesystem " / dev / block / mtdblk4 " to " / system
find all the files in the current folder which do not belong to any user
Delete all files / directories named test under maximum 2 level down the current directory
Search the directories that match pattern ' / path / to / directory / folder { ? , [ 1-4 ] ? , 50 } ' for .txt files
split file t.txt into pieces per 30000000 lines named as " t.NN " with numeric suffix
find all files owned by user daniel
Search the current directory tree for * .conf and * .txt files
Find all the files in entire file system which are accessed 50 days back
Find all files / directories under current directory
Find all regular files in the current directory tree whose names end with " .DS _ Store " and delete them
Find all * .foo files under / path directory
Gunzip all files matching " file * .gz " and answer " n " to any prompts
find all files in the home folder that end with " , txt "
Find all files / directories named ' photo ? .jpg ' under current directory tree
Search the current directory tree for files named " somename " , case insensitive
Find all regular files under current directory tree that contain ' some text ' in their names excluding paths that contain dot files / directories
Set permissions of all directories under " / opt / lampp / htdocs " to 755
Report file system containing the current directory disk usage
find all the files in the home folder which have been modified in the last 24 hours
find all the files in the home folder that end with " .xbm "
Rename file file.txt.123456 to file.txt
Set shell option ' histverify ' .
find out what group a given user has
find all files that have the extension " bam " in current directory
Find files that are 0 bytes in size in the current directory and remove them
Find files in the home directory tree modified less than a day ago
find all the parent directories in the entire file system
Search the current directory recursively for regular files with the extension given as variable $ extension
Find all regular .html files in the / var / www directory tree
Compress all files under / -name ' directory tree with gzip and keep file extensions the same
Remove all regular files that were modified more than 60 days ago under ' / path-to-directory ' directory tree
Find all files / directories with ' .note ' extension under current directory tree
find all the php files in current folder using regular expressions
Remove all * .old files from the current directory tree
Find files / directories named ' document ' in ' ext2 ' partitions in entire filesystem
Compress every file in the current directory tree with gzip and keep file extensions the same
count the lines of java code for all the java files in the current directory
Save absolute path of " $ path " that may not exist to variable " abspath "
Create an empty file " foo " in each directory under the current directory containing a file named " bar " .
Remove all files / directories named test under current directory
Replace all spaces with underscores in directory paths under current directory .
Set variable BZIP2 _ CMD to the full path of command " bzip2 "
Search the current directory recursively for .jpg files with the extension given as variable $ extension
Find all directories in the current one recursively which have the write bit set for " other "
Find files modified within the past 24 hours
Find all files in the current directory tree ignoring the " .git " directory
Remove all files and directories in the current directory by answering with " y " to all prompts
Delete file with inode number 314167125
Shows MAC address of network interface eth0 .
Read a line from standard input into variable " arr "
Find all files / directories with ' .note ' extension under current directory tree
Remove all * .old files from the current directory tree
Find files in the current directory tree whose size is greater than 24000 bytes
Find recursively all regular files in the current directory tree ending in .dll or .exe
find all CSS files that do something with your HTML ID # content
Find regular files modified within the last 7 days
Find every file / directory under / var / spool that was modified more than 60 days ago .
Find all * .jpg files under current directory and print only unique names
find all the file " jan92.rpt " files in the current folder
Print common lines in " file1 " and " file2 "
Counts number of * .php files in a current folder and subfolders .
List level 2 subdirectories of the current directory
Print the date formatted with " % a % x % X " followed by the host name
print disk usage of files or folders in current directory
List all files in the current directory tree that were last modified between " mar 03 , 2010 09 : 00 " and " mar 11 ,
Print command history
Search / usr / local for subdirectories whose names end with a number 0-9
Find all files under media / directory and change their permission to 600
Search all files in the current directory tree whose pathnames match pattern " . / sr * sc "
Search the / some / directory recursively for files whose names begin with " Linkin Park "
Find files whose pathnames end in " f "
find all files in current folder which are bigger than 1MB
Find all files that are set group ID to staff
Find all files / directories in level 2 down the current directory
Print the list of all regular files residing in the current directory and below
Find recursively all files changed within the last 5 minutes starting from directory b
Print the IP addresses for the current host name
Search the current directory tree for regular files omitting directory ' omit-directory '
Find find symlinks pointing to / mnt / oldname * in the entire file system
Find all files / directories named ' myletter.doc ' under current directory tree
Delete interactively all the files / directories with inode number 782263 under current directory tree
Search the / path / to / dir directory tree for .c files
Search everywhere for directories named ' root '
Search the current directory and all of its sub-directories for the file ' file1 ' .
Find all files under media / directory and change their permission to 600
Find all regular files under / var / www and below that have changed in the last 10 minutes
Find all * .hosts files under / home and below
Find all * prefs copy files in / mnt / zip and delete them with confirmation prompt
Print whether the unique contents of " set1 " and " set2 " differ
Print the list of files and directories of the current directory
Print the $ N ' th line from file by replacing commas ( ' , ' ) with newlines
Find regular files modified within the last 7 days
Find all * .txt files under $ DIR directory tree and display their contents
search for the word " put " in all the files in the current folder which have the word " bills " in their name and display the matched line al
Adjust the timestamp of ' filename ' by subtracting 2 hours from it .
Remove all files / directories named test under maximum 2 level down the current directory
Changes group ownership of ' target _ directory ' to ' git ' .
Find all 777 permission directories under current directory and set permissions to 755
Move all files from the ' sourceDir ' directory tree to the ' destDir ' directory
Delete all files in the / TBD directory that were modified more than 1 day ago
Search the XML files from directories / res / values-en-rUS and / res / xml for string " hovering _ msg "
display list of all the C files ( fuiles with " .c " extension ) in current folder
Add group write permission to all files matching " * " or " ... * "
Find files that are orphaned
Search the system for files named " findcommandexamples.txt " , ignoring the case
Find all text files in the home directory
display a long listing of all the directories in the entire file system
count all the regular files that are present in a directory
display all the normal / regular files in the current folder which are empty
Find all * .tmp files / directories under / home / backups directory
Find files and directories that are at least seven levels of nesting in the directory / usr / src excluding CVS directory
Find recursively all files changed within the last 5 minutes starting from directory b
Print the list of files and directories of the current directory
Remove all regular files in the / tmp / directory tree that were last modified more than 5 days ago
Print the average round trip time of 5 pings to " google.com "
Run " . / configure " with a new environment variable CC set to the full path of the command ' gcc '
Search all regular files in the current directory tree for " string "
Find all * .old files and move them to directory oldfiles
Save the -l " myvariable " myHostName " to variable " DATNAME "
Save the date 222 days before today to the variable ' date _ 222days _ before _ TodayDay '
display all the regular / normal files in the / tmp folder and display the total count
Find all * .cgi files / directories under current directory and change their permission to 755
find files in the current directory and sub-directories , whose content was updated within the last hour
find files which have all permissions to all the users in the current directory
search the word " MySearchStr " in all the regular / normal files in the current folder and display the line number and the file name
Compress every file in the current directory tree with gzip and keep file extensions the same
Find all regular files under current directory tree that contain ' some text ' in their names excluding paths that contain dot files / directories
Find all files , folders , symlinks , etc in the current directory recursively
Find all files / directories with ' .bar ' extension in maximum 2 levels down the current directory
Search the current directory recursively for files last modified within the past 24 hours ignoring .swp files and paths . / es * and . / en *
Mount " tmpfs " filesystem to " / path / to / dir "
Find all * .mp3 , * .aif * , * .m4p , * .wav , * .flac files under $ musicdir directory
Find x * files / directories under / tmp directory whose status was changed less than 1 day ago
Search the current directory recursively for .txt files with lines that match regular expression ' ^ From : . * unique sender ' , ignoring ~ / src and ~ / bin
Find all files / directories under / proc and run ls command on each .
Print out the contents of all * .txt files in the home directory
Find all regular files under current directory tree that contain ' some text ' in their names excluding paths that contain dot files / directories
Check if the contents of file " subset " is a subset of file " set "
Report file systems disk usage in 1GB blocks .
display all the php files in the current folder
Reports count of processors in system .
change the permissions of all the regular / normal files in the current folder
display list of all the files in the / etc folder which have been modified in the last 24 hours
Find all files larger than 100M and delete them
Search the / dir directory tree for files whose names match regular expression ' . * 2015 . * \ ( album . * \ | picture . * \ ) '
Find all files / directories with ' .old ' extension under current directory tree
Search the current directory tree for files whose names start with " f "
find StringBuffer in all * .java files
display all the files in the file system which do not belong to the user " wnj " and which are modified before the file " ttt "
Find all .sh files in the current directory tree and remove them
Find files with name ' Test _ File '
Compare " current.log " and " previous.log " line by line and print lines containing regex pattern " > \ | < "
find files in / full / path / to / dir which have been modified after a specific date ( Feb 07 )
Remove all vmware- * .log files under current directory
Archive " / path / to / files " to " / path " on host " user @ targethost " with elevated permission on the remote host
Check if the directory tree whose name is given as variable $ somedir contains no regular files
Delete all _ _ temp _ _ * directories under maximum 1 level down the current directory tree
Copy all files matching " file _ name.extension " to " / path / to / receiving / folder " preserving directory hierarchy
Find all files in the current directory tree whose path names match pattern ' . / sr * sc '
display all the files in the file system excluding all the " .c " files
Find all * .txt ( case insensitive ) files of user root under / directory and show a few lines of output from the beginning
find all the file which name end with c or h and content contain ' thing '
Sort second from the end field from slash-separated string in file ' datafile '
Change permissions to 755 for all directories in the current directory tree
Filters only directories from long file listing of the current directory
Find files / directories that are newer than ' foo.txt ' under current directory tree
Find all regular files named postgis-2.0.0 under your home directory
Find all SGID files in entire file system
Copy " / path / to / source " to ' / path / to / dest ' in remote " username @ computer "
Find all * .swp files / directories under current directory
Save list of groups which user $ line belongs to and not matching pattern " _ unknown | sciences | everyone | netaccounts " in '
Find all 100MB + files and delete them
Find all * .txt files / directories under current directory discarding ' Permission denied ' errors
Find files ending in " config "
display all the files in the current folder which end with " .bash "
Saves real path of the folder containing the current script
Remove all " core " files that were last changed more than 4 days ago from the current directory tree
Find all files / directories under current directory tree that start with ' test ' in their names without descending into directories with the same name pattern
Find all files / directories in level 2 down the current directory
display a long listing of all the java files in the current folder in sorted order
Archive the list of 1st level subdirectories in / fss / fin to / fss / fi / outfile.tar.gz
Find all files / directories under current directory and set their permission to 775
Search the current directory tree for directories
find files in / usr directory with inode number 131463 and delete them
Search the current directory recursively for MOV files
Find all * .old files and move them to directory oldfiles
Move all files from the ' sourceDir ' directory tree to the ' destDir ' directory
find foo , Foo , FOo , FOO , etc . , but only files
Find all files in the current directory tree whose pathnames match pattern ' * / 1 / lang / en.css '
Remove any file containing string " GUI "
Search the xargstest / directory recursively for files matching pattern ' file ? ? '
Reverse the space separated words in " 35 53 102 342 "
Read standard input until a null character is found and save the result in variable " line "
find files in / full / path / to / dir which have been modified after a specific date ( Feb 07 )
Search for " whatever " in all files under / dir directory ensuring white space safety in filenames
find all directories in the current directory and do not search in sub directories
Search the current directory tree for * .c and * .sh files
Find and copy all log files in the current directory tree to / tmp / log-files
find all the regular / normal files in the current folder which belong to the group " flossblog "
Suffix all files and folders in the current directory with " _ SUF "
find all the files in the entire file system that have been accessed in the last 60 days ago
find StringBuffer in all * .java files
Find * .conf files / directories only upto 2 levels down under / etc directory and show a few lines of output from the end
find all the direcories in the current folder
Find all files / directories named ' file ' and print them with null character as the delimiter instead of newline
Recursively search for all directories containing " foo " ( case insensitive ) under the current directory , renaming them to replace " foo " ( case insensitive ) with " Bar "
List all files / directories under $ dir _ name with size $ sizeFile and print them according to the format string ' % M % n % u % g % s % Tb % Td % Tk : % TM %
find all the files in the current folder which have been modified in the last one minute
Find all regular files in the current directory tree ignoring GIT and SVN directories
Find all regular files under / var / www directory and set their permission to 700
Find all directories under / path / to / someDirectory tree and change their permission to 755
Find all regular files in the current director and set their permissions to ' 644 ' .
display all the files in the temp folder which end with " .xbm "
Search the / tmp / directory recursively for files matching regular expression " . * file [ 0-9 ] + $ "
Find all files starting from / whose names end with " .rpm " and change their permissions to 755
Save the user name of the current user to variable " x "
Find the most recently changed files in a subtree
Search the / tmp / directory recursively for files matching regular expression " . * file [ 0-9 ] + $ "
Print the current date in ' % H : % M : % S ' format followed by the string ' : done waiting. both jobs terminated on their own or via timeout ; resu
Search the / path directory tree for files that are less than 500 kB in size
Find all files / directories under / foo / bar and set their permission to 644
Measure the disk space taken up by all * .txt files in the current directory tree
Find files matching regular expression regexp
Find all * .dbf files / directories under current directory
Search the / path / to / dir directory tree for .c files
Unsets shell option ' extglob ' .
Find files / directories named ' new ' under current directory tree and set their group to ' git '
Find all files owned by user daniel in the current directory and its sub-directories .
Find all files larger than 100M and delete them
Search the home directory tree for files last modified more than a year ago
find all the files in the current directory and sub-directories whose status was changed after / etc / fstab was modified
Search the / Path directory tree for files matching pattern " file _ name * "
Changes group ownership of ' public ' to ' pub ' .
searches through the / usr directory for the regular file named ' Chapter1 * '
Make directory named in variable " $ HOME / Labs / lab4a "
See what files are executable by the file ' s owner and group
Find all directories under $ FOLDER , take the first fields ( dot ( . ) as the delimiter ) from their timestamps and reverse sort them numerically
Print out the full path name of " mypathname " with dots resolved
Print all files and directories in the ' . ' directory tree skipping SCCS directories
Remove files under / mnt / zip matching " * prets copy " with confirmation
Search the current directory tree for regular files whose names end in " .shtml " or " .css "
Search the current directory tree for regular files that contain " string "
Search the regular files of the current directory tree for string " foo "
Search the / path / to / dir directory tree for regular files
Split " file.txt " into files of at most 20 lines each with a prefix " new "
Print the full path of command " rails "
Compress all files under / source directory tree using gzip with best compression method
Find files owned by nonexistent users
Delete the oldest file with ' .tgz ' or ' .gz ' extension under ' / home / backups ' directory tree
Find all files under current directory and append a null character at the end of each of their paths
Find all * .csv files under / foot / bar / and move them to some _ dir
Print the date followed by the host name
Find all files / directories under current directory with ' FooBar ' in their paths and copy them to ~ / foo / bar
display all the files in the folder / home which are bigger than 10MB
Print only common file names in sorted listings of directory ' dir1 ' and ' dir2 '
Print out the contents of all * .txt files in the home directory
Print out the contents of all * .txt files in the home directory
Find regular files matching pattern " * oraenv * " and excecute the " file " utility for each of them
search in the current folder for all the directories with the name " test "
Split " file.txt " into files of at most 1 MiB in size with a numeric suffix , prefix " file " , and additional suffix " .txt "
Change permissions to 755 for all directories in the / path / to / someDirectory /
Find all regular files in the current directory tree that have been modified within the last 10 minutes
Find all files under $ sourceDir directory that match the regex ' " . * \ .txt " in their paths
Reports count of processors in system .
Search the home directory tree for files whose names end in " rb " or " js "
Find files / directories under ' / usr ' directory tree that are newer than / tmp / stamp $ $ by modification time
display the count of total number of non empty files in the current folder
Display " / tmp / file " as a table of width 30 with columns filled before rows
Compress all * .img files using bzip2
Search the current directory tree for files whose names contain " bills "
search in the current folder for all the directories with the name " test "
Find all regular files with ' .txt ' extension excluding ' README.txt ' files under current directory tree
Find all files / directories under $ source _ dir that match the regex ' . * / . * ' in their paths
Search the current directory tree for files without " test " in their path names
Find files / directories under ' / tmp ' directory tree that belong to the group ' wnj ' or ' ttt '
find files in the current directory and sub-directories , whose content was updated within the last hour
Find files / directories named ' document ' in ' ext2 ' partitions in entire filesystem
Search / usr / local for patterns ' * .old ' and ' * .old ' files
Find all files under current directory whose file type description contains " image " , display only path to each file .
Count the number of .java files in all folders rooted in the current folder
Archive " / usr / local / " to " / BackUp / usr / local / " on host " XXX.XXX.XXX.XXX " via ssh and show progress
Find all files under current directory matching either of the patterns ' error . [ 0-9 ] * ' , ' access . [ 0-9 ] * ' , ' error _ log . [ 0-9 ] * ' , ' ac
Print the list of files changed within the last minute
Find all * .csv files under / foo / bar and move them to some _ dir
Search the / path directory tree for files missing g + w and o + w bits
List all files in current directory whose name or file type description contains the word " ASCII " .
Archive the entire file system into tarfile.tar.bz2
Find all files / directories under $ 1 which have at least write permission for their owner and set write permission for group for these files / directories
Find all files / directories under $ 1 which have at least write permission for their owner and set write permission for group for these files / directories
Removes resursively all files and folders named " Thumbs.db " , ignoring case distincts .
Search the / path directory tree for files missing g + w and o + w bits
Search the / path directory tree for files missing g + w and o + w bits
Print a listing of the ' other ' directory
Save the user name of the current user to variable " x "
Change permissions to 644 for all files showing the respective chmod command
Compare " A1 / fastcgiven _ 1 " and " / usr / local / bin " line by line
Search the current directory tree for hidden files skipping .htaccess
Print info about all mounted file systems , and grand total statistic about available and used space
display all the tmp files in the / tmp folder which have not been modified in the last 10 minutes
Print every three lines of " file " as a comma separated line
Create symbolic links in the current directory for all files excluding " CONFIGFILE " located in " / your / project "
Prints all Saturday days of a current month .
Save system information appended with the current date in ' filename ' variable
display a long listing of all fles in current folder which have been modified in the last 60 minutes
Find all files / directories named ' .todo ' under $ STORAGEFOLDER directory tree and print their parent paths
Delete files in / var / tmp / stuff and below that have not been modified in over 90 days
Find all files in $ 1 directory or below with the modification time more than 7 days ago
Find all files / directories under $ 1 which have at least write permission for their owner and set write permission for group for these files / directories
Print info about all mounted file systems , and grand total statistic about available and used space
List all files / directories under $ dir _ name with size $ sizeFile and print them according to the format string ' % M % n % u % g % s % Tb % Td % Tk : % TM %
Create an empty file ( or update timestamp of file ) specified by variable " correctFilePathAndName "
Find all files / directories under current directory that were modified later than / reference / file
Find all files / directories under current directory tree whose paths start with ' . / sr ' and end with ' sc '
Find a directory named ' project.images ' in the entire filesystem and show it in long listing format
Change permissions to 644 for all subdirectories
Search the / home / sdt5z / tmp directory tree for files whose names end in " rb "
download content from " http : / / 127.0.0.1 : 8000 " and output to " index.html "
Find all * .tex regular files in maximum 2 levels down the current directory
create a symbolic link named " / usr / lib / jvm / default-java " to file " / usr / lib / jvm / java-7-oracle "
Find all regular files under root directory that are larger than 500 MB in size
Find all * .ini files that were accessed more than 7 days ago under current directory
Move all files and directories not starting with " l " in " / mnt / usbdisk " to " / home / user / stuff / " .
Delete the files under the current working directory with inode numbers specified on standard input
find all the html files in the current folder which have been modified exactly 7 days ago
Save the group " mysolute _ path " to variable " full _ path "
display all the normal / regular files in the current folder which are present in the pattern file " file _ list.txt "
display all the files in the current folder which have been modified in the last 24 hours excluding all directories
Show file type information for files in / usr / bin
Archive " _ vim / " to " ~ / .vim " suppressing non-error messages and compressing data during transmission
Search the current directory tree for files whose names end in " rb " or " js "
Search the current directory tree for all .java files that were last modified at least 7 days ago
Add a line number to every line in " infile "
display all the normal / regular files in the current folder and do not go beyond 3 levels
Correct permissions for files in the web directory
Archive " / path / to / application.ini " on host " source _ host " to current directory .
find all the files in the current folder which end with " ext1 " or " ext2 " or " ext3 "
find all the files ending with " .foo " including those that are in the directory " .snapshot " , this is the wrong way of using prune .
Find all directories under $ x directory and set read-write-execute permission for owner and group and no permission for other for those directories
Find all * .java files under current directory and archive them to myfile.tar
Find all regular files with ' .what _ to _ find ' extension in the current directory tree and search them for ' ired _ directory '
Find regular files named " expression -and expression " under and below / dir / to / search /
Sort " some _ data " by the first and second " ; " delimited entries and stabilizing the sort
Remove everything in a current folder prompting user on each action .
Check if directory $ some _ dir is empty
Print variable " $ ( comm resolved to firefox " in " file1.txt " which does not exist ) "
Print the path names of all files in the / tmp / dir1 directory tree
Find all files / directories under ' / data ' directory tree that are newer than ' ttt ' by modification time
Shows state of ' globstar ' shell option .
Numerically sort standard input by the second word of each line
Counts all files in a current folder and subfolders .
Copy all files unconditionally and directories in directory tree " myfiles " to " target-dir " preserving directory hierarchy and modification time
Search the current directory tree for files matching sed regular expression ' . * myfile [ 0-9 ] \ { 1,2 \ } '
Move all files / directories under current directory to ~ / play
Search the regular files from directory tree ' directory _ name ' for " word " and print the names of the matched files
Display the 5 largest files in the current directory and its sub-directories .
Removes all top-level empty folders within the current folder .
Find all files under $ sourcePath directory
Sort " file " using a buffer with a size 50 % of main memory
Change permissions of all directories residing under and below . / debian to 755
Search the regular files from directory tree ' directory _ name ' for " word " and print the names of the matched files
Prints long listing of content in a root folder , including hidden files , with human-readable sizes , and stores output to ' / root / test.out ' file .
Find all files / directories under ~ / documents with the word " ASCII "
find all the files in the current folder which have execute permission to all the users
Find files in the current directory excluding CVS , SVN , GIT repository files and all binary files .
Make directory " dir1 " and do not cause an error if it exists
See what files are executable by the file ' s owner and group
Save the UTC date represented by time string $ sting2 as the seconds since epoch to variable ' FinalDate '
find all regular files 1 level down the $ dir directory
Enables shell option ' cmdhist ' .
Read a line from standard input and save response in variable " VARNAME "
Find files in entire file system that are writable by group or other
Archive " foo / bar / baz.c " to " / some / path " on host " server " as a remote host
Move all files and directories in the current directory to " somewhere / "
Search the regular files from directory tree ' directory _ name ' for " word " and print the names of the matched files
Search the current directory recursively for files last modified within the past 24 hours ignoring .swp files and paths . / es * and . / en *
Find all files in / dir1 and print only the filenames ( not paths )
display all the regular / normal files in the entire file system
Print either " one " or " two " randomly three times
display all the files ending with " .user " in / var / adm / logs / morelogs / and excluding all regular files
search for a word in all the files in the current directory
Search the system for files whose names begin with letters ' a ' , ' b ' , or ' c '
List all files with their modification time in entire file system that are newer than the file $ newerthan and older than the file $ olderthan in regards of modification time and sort them according to file modification time
Change the owner of " $ JBOSS _ CONSOLE _ LOG " to " $ JBOSS _ USER "
Recursively change the owner of all files in " testproject / " to " ftpuser "
find all the files in the current folder which end with " ext1 " or " ext2 " or " ext3 "
Search the system for files whose names begin with letters ' a ' , ' b ' , or ' c '
Print the path names of all files and directories in the current directory tree
Change the owner of " / etc / rtfgenjs-java " to " root "
find all the files in the folder " / mp3-collection " which are bigger than 10MB excluding those that start with the word Metallica
Type unique list of all directories contiaining each file named ' myfile ' under the / home directory
Remove all files in ~ / clang + llvm-3.3 / bin / and print ' basename / file / path ' for each file
Find files matching regular expression regexp
Print the first 10 files or directories found in the / tmp directory tree by ' find '
Decompress " path / to / test / file.gz " to standard output and save all lines matching " my regex " to files with a 1000000 line limit
Remove adjascent duplicate lines from file ' input ' comparing all but last space-separated fields
create a symbolic link named " / usr / lib / jvm / default-java " to file " / usr / lib / jvm / java-7-oracle "
Find the directories whose pathnames contain " New Parts " at level 3 of the current directory tree and create symlinks to them in / cygdrive / c / Views
delete all the files in the current folder which do not belong to any user
Remove each unique item listed on standard input and do nothing if empty
Find all files / directories named ' file _ name ' under current directory tree
Find files / directories under current directory that are newer than the file / tmp / t1 and exist the modification time
Decompress ' file.gz '
Delete files under $ LOCATION that match $ REQUIRED _ FILES in their names and were modified more than 360 minutes ago
Remove each unique item listed on standard input and do nothing if empty
Find all files under / path / to / dir that were modified less than 7 days ago and show only first several lines of output
Compare " file1 " and " file2 " line by line with 3 lines of unified context
Recursively copy " $ NAME " to " $ { USER } " , using ssh to localhost , connecting as ssh user matching current user .
Print the ControlPath of the current directory that were last modified more than 7 days ago
Removes all files like ' * .bak ' in a current folder , and prints messages about what is being done .
Search the current directory tree for regular files whose names end in " .shtml " or " .css "
Print the MD5 message digest of " / path / to / destination / file "
Print the list of files in the current directory tree with " xx " preceding and following each filename
Find all $ 1 files / directories under current directory and enter into the parent directory of the first one found
Find all broken symlinks under / path / to / search directory
Create a symolic link in " / usr / local / " to " / Applications / Sublime \ Text.app / Contents / SharedSupport / bin / subl "
Change permissions to 644 for all files showing the respective chmod command
Find all files / directories under / path directory that were modified more than 30 minutes ago
Find the directories whose pathnames contain " New Parts " at level 3 of the current directory tree and create symlinks to them in / cygdrive / c / Views
Move all files and directories in the current directory to " somewhere / "
Read a line from standard input into variable " message " with prompt " Please Enter a Message : " followed by a newline
Split " complete.out " into files with at most " $ lines _ per _ file " lines each
Print file size and user name with color support for each file in the current directory tree
Filters unique lines by matching against the first column of a .csv file
Archive the list of 1st level subdirectories in / fss / fin to / fss / fi / outfile.tar.gz
Archive " / path / to / files / source " to " user @ remoteip : / path / to / files / destination " via ssh on port 2121
Print the list of regular files in the current directory and all subdirectories
Create a symolic link in " / usr / local / " to " / Applications / Sublime \ Text.app / Contents / SharedSupport / bin / subl "
Search for files / directories with the case insensitive pattern anaconda . * in var / log directory and create an archive ( file.tar ) of the last file found
Search PATH for utilities called " rename " , display the type of file ( script , executable , ... ) for each match found .
display a long listing of all the xls or csv files in the entire file system
display a long listing of all the files in the current folder in sorted order , which are bigger than 10KB
display all the files ending with " .user " in / var / adm / logs / morelogs / and excluding all regular files
Print all lines from file ' report.txt ' containing any-cased ' error ' pattern
Find all files / directories under current directory that match the case insensitive regex . / \ ( RT \ | ED \ ) . * and show several lines of output from the beginning
Find files / directories in entire file system that are owned by the user ' wnj ' or are newer than ' ttt '
Print the list of regular files in the current directory and all subdirectories
search for all the regular / normal files in the / etc folder which have been modified in the last 24 hours
Archive " / path / to / files " to " / path " on host " user @ targethost " with elevated permission on the remote host
find all the " .c " files in the folder " / home / david " which have been accessed in the last 48 hours
Removes resursively all files and folders named " Thumbs.db " , ignoring case distincts .
Archive files ( not directories ) in " sorce _ dir " to " target _ dir "
Print the list of regular files in the current directory and all subdirectories
Save the first " " . separated field of the system host name to variable " HOSTZ "
Recursively search for all files with names ending with " _ test.rb " , renaming them to end with " _ spec.rb " .
Compress all files in the " $ LOGDIR " directory tree that have not been modified in the last 90 days and deletes them
Find all IP addresses in / etc directory files
Find all files under $ { searchpath } that match the regex $ { string1 } . * $ { string2 } . * $ { string3 } in their contents where $ { string1 } etc .. will be expanded
Saves list of logged in users in system together with ' USER ' header in the ' a ' variable .
Move " caniwrite " without clobbering into " / usr / local / bin "
searches through the root filesystem ( " / " ) for the file named Chapter1 , and prints the location
Archive " / path / to / files " to " / path " on host " user @ targethost " with elevated permission on the remote host
Print content of ' a ' file , showing all non-printing characters and displaying $ at the end of each line .
Find all files under $ source _ dir that match the regex expanded by $ input _ file _ type in their paths
Locate all files named ' restore.php ' in the current directory and 3 levels below
Archive " / path / to / files " to " / path " on host " user @ targethost " with elevated permission on the remote host
Search the current directory tree for all files matching either pattern " * .rb " or pattern " * .py "
Search PATH for utilities called " rename " , display the type of file ( script , executable , ... ) for each match found .
Move all files from the ' sourceDir ' directory tree to the ' destDir ' directory
display all the files in the folder / etc / srv excluding those that are present in the path of . / srv / tftp / pxelinux.cfg * and / etc / mtab
Remove duplicate phrases and keep the original order of lines in " $ infile "
Print a sorted list of unique directory paths in entire file system that match the pattern ' < name _ pattern > ' in their names
Print the current working directory with resolved symbolic links
Archive " / path / to / files / source " to " user @ remoteip : / path / to / files / destination " via ssh on port 2121
Move all * .emlx files / directories under / path / to / folders / to . / Messages / directory
Print a list of all the files in entire file system whose inode has been modified no later than one minute ago
Perform a dry run to recursively copy " test / a " to " test / dest " excluding " test / a / b / c / d "
Move all * .emlx files / directories under / path / to / folders / to . / Messages / directory
Searches the manual pages with descriptions in section 3 , that name begins with lowercase letter .
find all the files in the entire file system that have been changed exactly 60 days and display ten files
Change directory to the " lib " directory located two parent directories above the path to command " perl "
Find files / directories that does not have write permssion for group and others
Decompress " path / to / test / file.gz " to standard output and save all lines matching " my regex " to files with a 1000000 line limit
Find all files under $ { searchpath } that match the regex $ { string1 } . * $ { string2 } . * $ { string3 } in their contents where $ { string1 } etc .. will be expanded
Archive " / path / to / files / source " to " user @ remoteip : / path / to / files / destination " via ssh on port 2121
Decompress " path / to / test / file.gz " to standard output and save all lines matching " my regex " to files with a 1000000 line limit
Print " deb http : / / ppa.launchpad.net / webupd8team / java / ubuntu precise main " and append to file " / etc / apt / sources.list "
ssh into default vagrant host without running " vagrant ssh " by passing the configuration parameters vagrant uses for ssh
Find all directories under / path / to / folders / * and set directory permission to 755 and file permission to 700
Archive " / media / 10001 / music / " on host " server " to local directory " / media / incoming / music / " and skip files that are newer in the destination , delete any files in the destination not in the source , and compress data during transmission
Print a count of all unique lines in " ports.txt " sorted from most frequent to least frequent
