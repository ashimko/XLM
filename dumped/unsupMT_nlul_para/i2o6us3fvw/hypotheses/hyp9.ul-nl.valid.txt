find all the php files in the current folder
change the ownership of all regular / normal files in the current directory
Remove all files from the current directory tree whose names contain whitespaces
Print file information of command " studio "
Find all files owned by group ' root '
Find files / directories with readable permission
Make directory " mywebsite "
Copy all .mp3 files under the current directory to / tmp / MusicFiles /
find all the files ending with " .jpg " in current folder and move them to temp folder
Find files larger than 100MB in / var / www and exclude files with / download / in their path from the
Print ' whoami ' for the file command
find all text files in the current directory
Find all files / directories named $ something under current directory
Find all links to path / to / file
find for a filename with multiple patterns in the current folder
Find all files / directories under current directory tree
Find all directories named ' mydir ' under ' local ' and ' / tmp ' directory tree
find all the file in the current directory
Find all regular files starting from / that have been modified in the last 24 hours
Write " ' echo pwd ' " to standard output and to file " / etc / apt / sources
Read the history file and append the contents to the history list
Set permissions for directories in ' foldername ' and its subdirectories to 755
Find all the .c files under current directory
Replace spaces with underscores in the names of all files and directories in the " / tmp " directory
Find all * .txt files / directories under your home directory
Find all * .gz files / directories under asia and emea directory
get the count of all the files that have been accessed in the last 30 days
Compress " hello world " and save to variable " hey "
Find all files matching pattern ' . # * ' in the current directory tree
Find all files under $ target _ directory
dsisplay all files inthe current folder
Add group write permission to all files in the current directory
Find all * .gz files / directories under current directory
Find all .java files starting from the current folder
Find all files / directories named ' articles.jpg ' under ' images ' directory tree
Print the current directory tree
run ls command on * .pl files
Find all 777 permission files and use chmod command to set permissions to 644
Set permissions to 660 for all regular files in the current directory tree
Set permissions to 660 for all regular files in the current directory tree
Delete all directories in the / myDir directory tree
find all the files that have been modified today
Find all directories named " D " in the current directory tree
Find all files / directories under current directory and sort them
Replace all spaces with underscores in directory paths under current directory .
Find the passwd file under root and one level down .
Copy all * .mp3 files under the current directory to / tmp / MusicFiles /
Represent the current time as seconds since epoch and save it to variable ' TODAY
Update timestamps of all files ( not directories ) under current directory .
Show the list of files larger than 100 MB
delete all the dir files in the temp folder which have not been modified in the last 24 hours
Verbosely change ownership of " $ file " to " root "
find all regular / normal files in the current folder
display all directories in a folder
Remount the root file system with read and write permission
Find all * shp * files / directories under current directory
Search only for directories named ' D '
find all directories in the current folder and do not search in sub directories
Search the current directory tree for files modified less than 5 days ago
Find all executables under current directory
Calculate md5 sum of file $ { my _ iso _ file } and save it to variable ' md
Removes empty folder ' edi ' and ' edw ' .
display the base name ( name without extension ) of all the " .flac " files in the current folder
Sort the lines of the file ' filename ' ignoring the last N lines
Represent the current time as seconds since epoch and save it to variable ' TODAY '
Print the list of files in directory / tmp / a1 recursively
Print the date formatted with " % a % x % X " followed by the host name
Print command history
Find all regular files 1 level down the $ dir directory
Rename recursively all files in the current directory tree
Find all directories in the current directory tree whose names end with the suffix " .keep. $ 1 " , where $ 1 is
find all the photoA.jpg files in the current directory
Find all files in your home directory and below that are larger than 100M .
display all the files in the current folder which have been modified in the last 60 minutes
Copy all files with ' .png ' ( case insensitive ) extension under ' / home / mine ' directory tree to ' / home / mine
Represent the current time as seconds since epoch and save it to variable ' TODAY '
Find all files / directories named ' script.sh ' under current directory tree
List all regular files in entire file system that were modified 60 minutes ago
Find all files and directories under current directory
Recursively copy directories " A " and " D " to directory " / path / to / target / directory " on host " anotherhost "
find all files that do not have read permission to all
Find all * .txt and * .json files in current directory
Rename file file.txt.123456 to file.txt
Find all * .data files under jcho directory
Search in current directory downwards all files whose size is 10 blocks .
Find all files / directories with ' .tex ' extension under $ DIR directory tree
Find all files that are set group ID to staff
find all " .flac " files in current folder starting with " cmn- "
Find all files / directories named ' foo ' under current directory tree
find all the gradns files in the entire file system
Print the list of files in directory / tmp / a1 recursively
Print ' file ' content , formatting output as 29-symbol wide column , regarding space symbol
Show the list of files larger than 100 MB
Show who is logged on
Print last day of April , 2009
Search history for " part _ of _ the _ command _ i _ still _ remember _ here "
Find all files / directories with ' .what _ to _ find ' extension under current directory tree
Find all files / directories named ' python ' in the entire filesystem
Find all * .txt files under current directory and print their timestamps and paths
find all the directories in the current directory which dont have the execute permission .
Find all files and directories on the system whose name is ' filedir '
display all files ending with " ini " in current folder
Find files with group write permission and remove the permission
Search the home directory tree for files modified less than a day ago
Find all files / directories with inode number 117672808 under current directory tree
find all the normal / regular files in the current folder which are empty
List all regular files in the current directory tree that were modified less than 60 minutes ago
find all the text files in the current folder and do not search in somedir , bin directories
Disables shell option ' nullglob ' .
Find all directories under current directory and change their permission to 775
find all the cpp files in the current folder
Find the largest 10 files ( regular files ) under current directory
display all the files in current folder which have been accessed in the last 15 days
find all the files in the home folder that have been modified in the last 24 hours
find all the files in the entire file system that start with top
Find files / directories with exactly read , write and execute permission for all ( owner , group and others ) under / path
Search the current directory and directories below for .sql files
create directory dirname with permissions 777
Find regular files modified within the last 7 days
Save the directory of the full path to the current script in variable " dir "
Move all * .data files / directories in $ S directory to $ S / data / directory
find all the files that have been modified in the last 24 hours
List all regular files in entire file system
Set variable ' rav ' to the contents of ' var ' spelled backwards .
Set variable BZIP2 _ CMD to the full path of command " bzip2 "
show all the " .acc " files in the folder / home
find files which have all permissions to all the users in the current directory
delete all the files in the current folder
List all regular files in the current directory tree
Print all the file / directory paths under current directory
Create intermediate directories as required
find file which case-insensitive name is too in currect directory
Find files / directories that have no owner or group under / path
copy the file header.shtml to those dirs
Find all directories under current directory having DIRNAME in their name
find all the files in the / usr folder which have read permission to all the users
Find all files owned by user ' tom '
Find files with group write permission and remove the permission
Find all regular files under / var / www and below that have changed in the last 10 minutes
Find all files starting from / whose names end with " .rpm " and change their permissions to 755
Show logged in users with idle time of each one
Print the full path of command " cc "
Clean the current directory from all subversion directories recursively
Show the list of files modified less than a minute ago
Print all string from file ' file2.txt ' matching pattern in file ' file1.txt '
Read standard input until a null character is found and save the result in variable " line "
Remove all * .pyc files under current directory
Remove all libEGL * files from the current directory tree
Find all files / directories under / ftp / usr / share / doc
Read one character from standard input into variable " REPLY "
Fix files to default permissions 644
Delete all empty directories in minimum 2 levels down the root directory
Print what year it was 222 days ago
Find all the files that were modified more than one day ago
Find files / directories that are bigger than 10000 KB in size uder ' / usr / local ' directory tree
Print the current directory tree with file sizes
Print the list of regular files from the current directory that were last modified on November , 22
Find all files under $ parent _ directory
Find files / directories with exactly read , write and execute permission for all ( owner , group and others ) under / path
Find all directories with permissions 777 under and below / home / user / demo /
Find all files / directories with execute permission by group or others
find all the files that have been modified in the last 3 days ( considers day starting not 24 hours )
count all the regular files that are present in a directory
Search in current directory downwards all files whose size is 10 blocks .
List all * .py files / directories under current directory
display all the files in the current folder which are bigger than 1KB
Copy " file0001.txt " to " 1.txt " and output the result to " newdir "
Print conf and common lines of all files in entire file system that are newer than / tmp / before
Search all regular files whose names contain " @ " in directory tree ~ / $ folder
display all the files in the folder / home which have the permissions 777
Find all 1.txt , 2.txt and 3.txt files under current directory and change the permission to 444
Search the current directory recursively for regular files last changed more than 2 days ago
Split " / etc / gconf / schemas / gnome-terminal.schemas " into 1000000 files of
Find all files / directories named ' document ' in the current directory tree
Change permissions to 500 for all directories in the current directory tree
Find files with name ' photo * .jpg ' under current directory
Find all files / directories that were accessed after February 1st under current directory
Find all files on the system that are larger than 600 MB
Update timestamps of all files ( not directories ) under current directory .
Print the sorted unique column of usernames of users who are currently logged in without the header
Find all files / directories under current directory tree with inode number 211028 and move them to ' newname.dir '
Kill the processes of user ' myuser ' that have been working more than 7 days
Find all regular files under $ path
Search the current directory tree for regular files omitting directory ' omit-directory '
Search the regular files of the current directory tree for string " foo "
Find all SUID files .
Find all directories under maximum 1 level down the current directory and set their permission to 700 recursively
Merge already sorted files " file * .txt " and split the result into files of at most 100000 lines each with a prefix
find all the php files in the current folder ( discards any directory which has an extension of " .php " )
Recursively copy " original _ dir " to " copy _ dir " preserving file / dir timestamps , displaying progress
Find all files / directories under current directory tree with inode number 211028 and move them to ' newname.dir '
display all the files in current folder which have been accessed in the last 15 days
Print file information of command " studio "
Set variable ' file ' to the base name of first argument to script or function , that is the part following the last sla
find all files which name contain ' foo ' and path is not dir1 or dir2
Find all files in the / home / directory tree that were last modified less than 7 days ago
Compress all files under current directory tree with gzip
Find all regular files in the / path / to / base / dir tree
find all the files in the entire file system that have been accessed exactly 50 days ago
Find files larger than 50k
Find all * .ini files
Find files / directories in entire file system newer than myfile
Find files / directories in entire file system newer than myfile
Print the list of files changed within the last minute
Read a line from standard input into variable " dir "
Search for files / directories which have read and write permission for their owner , and group and only read permission for others
Remove all * .pyc files under current directory
search for files in current folder using regular expressions
Rename file file.txt.123456 to file.txt
Find all the files that were modified more than one day ago
Find all files that contain the case insensitive regex ' stringtofind ' in maximum 1 level down the / directory without descending into other partiti
display all the files in current folder which have been accessed in the last 15 days
Find all files / directories under current directory tree whose paths start with ' . / sr ' and end with ' sc '
Find all directories with permissions 777 under and below / var / www / html , and change their permissions to 755
Find all directories under / home / me / target / path
Find all regular files under $ DIR directory tree whose paths match the regex " . * \ . $ { TYPES _ RE } " where $ { TYPE
Find all files / directories under ' / usr / local ' directory tree that were modified within the last day
Find all files / directories named orm.properties under / eserver6 directory
Find all files / directories with execute permission by group or others
Remove all TXT files in the current directory with confirmation
Remove all core dump files from user ' s home directory
display all the files in the entire file system which have set uid bit set .
Search the current directory recursively for files whose size is between 10 and 50 MB
Report file system inodes usage in human readable format
searches through the / usr / local directory for files that end with the extension .html
Delete all files / directories in entire file system
Search directory tree / srv / $ { x } for regular files accessed at least 10080 minutes ago , and remove those files
Search the " test1 " directory recursively for regular files
find all files and directories under the current directory and display the inode of each one , using printf
Print the current date in ' % H : % M : % S ' format followed by the string ' : done waiting. both jobs terminated on their own
Prints path location of $ BASH _ SOURCE file .
Load keybindings from a file ~ / .inputrc
Recursively finds all files and prints all strings with ' text-to-find-here ' from that files , preceding matched string with filename .
find all text files in the current directory and display them page wise
Find all * 1234.56789 * files / directories under current directory
display the contents of all the text files in the current directory
Find all files owned by group ' seamstress ' in the current directory tree
Find all * .wav files under current directory
Find all files in the ' sourceDir ' directory tree
Sort file1 and file2 then display differences between them .
List all files and directories from the current directory tree
find all regular files exclude .o and exclude * .swp and output line number of soc _ attach if it has
Compress every file in the current directory tree that matches " * cache.html " and keep the original file
Search the files from the current directory tree for " chrome "
Search the current directory recursively for regular files last changed more than 2 days ago
Prepend date to ping output to google.com
Find all files with 600 permission and change the permission to 664
change the owner and group of all the normal / regular files in the current folder and / home / admin / data / to admin & admin
Delete all files in the / myDir directory tree that were last modfied more than 7 days ago
Delete all files in the / myDir directory tree that were last modfied more than 7 days ago
Convert " abc " to a string of hexadecimal bytes
find all the files in the entire file system that were accessed in the last 1 day ago
find all the directories with the name " DIRNAME " in the current folder and force delete them
Find all files / directories under ' / home / mywebsite ' directory tree
Find files in the current directory tree whose size is greater than 24000 bytes
List level 2 subdirectories of the current directory
Update timestamps of all files ( not directories ) under current directory .
display all files in current folder excluding current folder ( . )
Delete all .pyc files in the current directory tree
Delete all .pyc files in the current directory tree
Change permissions of all directories from the current directory tree to 644
Search the current directory tree for regular files whose names end in " .shtml " or " .css "
Find all .java files whose name contains " Message "
Search the regular files of the current directory tree for string " foo "
Find all directories in the / var / tmp directory tree
Find all files larger than 20000k
download contents from " https : / / raw.github.com / creationix / nvm / ma
Read a line from standard input into variable " REPLY " with prompt " > $ line ( Press Enter to continue ) "
Print full path of command " c + + "
find out what group a given user has
Create a symbolic link named " .bash _ profile " to " .bashrc "
find all files in the current directory excluding those that end with .js or have the words .min or console in their name
find all the directories in the current folder excluding search in the sub directories and create these directories in another path
Find all files / directories that were accessed after February 1st under current directory
Find files / directories named ' file.txt ' in the path ' / usr / lib / important / '
Find files / directories that are owned by the user ' syslog ' in entire filesystem
search for the word " search-pattern " in all the regular / normal files in the current folder and display the matched file name
display all the files in the current directory excluding those that are in the ' secret ' directory
Copy " $ 1 " to " $ 2 " in directory " $ 1 " into files of at most " $ 2 " in the current directory tree
Sort the contents of file " ips.txt " , eliminate duplicate entries , and prefix each entry with number of
Compress all " .txt " files in the current directory tree with gzip
Save the MD5 records of all files under " / path / to / dir "
get all the files that are exactly 30 days old
Find all .zip files in the current directory tree
Find all files under current directory excluding hidden files
Add a line number to every line in " infile "
find all files under the / etc directory that were modified an hour ago
find all the files ending with " rb " and display the first 10000 lines from these files .
find all the files in the folder / opt which have been accessed exactly 20 days ago
display all files in the file system which are bigger than 50MB and having size " filename " in them
Find a directory named ' project.images ' in the entire filesystem and show it in long listing format
Search the current directory tree for symbolic links to files matching pattern ' * test * '
Delete files in the entire file system with the permissions 777
Delete all .pyc files in the current directory tree
prevents curl from returning error ( 23 ) Failed writing body when grepping for foo
Find all files under current directory excluding hidden files
display all the normal / regular files in the current folder and do not go beyond 3 levels
Search the current directory tree for files and directories whose names begin with " pro "
find all files newer than findme.txt
display all the files in the folder " $ ORIG _ DIR "
Find files / directories under ' / usr ' directory tree that are newer than / tmp / stamp $ $ by modification time
Find all regular files under $ FOLDER directory tree that were modified more than 7 days ago
Search the current directory recursively for files whose size is between 10 and 50 MB
Change the owner to " user " and group to " group " of files " file " ...
Rename absolute path of symbolic link " dirln " to " dir2 "
Find all .dbf files / directories under current directory
Search the current directory tree for .bash files ignoring the " . / vendor " subdirectory
Recursively finds all * .txt files and prints strings with " text _ pattern " ignoring text distincts .
Change permissions to 775 for all directories under / var / www / html , and change their permissions to 775
Find all .zip files that are larger than 100M found anywhere in the file system and delete those files .
Delete all hidden files under $ some _ directory
Create a symbolic link named " .bash _ profile " to " .bashrc "
find all ' * .c ' files under $ HOME directory which context contains sprintf
Find all directories under ' test ' directory tree that match the regex ' . * / course [ 0-9 . ] * ' in their paths
Find files newer than / etc / motd and / etc / passwd in the file system
find all the directories in the current folder and create the same directory structure in a remote machine using ssh
Compress all * .img files using bzip2
Filters only directories from long file listing of the current directory
Remove all vmware- * .log files under current directory
Recursively finds all files newer than a date
Find all files named ' foo ' in the current directory tree , not descending into " FOLDER1 " directories
delete all the files in the current folder which do not belong to any user
Delete all files in the / myDir directory tree that were last modfied more than 7 days ago
Find all * .bak files under / working
Search all * .c files from the current directory tree for " hogehoge "
Find files / directories that isn ' t owned by the user ' apache ' under / var / www
Find files / directories that isn ' t owned by the user ' apache ' under / var / www
find regular files in the " mail " folder under the user ' s home directory , displaying filenames and lines that contain the text " Linux "
display all the files in the current folder which have been modified in the last 2 days
Find all symbolic links under ' / proc / $ pid / fd ' directory tree with name pattern ' $ save _ path / sess _ \ * ' and update their timestamps
Save the user name of the current user to variable " x "
Remove all files named ' new ' under current directory tree
Remove all files named ' new ' under current directory tree
Print the current default full path of the " java " executable
Print absolute path of " YOUR _ PATH "
Set permissions to 644 for every subdirectory of the current directory
Change permissions to 644 for all regular files under the / path / to / dir / tree unless these permissions are already set
display all the files in current folder which have been modified in the last 15 days
Find all files in the current directory tree whose path names match pattern ' . / sr * sc '
display all the directories in the current folder excluding those that are present in the aa directory tree
Find all the files whose name is tecmint.txt and contains both capital and small letters in / home directory
Find files in the / var / log folder which were modified between 60 minutes and 10 minutes ago
Remove files under / mnt / zip matching " * prets copy " with confirmation
Find all * . $ input _ file _ type files / directories under $ source _ dir with the null character as the delimiter
Search the current directory tree for .m4a files
Find all files under current directory without descending into .snapshot directory that were modified in last 24 hours with null character as the delimiter
Print lines 10000 to 10010 from input " seq 1 100000 "
Delete all hidden files under $ some _ directory
Removes all files from current folder but 5 newest ones .
Print the path composed of the current working directory and the directory containing " $ 0 "
Remove all files from the system whose path names contain " GUI "
Print 1000 astarisk ( ' * ' )
Archive " / usr / local / " to " / BackUp / usr / local / " on host " XXX.XXX.XXX.XXX " via ssh and show progress
Replace all ' ' with ' - ' from standard input
find the oldest normal file in the entire file system
Find all the files under / etc directory which are larger than 10MB and delete them
Find files that are orphaned
Search the current directory recursively for * .txt files with lines that match regular expression " ^ string "
Find all files / directories under / var / log directory
Print what year it was 222 days ago
Find all files / directories under current directory and print their paths
Remove all vmware- * .log files under current directory
Print the contents of " filename "
Find all files / directories under current directory tree that are newer than backup.tar.gz by modification time
Search for all files named foo , FOO , or any other combination of uppercase and lowercase characters beneath the current directory .
Recursively copy " original _ dir " to " copy _ dir " preserving file / dir timestamps , displaying progress , and skipping files which match in size , keeps partially tran
Shows MAC address of network interface eth0 .
display all the regular / normal files in the current folder that are not accessed in the last 10 minutes
Find all * .txt files that reside under and below / home / wsuNID /
Find all files / directories under ' / usr / include ' directory tree that have been modified within the last 2 days
Find any hidden regular files in the current directory and its sub-directories that were modified after .cshrc was last modified .
Find files named ' core ' in or below the directory / tmp and delete them
Search all files in the current directory tree whose names end in " 1 " for string " 1 "
Display all symlinks and their targets in the current directory
Print command history
Find all directories in the current directory tree that are not accessible by all
list all running jobs
Find all directories in the current directory tree that are not accessible by all
Show the list of files that are owned by user wnj or are newer than file ' ttt '
Read a line from standard input in an interactive shell with prompt in variable " myprompt " interpreted as PS1 is interpreted
Print all directories under $ root appending a : ( colon ) at the end of each path without descending into directories matching the pattern . [ a-z ] *
display all the files in the folder " / home / mywebsite " which have been changed in the last 7 * 24 horus
Compare " file1 " and " file2 " line by line with 3 lines of unified context
display a long listing of all the files in the current folder in sorted order , which are bigger than 10KB
Print common lines in files " set1 " and " set2 "
display all the normal / regular files in the current folder and do not go beyond 3 levels
Search the current directory and all subdirectories for files that have 777 permissions and the permissions to 755
Print the current date followed by ' doing stuff '
Find all symbolic links under $ some _ directory that are broken
Search the current directory tree for * .ogg files whose pathnames contain " Test _ SCCS "
Print the day 1 day ago
Saves real path of the folder containing the current script
Find all directories under maximum 1 level down the current directory and set their permission to 700 recursively
Count the number of files in the / usr / ports directory tree whose names begin with ' pkg-plist ' and which contain ' etc / rc.d / '
run " command " on server " host " as user " user "
Find all * .gif files under current directory and print their contents
Find all files / directories named ' document ' in the root filesystem partition
Display the 5 smallest files in the current directory and its sub-directories .
Remove all vmware- * .log files under current directory
Search history for " part _ of _ the _ command _ i _ still _ remember _ here "
Find all files under $ source _ dir that match the regex expanded by $ input _ file _ type in their paths
Search the regular files of the current directory tree for string " foo "
kill all background processes
Archive " / var / www / html / " to " / var / www / test " on host " 231.210.24.48 " as user " ubuntu " via ssh using identity file " /
Change the owner of " destination _ dir " to " user "
Find all files / directories under current directory tree whose names start with ' test ' followed by two digits and end with ' .txt ' extension
Find all files / directories under current directory tree that start with ' R ' and end with ' VER ' in their names and were modified more than 1 day ago
Find all files / directories under current directory that were accessed less than 1 day ago and move them to / path / to / target-dir
Search the / home / user directory tree for * .txt files
Search directory / Users / Me / Desktop / , / ' , ' . / Music / * ' , and ' . / Music / * ' , ' . / Music / ' , and ' / Music
Find all files under . / lib / app and sort them
Find all regular files that were modified more than 2 days ago under ' / path-to-directory ' directory tree , sort them according to timestamp and print the filenames preceded with the timestamps
Delete all files / directories with ' .pyc ' extension under current directory tree
Find files / directories named ' file.txt ' that belong to user ' tutonics ' in the entire filesystem
Find files owned by nonexistent groups
Split " file.txt " into files of at most 20 lines each with a prefix " new "
Copies all files under current directory like ' * FooBar * ' to the ' ~ / foo / bar ' directory .
Print the date followed by the host name
Find all * .gif files under current directory and print their contents
Find all * .NUM and * .txt files under current directory and show the first 10 of the parent directory of the first one found
Delete all directories under $ workspace _ ts directory ( nored ) that were modified more than 30 days ago
Find * .pl files / directories under / users / tom
Add a line number to every line in " infile "
Print content of ' a ' file , showing all non-printing characters including TAB characters , and displaying $ at the end of each line .
Search history for " part _ of _ the _ command _ i _ still _ remember _ here "
find all the files in the current folder which have been modified in the last one minute
Find all 400 permission files under / data directory , print ' Modifying ' appended with file path for each of them and change their permission to 755
Find all regular files under current directory tree without descending into ' . / dir1 ' ( except ' . / dir1 / subdir1 * ' pattern ) and ' . / dir2 ' directories
Changes to the directory where ' ssh ' executable is located .
Archive files ( not directories ) in " sorce _ dir " to " target _ dir "
Remove regular files changed more than 15 days ago from the / tmp directory tree
Find all files / directories under $ TARGET _ DIR directory tree matching the posix extended regular expression \ " . * / $ now . * \ " ( where $ now is a variable ) and save the output in file
Search the / dir directory tree for files whose names match regular expression ' . * 2015 . * \ ( album . * \ | picture . * \ ) '
Make directories " ~ / abs / lab4a / myfolder " , and " Labs / lab4a / myfolder "
Print lines of ' file ' reverted order , and reverted characterwise
Represent the current time as seconds since epoch and save it to variable ' TODAY '
Find all broken symlinks under current directory
search for a regular / normal file myfile in the folder " / home / weedly "
Find files with extension $ SEARCH in the current directory tree
Find all * .java files under current directory and archive them to myfile.tar
find all the files in the directory which is pointed by $ 1 variable ending with the name held in the variable $ 2 or having the extension of value saved in the argument $ 2 .
Print content of ' a ' file , showing all non-printing characters including TAB characters , and displaying $ at the end of each line .
Read a line from standard input into variable " REPLY " with prompt " > $ line ( Press Enter to continue ) "
Recursively finds all folders in a current folder that contain files like ' .git ' .
Search for ' some string ' in all * js files under current directory and show the matched lines with line numbers
Find & replace broken symbolic links
Make directories " ~ / abs / lab4a / myfolder " , and " Labs / lab4a / myfolder "
Perform a default cPanel configuration
Find all files / directories under $ TARGET _ DIR directory tree matching the posix extended regular expression \ " . * / $ now . * \ " ( where $ now is a variable ) and save the output in file $ FILE _
Find all files / directories that belong to the group ' accts ' under ' / apps ' directory tree
Save the absolute path of the directory of the current script to variable " DIR "
search for a files " cart1 " in the folder junk which is in home folder and move the folder to ~ / junk / A .
Print the 5th space separated fields in " file " as a comma separated list
Read a line from standard input into variable " message " with escaped prompt " \ nPlease Enter \ na Message : ' "
Search for all files with the same inode number 41525360
Find all files / directories under ' / home / user / ' directory tree whose status was changed exactly 10 minitues ago
Find all * .andnav files under current directory and archive them to $ FILE _ Linux
Add execute permission to all files ending in " .sh "
Recursively copy all files and directories in " demo " excluding " .git " to " demo _ bkp "
Find all files / directories under current directory with ' FooBar ' in their paths and copy them to ~ / foo / bar
Move all files and directories in the current directory to " somewhere / "
Find all files in the ' sourceDir ' directory tree
Print unique lines in sorted file " a.txt " compared to sorted file " b.txt "
Search the current directory tree for regular files changed on the 10th of September
Calculate md5 checksum of theDirname
Find regular files matching pattern " * oraenv * " and excecute the " file " utility for each of them
Save the system host name in variable " HOSTNAME "
Archive files ( not directories ) in " sorce _ dir " to " target _ dir "
Find all files larger than 20000k
Find all files under current directory that were modified in the last 24 hours and also include the files that were modified in less than 1 day ago
Find x * files / directories under / tmp directory whose status was changed less than 1 day ago
Find all regular files under $ DIR directory tree whose paths match the regex " . * \ . $ { TYPES _ RE } " where $ { TYPES _ RE } expands as a variable
display list of all the hidden regular / normal files in the directory " / dir / to / search / "
Find all regular files that contain ' linux ' ( case insensitive ) in their names under ' / root ' directory tree
Find all files / directories under / somefolder that were modified more than 60 minutes ago
Print $ d if $ d is an empty directory
Print $ d if $ d is an empty directory
Find all files / directories in entire file system that are owned by " shadow " group
Print only file names from / etc / group .
Prints path to folder that contains file " / path / to / vm.vmwarevm / vm.vmx " .
Save the CURRENT record for domain ' google.com ' in ' / home / user / myLogFile.com ' file
Find all the files that were modified yesterday in the current directory .
Search the file hierarchy for files larger than 100000 KB without searching any mounted removable media
Print only lines from ' file1.txt ' that not present in ' file2.txt ' and beginning with ' Q '
Search regular files under ~ / mail for string " Linux "
Move all files from the ' sourceDir ' directory tree to the ' destDir ' directory
Find regular non-hidden files containing ' some text ' in their names with hidden directories optimization
Search the current directory tree for .m4a files
Create symbolic links in the current directory for all files under " bar1 " that are not directories and do not end in " .cc "
Find files matching regular expression regexp
Make directory " / tmp / new " as needed without causing an error if it exists
Find all files in the ' sourceDir ' directory tree
Correct permissions for files in the web directory
find all the files that have been modified exactly yesterday ( from 00 : 00 to 23 : 59 yesterday )
Find all the files without permission 777 in the file system
Count the number of files in the / usr / ports directory tree whose names begin with ' pkg-plist ' and which contain ' etc / rc.d / '
Find and remove all .txt regular files under the current directory and below
Find any hidden regular files in the current directory and its sub-directories that were modified after .cshrc was last modified .
Delete all regular files that start with ' sess _ ' in their names , are at least 1 level deep and were modified more than $ gc _ maxlifetime minutes ago under $ save _ path directory tree
Find all files with the SUID bit set beginning with the root directory
display all the " .sh " files in the folder " / home / david " which have been modified in the last 48 hours
Find all xml files under current directory and archive them to .bz2 archives
Search the / usr / bin directory tree for regular files modified or created less than 10 days ago
Keep the last 4 ASCII characters ( bytes ) of a string .
Find all files / directories under current directory tree whose paths match the regex ' filename-regex . \ * \ .html '
Find all .txt files in current directory and rename with .html .
Find all files with the SUID bit set beginning with the root directory
Remove the files from the home directory tree that were last accessed more than 100 days ago , with confirmation
Find all files under $ dir directory whose size is greater than 24000 bytes
Find all files / directories under $ TARGET _ DIR directory tree matching the posix extended regular expression \ " . * / $ now . * \ " ( where $ now is a variable ) and save the output in file $ FILE _ LIS
Remove all files whose names end with " ~ " in the / home / peter directory tree
find all files in the file system which belong to the group users and having the word " filename " in their name .
Print out the full path name of " mypathname " with dots resolved
Read a line from standard input into variable " message " with escaped prompt " \ nPlease Enter \ na Message : ' "
find all the pdf files in the current folder
Move all files belongs to directory ' / path / to / folders / to / folders / * '
Search for $ SEARCH in all regular files under $ DIR directory tree and display the number of bytes of the matched output
Print the names and sizes of regular files residing in the " dir " directory tree
display all the files having spaces in the current folder
display a long listing of all the files in the current folder which are bigger than 10KB
Find all files in the current directory tree except .html , ignoring .svn directories
Compares two listings ' ls ' and ' ls * Music * ' , showing only strings that unique for first listing .
Sort file " file " by line
Find all files / directories under / path directory that have modified in the last 2 days and contain ' blah ' ( case insensitive ) in their names
Find regular files matching pattern " * oraenv * " and excecute the " file " utility for each of them
Find all files under current directory excluding hidden files
Go into the first directory whose name contains 1670
Delete all files under $ { S _ TO _ SAVE directory tree that were modified more than $ DAYS _ TO _ SAVE days ago
find all the files in the current folder which do not belong to any user
Delete all HTML files under tree ~ / Path /
Find all files / directories under $ TARGET _ DIR directory tree matching the posix extended regular expression \ " . * / $ now . * \ " ( where $ now is a variable ) and save the output in file $ FILE _ LIST
Find all * .jpg files under ~ / jsmith and change their permission to 640
Find all files / directories that belong to the group ' accts ' under ' / apps ' directory tree
Saves file sctipt.sh size in ' size ' variable .
Find all * .andnav ( case insensitive ) files / directories under current directory and rename them to replace all spaces with _
Find all * . * files under current directory and search for ' bar ' in those files
Mount " / tmp / loop.img " on " / mnt / image " as a loop back device
Find all files / directories under ' / usr / local ' containing ' blast ' ( case insensitive ) in their names
Find all files in the current directory tree whose size is greater than 1MB , and move them to the " files " folder with confirmation
Find all xml files under current directory and archive them to .bz2 archives
Make directory " dir " and do not cause an error if it exists
Search directory tree ' MyApp.app ' for directories whose name is ' Headers ' and delete them in an optimized way
Find all files / directories in directories / files taken from the glob pattern ' / tmp / test / * ' recursively that have not been modified from the start of the day
Change directory to the output of command ' ~ / marker.sh go " $ @ " '
Counts lines in each * .php file sorted by file path .
Make regular files from debian / fglrx-amdcccle / usr / lib / fglrx / bin / executable for all
Search for ' string-to-find ' in all files under current directory tree matching the regex ' filename-regex . \ * \ .html ' in their paths and show the matched lines along with the filenames
Archive " src " to " dst " updating files existing in " dst "
Compare files " A1 " and " A2 " with 3 lines of unified context and print lines beginning with " + "
Print the 5th space separated fields in " file " as a comma separated list
Archive " / path / to / files " to " user @ targethost : / path "
Find all directories under / home / mywebsite / public _ html / sites / all / modules and set their permission to 750
Find all CSS files ( and directories ending with " .css " ) under current directory
Change directory to the output of command ' ~ / marker.sh go " $ @ " '
Display a named character dump of " test.sh "
Wrap each line in " longline " to a maximum of 30 characters
find all the files in the current directory and sub-directories , that were edited within the last 1 hour and execute the list command with long listing format
Remove duplicate phrases and keep the original order of lines in " $ infile "
Find all .tmp files under and below the / tmp / directory and remove them
display all the files in the current folder which have not been modified in the last 7 days and which are not in the list " file.lst "
Suffix all files and folders in the current directory with " _ SUF "
Print the apparent size of all files under the current directory tree
find all the files in the file system that start with " win " and searched only in the mounted file systems
Remove duplicate phrases and keep the original order of lines in " $ infile "
Remove duplicate phrases and keep the original order of lines in " $ infile "
find all the sql files in the current folder except those that are present in the workspace folder and create a tarball of these files
find all the files in the entire file system that have been accessed in the last 60 days ago
Print only common strings in sorted content of files ' file1 ' and ' file2 '
Find all files / directories under / nas / projects / scripts / perl which have been modified in last 24 hours and which are modified yesterday
Delete all files under $ INTRANETDESTINATION / weekly directory tree that were modified more than 32 days ago
Save the absolute path of " $ path " to variable " fullpath "
Delete all files with ' .o ' extension in the entire filesystem
find all the files in the current folder which start with t and have been modified between one hour ( 60 minutes ) and 12 hours ( 720 minutes ) ago .
Find all files / directories with ' .log ' extension that belong to the group ' adm ' under ' / var / log ' directory tree
Save the first line of " $ j " into variable " k " in ksh
Find all regular files under $ FOLDER directory tree that start with ' " . ' and end with ' " ' in their names and were modified in less than $ RETENTION days excluding the files whose contents match one of the regular expressions defined per line in file $ SKIP _ FILE
Rename all files matching " access.log. < number > .gz " incrementing < number > .
Archive " / path / to / sfolder " to " name @ remote.server : / path / to / remote / dfolder " preserving hard links and compressing the data during transmission
Decompress " path / to / test / file.gz " to standard output and save all lines matching " my regex " to files with a 1000000 line limit
Print my _ tmp directory in ated content of the current directory as a comma separated value
Print a colon-separated list of all directories from the $ root directory tree
Compare " file1 " and " file2 " line by line with 3 lines of unified context
Read a line from standard input in an interactive shell with prompt in variable " myprompt " interpreted as PS1 is interpreted
Recursively change ownership of " ~ / .npm " to the current user
Delete all files with ' .o ' extension in the entire filesystem
Compare " fastcgi _ params " and " fastcgi.conf " line by line , output 3 lines of unified context , and print the C function the change is in
display a long list of all the jpg files in the home folder
Move all files / directories under / var / cache / * to / mnt / my / path
Find files in entire file system that are writable by group or other
Display human-readable file type description of ascii.txt
Recursively find files in the current directory with a modification time more than 7 days ago , save the filenames to " compressedP.list " , and compress no more than 10 at a time
Recursively copy " / path / to / data / myappdata / * .txt " to " user @ host : / remote / path / to / data / myappdata / "
display all the files in the current folder which do not belong to any user
Show system information : kernel name , hostname , kernel release and version , machine architecture , processor type , hardware platform , and operating system type .
Search for ' string-to-find ' in all files under current directory tree matching the regex ' filename-regex . \ * \ .html ' in their paths and show the matched lines along with the filenames
find all the regexp files in the current folder except those that are present in the workspace folder and create a tarball of these files
Removes all files like ' A * .pdf ' from current folder without prompting .
Find all files / directories named ' findcommandexamples.txt ' ( case insensitive ) in the entire filesystem
display all the files ending with " .user " or beginning with " admin " or ending with " .user.gz " in / var / adm / logs / morelogs / and excluding all regular files
Find all files / directories under current directory [ опция _ поиска ] that match the pattern ' . * [ a-z ] * '
Remove all files matching the pattern * .bak and * .backup files that were modified more than 5 days ago
Find all files under test directory that were modified more than 1 day ago excluding hidden files and put the output to full _ backup _ dir variable
Read a single character from standard input into variable " REPLY " ignoring backslash escapes and using the prompt " $ { 1 : -Continue ? } [ y / n ] : "
Print common lines of files " file1 " , " file2 " , " file3 " , and " file4 "
Find all files / directories under / home / mywebsite / public _ html / that were modified less than 60 minutes ago excluding * .log files / directories
Strips two last sections from the path $ pathname , and prints basename of the rest part .
Decompress " path / to / test / file.gz " to standard output and save all lines matching " my regex " to files with a 1000000 line limit
Find all files with space in their names under current directory and rename them by replacing all spaces with _
