Make directory " dir1 "
Make directory " / tmp / foo "
Recursively print all directories in the current directory tree
Find files owned by nonexistent groups
Find files that are empty
remove all core files in the file system
find all pdf files in the current folder
find all text files in the current directory
Make directory " / tmp / foo "
Print the current date
display all the directories in the current folder
find all the files that have been modified today
display all the files in the entire file system which have set uid bit set .
Counts lines in each * .php file .
find all files without 777 permision
display all directories with the name test in a directory
Find all files named " filename " in the current directory tree , not descending into " FOLDER1 "
Find all files on the system that are larger than 600 MB
Print command history
Find all 775 files with permissions 777
Compress every file in the current directory tree
Find directory " your / dir " if it is empty
Remove all symlinks from the current directory tree
unsafed rm all file which name start with ' # '
delete all the regular files in the current folder
Find all files / directories with ' .js ' extension under current directory tree
Find all .java files under current directory
Find all .java files under current directory
Find all SGID files in the current directory tree
find all the files that have been modified in the last 24 hours
Find files / directories with readable permission
Find all files named ' filename ' in the entire filesystem
Find file ' hosts '
Find all symbolic links in the current directory tree
Print file type of the executable file of command " file "
Delete history entry at offset , defined in first argument of executed script
Print only digits in variable " $ name "
Set 644 permission to all regular files under current directory
Print the file system " file / goes / here " is on
Find all regular files in the current directory tree and search them for " example "
Find all regular files starting from level 3 of directory tree ~ / container and move them one level up
Find all files , folders , symlinks , etc in the current directory recursively
Find all symbolic links under " / proc / $ pid / fd "
Find all .sh files in the current directory tree and remove them
Find all .java files starting from the current folder
Search the current directory tree for directories
Find all the files which are accessed in last 1 hour
Find files / directories in entire file system newer than myfile
find the number of lines in all the regular files in the current folder
Find all regular files under $ { S } directory tree
display all the files in the current folder
Find all the files whose name is tecmint.txt
display all the files in the folder " / dir / to / search / " which are empty
searches through the / usr directory for the regular file named ' Chapter1 * '
Find all files under images directory
Set 644 permission to all regular files under current directory
Save the date 222 days before today to the variable ' date _ 222days _ before _ To
Print file type information of the " java " executable
Find all directories with permissions 777 under and below / var / www / html , and change their permissions to 755
Delete all directories in the current directory tree
find all files in current folder which are exactly 300MB
Find all files that are modified in last 3 days
Find all files / directories under .. directory and print their paths
Write " Australia / Adelaide " to standard output and to " / etc / timez
Delete history entry at offset , defined in first argument of executed script
Delete history entry at offset , defined in first argument of executed script
Search the current directory tree for files whose name is " .note " , case insensitive
Print the file system " file / goes / here " is on
Show all files that have not been accessed in the $ HOME directory for 30 days or more
Copies all * .mp3 files under the current directory
Print first word of lines unique for ' file1 ' file
Move " $ file " to " $ file "
search all the " .sh " files in the / usr folder
Find all files under images directory
Find all files that are readable
Find all .php files in the / home / www directory tree
Find out all hard links in the / home directory to file1
Find all * .log files under current directory and print their timestamps and paths
Find all * .jpg files in the current directory and below .
Find all regular files that reside in the current directory tree and were last modified at least 1 day ago
Search directory trees / tmp and / var / tmp for " testfile.txt "
Search for files whose name is " filename " and whose permissions are 777
Take the last slash-separated section of variable " FILE " and copy it to variable " NAME " .
Print the number of lines in file.txt .
search all the " .sh " files in the / usr folder
Find all files / directories with ' .bar ' extension in maximum 2 levels down the current directory
display all the files in the current folder which have the permissions 777 and which have been modified in the last 24 hours .
find all the regular / normal files in the current folder
display the number of lines in all the " .c " files in the current folder
Find all files in the current directory tree whose names are " .DS _ STORE "
Find files modified in last 7 days
Find all the files which are modified in last 1 hour
Show the list of files larger than 100 MB
Find files / directories named ' filename.txt ' under ' / usr ' and remove them
Delete all files / directories under current directory
Find all * .jpg files under current directory and print only unique names
Find all * .code files under current directory
Print the current directory
Print the current directory tree
Rename all files in current directory whose name starts with ' F0000 ' , trimming a zero from any sequence
Save all directories under the current directory as a comma separated list in variable " FOLDERS "
Find directory " your / dir " if it is empty
Find blabla * files under current directory
Find all the files which were modified 50 days ago
display all the symbolic links in the current folder
Search for files whose name is " filename " and whose permissions are 777
Find all * .tif files / directories under current directory
Find all filename.txt files / directories under / home
Find all files / directories with name pattern $ nombre that are at most 2 levels down the $ DIR _ TEMPORA
Save the canonical path of " $ dir / $ file " in variable " path "
Save the canonical path of " $ dir / $ file " in variable " path "
Change owner of " folder " to " user _ name "
Find all files / directories under current directory matching the case insensitive pattern ' pattern '
Find all directories named ' vimrc ' in the entire filesystem
Find all files / directories under " / tmp " directory tree that contain the string literal ' $ 0 ' in their names
Find all empty files in the current directory and delete them
Find all .rpm files / directories under current directory
list all files / folders in current directory
find all the regular / normal files in the current folder which belong to the group " flossblog "
find all the photoA.jpg files in the entire file system
Delete all .svn files / directories under current directory
Delete all .svn files / directories under current directory
Find all files larger than 100M and delete them
Recursively change the owner and group of all files in " public _ html " to " owner "
Remount the root file system with read and write permission
Remount " extX " filesystem " / dev / hdaX " on " / " without writing in " / etc / mtab
find all the files in the current folder which do not belong to any user
Delete all files / directories named test under maximum 2 level down the current directory
Search the directories given as arguments to the Bash script for files whose name is not " ss "
split file t.txt into pieces per 30000000 lines named as " t.NN " with numeric suffix
Find all files owned by user daniel
Search the current directory tree for * .conf and * .txt files
Find all the files in entire file system which are accessed 50 days back
Find all files / directories under current directory
Find all regular files in the current directory tree that are not readable by anyone
Find all * .foo files under / path
Gunzip all files matching " file * .gz " and answer " n " to any prompts
find all files in the home folder which end with " , txt "
Find all files / directories named ' photo ? .jpg ' under current directory tree
Search the current directory tree for files named " somename " , case insensitive
display all the regular / normal files in the current directory which are atleast 2 levels deep
Set permissions to 777 for directories under var /
Report file system inodes usage in human readable format
Find all files / directories named ' file _ name ' under your home directory
find all the files in the home folder that end with " , txt "
Rename file file.txt.123456 to file.txt
Set shell option ' histverify ' .
find all files owned by the user daniel in the current directory and below .
find all files that have the extension " bam " in current directory
Find files that are 0 bytes in size in the current directory tree and remove them
Find files in the home directory tree that were modified within the last 24 hours
Find the passwd file under root and one level down .
Search the current directory recursively for regular files with the extension given as variable $ extension
display all the html files in the folder / var / www
Compress all files under / -name ' directory tree that were modified less than 30 days ago
Remove all regular files that were modified more than 60 days ago under ' / path-to-directory ' directory tree , sort them according to timesta
Delete all files / directories with ' .old ' extension under current directory tree
find all the php files in current folder using regular expressions
Find all * .old files and move them to directory oldfiles
Find all files / directories named ' document ' in maximum 4 levels down the ' / usr ' directory
Compress every file in the current directory tree with gzip and keep file extensions the same
count the lines of java code for all the java files in the current directory
Save absolute path of " $ path " that may not exist to variable " abspath "
Create an empty file with a carriage return character in its name .
Remove all files / directories named test under maximum 2 level down the current directory
Replace all spaces with underscores in directory paths under current directory .
Set shell option ' nounset ' .
Search the current directory for all .jpg files executable by ' user ' , ' group ' , and ' others '
Find all directories in the current one recursively which have the write bit set for " other "
Find files modified within the past 24 hours
Find all files in the current directory tree ignoring the " .git " directory
Find and uncompress all files in the current directory tree ending in " .csv.gz "
Delete file with inode number 314167125
Shows MAC address of network interface eth0 .
Read a line from standard input into variable " arr "
Delete all files / directories with ' .old ' extension under current directory tree
Find all * .old files and move them to directory oldfiles
Find files in the current directory tree whose size is less than 24000 bytes
display all the php files in the current folder
Search $ SEARCH for regular files under $ DIR directory tree
Find regular files modified within the last 7 days
Find every file under the directory / usr / bin whose names begin with ' heapdump '
Find all * .jpg files under current directory and print only unique names
find the file " dateiname " in the current folder ( case insensitive search )
Print common lines in " file1 " and " file2 "
Counts number of * .php files in a current folder and subfolders .
List level 2 subdirectories of the current directory
Print the date formatted with " % a % x % X " followed by the host name
print all readline bindings
List all files in the current directory tree that were modified 60 minutes ago
Print command history
Search all of / usr for subdirectories whose names end with a number 0-9
Find all files under media / directory and change their permission to 600
Find all files in the current directory tree whose pathnames match pattern " . / sr * sc "
Search all subdirectories of the current directory , except for " bar " , " foo " , " a " , and " b "
Find files whose pathnames end in " config "
find all files in current folder which are bigger than 270MB
Find all files that are set group ID to staff
Find all files / directories in level 2 down the current directory
Print the list of all regular files from the current directory tree that contain " confirm " , case insensitive
Find recursively all regular files changed within the last 5 minutes starting from directory b
Print the IP addresses for the current host name
Search the current directory tree for regular files omitting directory ' omit-directory '
Find find symlinks pointing to / mnt / oldname * in the entire file system
Find all files / directories named ' myletter.doc ' under current directory tree
Delete interactively all the files / directories with inode number 782263 under current directory tree
Search the / path / to / dir directory tree for .c files
Find all directories under / directory1 and set their permission to 775
Find files / directories under current directory and print them
Find all files under media / directory and change their permission to 600
Find all regular files under ' / var / www ' directory tree
Find all * .hosts files under / home directory
Find all * .ini files
Print whether the unique contents of " set1 " and " set2 " differ
Print the current directory tree with file sizes
Print the $ N ' th line from file by replacing commas ( ' , ' ) with newlines
Find all regular files that were modified more than 2 days ago under ' / path-to-directory ' directory tree , sort them according to timesta
Search directory tree $ DIR for * .txt files
search for the folder .dummy and remove it from the folder " Test folder "
Adjust the timestamp of ' filename ' by subtracting 2 hours from it .
Remove all files / directories named test under maximum 2 level down the current directory
Changes group ownership of ' glob ' to ' groupb ' .
Find all 777 permission directories under current directory and set permissions to 755
Move all files / directories under current directory to ~ / play
Delete all files in the / TBD directory that were modified more than 1 day ago
Search the XML files from directories / res / values-en-rUS and / res / xml for string " hovering _ msg "
display list of all the hidden directories in the directory " / dir / to / search / "
Add execute permission to all files ending in " .sh "
Find files that are orphaned
Search the system for files named " findcommandexamples.txt " , ignoring the case
Find all text files in the home directory
display a long listing of all the directories in the entire file system
count all the regular files that are present in a directory
display all the normal / regular files in the current folder and do not go beyond 3 levels
Find all * .tmp files / directories under / home / backups
Find files and directories that are at least seven levels of nesting in the directory / usr / src excluding CVS directory
Find recursively all regular files changed within the last 5 minutes starting from directory b
Print the list of files and directories of the current directory
Remove all regular files in the / var / www / directory tree that were last modified more than 30 days ago
Print the most recently modified file
Run " . / configure " with a new environment variable CC set to the full path of the command ' gcc '
Search all regular files in the current directory tree for " example "
Find all * .old files and move them to directory oldfiles
Save the -l of all directories under " / home / user / ' directory tree to variable ' DATE '
Save the date 222 days before today to the variable ' date _ 222days _ before _ TodayDay '
display all the regular / normal files in the / tmp folder which are modified after a file
Find all * .cgi files / directories under current directory and change their permission to 755
find files in the current directory and sub-directories , that changed within last hour
Find files that are 100k
search the word " MySearchStr " in all the regular / normal files in the current folder
Compress every file in the current directory tree with gzip and keep file extensions the same
Find all regular files under current directory tree that contain ' some text ' in their names excluding paths that contain dot files / directories
Find all files / directories starting with ' foobar ' ( case insensitive ) under current directory tree
Find all files / directories with ' .bar ' extension in maximum 2 levels down the current directory
Search recursively through / mydir , outputting only the base ( leaf ) name of each file , directory , symlink etc. without any containing directories ,
Mount " tmpfs " filesystem to " / path / to / dir "
Find all * .mp3 , * .aif * , * .m4p , * .wav , * .flac files under $ musicdir directory
Find x * files / directories under / tmp directory whose status was changed less than 1 day ago
Search the current directory recursively for .txt files with lines that match regular expression " ^ From : . * unique sender "
Find all files / directories under / proc and run ls command on each .
Print out the contents of all * .txt files in the home directory
Find all regular files under current directory tree that contain ' some text ' in their names excluding paths that contain dot files / directories
Check if the contents of file " subset " is a subset of file " set "
Report file systems disk usage in 1GB blocks .
display all the php files in the current folder
Reports count of processors in system .
change the permissions of all the regular / normal files in the current folder
display list of all the hidden regular / normal files in the directory " / dir / to / search / "
Find all files larger than 100M and delete them
Search the / dir directory tree for files whose names match regular expression ' . * 2015 . * \ ( album . * \ | picture . * \ ) '
Find all files / directories with ' .old ' extension under current directory tree
Search the current directory tree for files whose names start with " f "
find StringBuffer in all * .java files , ignoring case
display all the files in the file system which do not belong to the user " wnj " and which are modified before the file " ttt "
Find all .sh files in the current directory tree and remove them
Find files with name ' TEST _ 3 ' in the current directory tree
Compare " current.log " and " previous.log " line by line and print lines containing regex pattern " > \ | < "
find files which full path name is / tmp / foo / bar under foo directory and print
Remove all vmware- * .log files under current directory
Archive " $ dir " to " user @ host : / path " via ssh on port 2222 and display the relative path of " $ orig _ dest
Check if the $ somedir directory is empty
Delete all _ _ temp _ _ * directories under maximum 1 level down the current directory tree
Copy all files in " / myfiles " that contain " target " to directory " / path / to / backup "
Find all files in the current directory tree whose path names match pattern ' . / sr * sc '
display all the files in the file system excluding all the " .c " files
Find all * .txt ( case insensitive ) files of user root under / directory and show a few lines of output from the beginning
find all the file which name end with c or h and content contain ' thing '
Sort the lines of the file ' set1 ' and the change it in-place
Change permissions to 755 for all directories in the current directory tree
Filters only directories from long file listing of the current directory
Find files / directories that are newer than ' foo.txt ' under current directory tree
Find all regular files named postgis-2.0.0 under your home directory
Find all SGID files in entire file system
Copy " / path / to / source " to ' / path / to / dest ' in remote " username @ computer "
Find all * .swp files / directories under current directory
Print groups of all users logged in
Find all 100MB + files and delete them
Find all * .txt files / directories under current directory discarding ' Permission denied ' errors
Find all files / directories containing the case insensitive string something ' in their names under current directory tree
display all the files in the current folder which end with " .bash "
Saves real path of the folder containing the current script
Remove all " core " files that were last changed more than 4 days ago from the current directory tree
Find all files / directories under current directory tree that start with ' test ' in their names without descending into directories with the same name pattern
Find all files / directories in level 2 down the current directory
display a long listing of all the java files in the current folder in sorted order
Archive the list of 1st level subdirectories in / fss / fin to / fss / fi / outfile.tar.gz
Find all files / directories under current directory and print their paths
Search the current directory tree for directories
find all the files with the name " datainame " in the file system which are bigger than 50MB
Search the current directory recursively for MOV files , following symlinks
Find all * .old files and move them to directory oldfiles
Move all files from the ' sourceDir ' directory tree to the ' destDir ' directory
find directory which case-insensitive name is too in currect directory
Find all files in the current directory tree whose pathnames match pattern ' * / 1 / lang / en.css '
Remove any file containing string " GUI "
Search the xargstest / directory recursively for files matching pattern ' file ? ? '
Reverse the text in $ input by taking each 4 characters as each units and save the result in variable ' output '
Read standard input until a null character is found and save the result in variable " line "
find files which full path name like ' * f ' at current directory and print
Find all files / directories named ' whatever ' under current directory tree excluding paths that contain any hidden directory
find all directories in the current folder and do not search in sub directories
Search the current directory tree for * .c and * .asm files , ignoring the case
Find and copy all log files in the current directory tree to / tmp / log-files
find all the regular / normal files in the current folder which belong to the group " flossblog "
Suffix all files and folders in the current directory with " _ SUF "
find all the files in the entire file system that have been accessed in the last 60 days ago
find StringBuffer in all * .java files , ignoring case
Find * .conf files / directories only upto 1 level down under / etc directory and show a few lines of output from the end
find all the " .c " files in the current folder and move them to another folder
Find all files / directories named ' file ' and print them with null character as the delimiter instead of newline
search for the files which contain the word start in their name excluding search in . / proc , . / sys , . / run folders
List all files / directories under $ dir _ name with size $ sizeFile and print them according to the format string ' % M % n % u % g % s % Tb % Td % Tk : % TM %
find all the files in the current folder which have been modified in the last 60 minutes , which are atleast 1 level deep and display a long listing of these files
Find all regular files in the current directory tree ignoring GIT and SVN directories
Find all regular files under and below / var / www directory and change their permission to 700
Find all directories under / path / to / someDirectory tree and change their permission to 755
Find all regular files in the current director and set their permissions to ' 644 ' .
display all the files in the temp folder which have not been modified in the last 24 hours
Search the / tmp / directory recursively for files matching regular expression " . * file [ 0-9 ] + $ "
Find all files starting from / whose names end with " .rpm " and change their permissions to 755
Print the full real path of " / dev / disk / by-uuid / $ 1 " followed by " is mounted "
Find the most recently changed files in a subtree
Find all files / directories named ' $ SEARCH ' in the entire filesystem
Print the current date in ' % H : % M : % S ' format followed by the string ' : done waiting. both jobs terminated on their own or via timeout ; resu
Search the / path directory tree for files that are newer than 100 kB in size
Find all directories under / foo / bar and set their permission to 775
Measure the disk space taken up by all * .txt files in the current directory tree
Find files matching regular expression regexp
Find all * .dbf files / directories under current directory
Search the / path / to / dir directory tree for .c files
Unsets ' history ' shell option .
Find files / directories named ' new ' under current directory tree and set their group to ' git '
Find all files owned by group ' group2 '
Find all files larger than 100M and delete them
Search the home directory tree for files last modified more than a year ago
find all the files in the current directory and print them excluding those that have the name SCCS .
Search the / Path directory tree for files matching pattern " file _ name * "
Changes group ownership of ' public ' to ' pub ' .
searches through the / usr directory for the regular file named ' Chapter1 * '
Make directory named in variable " $ HOME / Labs / lab4a "
See what files are executable by the file ' s owner and group
Find all regular files under $ FOLDER directory tree that start with ' " . ' and end with ' " ' in their names and were modified in less than $ RETENTION days excluding the files whose conten
Print out the full path name of " mypathname " with dots resolved
Print all files and directories in the ' . ' directory tree skipping SCCS directories
Remove files under / mnt / zip matching " * prets copy " with confirmation
Search the regular files of the current directory tree for string " foo "
Search the current directory tree for regular files that contain " string "
Search the regular files of the current directory tree for string " foo "
Find all files under directory tree / path / to / dir whose permissions are not 644
Split " file.txt " into files of at most 20 lines each with a prefix " new "
Print the full path of command " cc "
Compress all files under / source directory tree using gzip with best compression method
Find files owned by nonexistent groups
Delete the oldest file with ' .tgz ' or ' .gz ' extension under ' / home / backups ' directory tree
Find all files under current directory and append a null character at the end of each of their paths
Find all * .csv files under / foot / bar / and move them to some _ dir
Print the current date followed by " : $ line "
Find all files / directories under current directory with ' FooBar ' in their paths and copy them to ~ / foo / bar
display all the files in the folder / home which are bigger than 10MB and smaller than 50 MB
Print common lines in " file1 " and " file2 "
Print out the contents of all * .txt files in the home directory
Print out the contents of all * .txt files in the home directory
Find regular files matching pattern " * oraenv * " and excecute the " file " utility for each of them
search in the current folder for all the directories with the name " test "
Split " file.txt " into files of at most 20 lines each with a prefix " new "
Change permissions to 755 for all directories in the / path / to / someDirectory /
Find regular files in the current directory tree that have all executable bits set
Find all files under $ sourceDir that match the regex expanded by $ input _ file _ type in their paths
Sorts content of the $ tmp file and filters out all strings with ' : 0 ' .
Search the home directory tree for files modified less than a day ago
Find files / directories under ' / usr ' directory tree that are newer than / tmp / stamp $ $ by modification time
display the count of total number of empty files in the current folder
Display the entire file system in a tree-like format
Compress all * .img files using bzip2
Search the current directory tree for files whose names contain " bills "
search in the current folder for all the directories with the name " test "
Find all regular files with ' .txt ' extension excluding ' README.txt ' files under current directory tree
Find all files / directories under $ source _ dir that match the regex ' . * / . * ' in their paths
Search the current directory tree for files without " test " in their path names
Find files / directories under ' / tmp ' directory tree that contain a white space safety
find files in the current directory and sub-directories , whose content was updated within the last hour
Find files / directories named ' document ' in ' ext2 ' partitions in entire filesystem
Find all files / directories under ' / usr / local ' containing ' blast ' ( case insensitive ) in their names
Find all files under current directory whose file type description contains " image " , display only path to each file .
Count the number of the regular files residing under and below . / randfiles /
Archive " / usr / local / " to " / BackUp / usr / local / " on host " XXX.XXX.XXX.XXX " via ssh and show progress
Find files under current directory that contains the string ' / bin / ksh '
Print the list of files changed within the last minute
Find all * .csv files under / foo / bar and move them to some _ dir
Search the / path directory tree for files missing g + w or o + w bits
List all files in the current directory tree including those that may contain spaces in their names
Archive the entire file system into tarfile.tar.bz2
Find all files / directories under $ 1 which have at least write permission for their owner and set write permission for group for these files / directories
Find all files / directories under $ 1 which have at least write permission for their owner and set write permission for group for these files / directories
Removes resursively all files and folders named " Thumbs.db " , ignoring case distincts .
Search the / path directory tree for files missing g + w or o + w bits
Search the / path directory tree for files missing g + w or o + w bits
Print a listing of the ' other ' directory
Save the user name of the current user to variable " x "
Change permissions to 644 for all files showing the respective chmod command
Compress all files in the " ~ / Books " directory tree that were last modified more than 7 days ago
Find any hidden regular files in the current directory and its sub-directories that were modified after .cshrc was last modified .
Print info about all mounted file systems , and grand total statistic about available and used space
display all the tmp files in the folder / tmp / after
Print the 9th space separated fields in " file " as a comma separated list
Create symbolic links in the current directory for all files under " bar1 " that are not directories and do not end in " .cc "
Prints all Saturday days of a current month .
Save the system host name in variable " HOSTNAME "
display a long listing of all fles in current folder which have been modified in the last 60 minutes
Find all files / directories named ' .todo ' under $ STORAGEFOLDER directory tree and print the parent directory names
Delete files in / var / tmp / stuff and below that have not been modified in over 90 days
Find all files / directories under $ 1 which have at least write permission for their owner and set write permission for group for these files / directories
Find all files / directories under $ 1 which have at least write permission for their owner and set write permission for group for these files / directories
Print info about all mounted file systems , and grand total statistic about available and used space
List all files / directories under $ dir _ name with size $ sizeFile and print them according to the format string ' % M % n % u % g % s % Tb % Td % Tk : % TM %
Create an empty file ( or update timestamp of file ) specified by variable " correctFilePathAndName "
Find all files / directories under current directory that were modified later than / reference / file
Find all files / directories under current directory tree whose paths start with ' . / sr ' and end with ' sc '
Find a directory named ' project.images ' in the entire filesystem and show it in long listing format
Change permissions to 644 for all subdirectories
Search the / home / user directory tree for * .txt files
download content from " http : / / 127.0.0.1 : 8000 " and output to " index.html "
Find all * .tex regular files in maximum 2 levels down the current directory
create a symbolic link named " / usr / lib / jvm / default-java " to file " / usr / lib / jvm / java-7-oracle "
display all the files in the folder / root / which are bigger than 50KB and which have been modified in the last 5 * 24 hours
Find * .ini files / directories under current directory
Move all files and directories not starting with " l " in " / mnt / usbdisk " to " / home / user / stuff / " .
Delete the files under the current working directory with inode numbers specified on standard input
find all the html files in the current folder which have been modified exactly 7 days ago
Save the directory name of the canonical path to the current script in variable " MY _ DIR "
display all the normal / regular files in the current folder which are present in the pattern file " file _ list.txt "
display all the files in the current folder which have been modified between two dates
Show file type information for all regular files under ' / home ' directory tree
Archive " _ vim / " to " ~ / .vim " suppressing non-error messages and compressing data during transmission
Search the current directory tree for files last accessed more than 10 days ago
Search the current directory tree for all .java files that were last modified at least 7 days ago
Add a line number to every line in " infile "
display all the normal / regular files in the current folder and do not go beyond 3 levels
Correct permissions for files in the web directory
Archive " / path / to / application.ini " on host " source _ host " to current directory .
find all the files in the current folder which start with t and have been modified between one hour ( 60 minutes ) and 12 hours ( 720 minutes ) ago .
find all the files ending with " .c " in current folder and search for a word in them .
Find all directories under $ x directory and set read-write permission for owner and group and no permission for other for those files
Find all * .java files under current directory and archive them to myfile.tar
display all the files ending with " .foo " including those that are in the directory " .snapshot " , this is the wrong way of using prune .
Find regular files named " expression -and expression " under and below / dir / to / search /
Sort standard input in alphabetical order
Remove everything in a current folder prompting user on each action .
Check if directory $ some _ dir is empty
Print all the files / directories under current directory tree with " .bash " extension followed by a space
Print the path names of all files in the / path directory tree
Find all files / directories under ' / data / images ' directory tree that are newer than the file ' ttt ' by modification time
Shows state of ' extglob ' shell option .
( Linux specific ) Display all lines containing " IP _ MROUTE " in the current kernel ' s compile-time config file .
Compress all files under / myfiles directory
Copy all files in the current directory except those containing ' Music ' to ' / target _ directory ' .
Search the current directory tree for files matching regular expression ' . * myfile [ 0-9 ] [ 0-9 ] ? '
Move all files / directories under current directory to ~ / play
Search the regular files from directory tree ' directory _ name ' for " word " and print the names of the matched files
Display the 5 largest files in the current directory and its sub-directories .
Removes all top-level empty folders within the current folder .
Find all files under $ sourcePath directory
Sort " file " using a buffer with a size 50 % of main memory
Change permissions of all directories residing under and below . / debian to 755
Search the regular files from directory tree ' directory _ name ' for " word " and print the names of the matched files
Prints calendar of February , 1900 .
Find all files under ~ / documents that belong to the group ' index '
find all the files in the current folder which have execute permission
Find files in the current directory tree that match pattern " * sub * "
Make directory " dir " and do not cause an error if it exists
See what files are executable by the file ' s owner and group
Save the UTC date represented by time string $ sting2 as the seconds since epoch to variable ' FinalDate '
find all regular files in the current directory tree that have been modified in the last 24 hours .
Enables shell option ' autocd ' .
Read a line from standard input and save response in variable " VARNAME "
Find files in entire file system that are writable by group or other
Archive " foo / bar / baz.c " to " / some / path " on host " server " as a remote host
Move all files and directories not starting with " l " in " / mnt / usbdisk " to " / home / user / stuff / " .
Search the regular files from directory tree ' directory _ name ' for " word " and print the names of the matched files
Search the current directory recursively for files last modified within the past 24 hours ignoring paths . / es * and . / en *
Find all files in / dir1 and print only the filenames ( not paths )
display all the regular / normal files in the entire file system
File ' save _ pid.txt ' contains a process ID , instantly kill this process with SIGKILL signal .
display all the files ending with " .foo " including those that are in the directory " .snapshot " , this is the wrong way of using prune .
search for a word in all the files in the current directory
Search the entire system for SUID or SGID files
List all files with their modification time in entire file system that are newer than the file $ newerthan and older than the file $ olderthan in regards of modification time and sort them according to file modification time
Change the owner of " $ JBOSS _ CONSOLE _ LOG " to " $ JBOSS _ USER "
Recursively change the owner to " $ USER " and group to " $ GROUP " of " / var / log / cassandra "
find all the files in the current folder which have been modified in the last one minute
Search the entire system for SUID or SGID files
Print the path names of all files and directories in the current directory tree
Change owner to " root " and group to " wheel " of " adbind.bash "
find all the files in the folder " / mp3-collection " which are bigger than 10MB excluding those that start with the word Metallica
Turns on network interface eth0 .
Remove all files in ~ / clang + llvm-3.3 / bin / and print ' basename / file / path ' for each file
Find files matching regular expression regexp
Print the first 10 files or directories found in the / tmp directory tree by ' find '
Decompress " path / to / test / file.gz " to standard output and save all lines matching " my regex " to files with a 1000000 line limit
Remove adjascent duplicate lines from file ' input ' comparing all but last space-separated fields
create a symbolic link in current directory named " environments " to file " .. / config / environments "
Find the directories whose pathnames contain " New Parts " at level 3 of the current directory tree and create symlinks to them in / cygdrive / c / Views
delete all the files in the current folder which do not belong to any user
Remove each unique item listed on standard input and do nothing if empty
Find all files / directories named ' query ' under current directory
Find all files / directories older than 48 hours in / path / to / files * paths and print the timestamps
Decompress ' file.gz '
Delete files under $ LOCATION that match $ REQUIRED _ FILES in their names and were modified more than 360 minutes ago
Remove each unique item listed on standard input and do nothing if empty
Find all files under / path / to / dir that were modified less than 7 days ago and show only first several lines of output
Compare " file1 " and " file2 " line by line with 3 lines of unified context
Recursively copy all regular files below current directory to directory / tmp on hostname , connecting as ssh user matching current username on local host .
Print the CSS files found in the current directory tree
Removes all files like ' A * .pdf ' from current folder without prompting .
Search the current directory tree for regular files whose names end in " .shtml " or " .css "
Print the MD5 message digest of " / path / to / destination / file "
Print the list of files in the current directory tree skipping SVN files
Find all $ 1 files / directories under current directory and enter into the parent directory of the first one found
Find all broken symlinks under / path / to / search directory
Create a symolic link in " / usr / local / bin / " to " / Applications / Sublime \ Text \ 2.app / Contents / SharedSupport / bin / subl "
Change permissions of all directories residing under and below . / debian to 755
Find all files / directories under / the / path directory and below the absent directory of their parent directories
Find the directories whose pathnames contain " New Parts " at level 3 of the current directory tree and create symlinks to them in / cygdrive / c / Views
Move all files and directories in the current directory to " / tmp / blah / "
Read a line from standard input into variable " message " with escaped prompt " \ nPlease Enter \ na Message : ' "
Split " complete.out " into files with at most " $ lines _ per _ file " lines each
Print file size and user name with color support for each file in the current directory tree
Filters out strings , using the extended regexp pattern ' ^ # | ^ $ | no crontab for | cannot use this program ' from " $ USERTAB "
Archive the list of 1st level subdirectories in / fss / fin to / fss / fi / outfile.tar.gz
Archive " / path / to / local / storage " to " user @ remote.remoted.from : / path / to / local / storage "
Print the list of regular files in the current directory and all subdirectories
Create a symolic link in " / usr / local / bin / " to " / Applications / Sublime \ Text \ 2.app / Contents / SharedSupport / bin / subl "
Search for files / directories with the case insensitive pattern anaconda . * in var / log directory and create an archive ( file.tar ) of the last file found
Search PATH for utilities called " rename " , display the type of file ( script , executable , ... ) for each match found .
display a long listing of all the xls or csv files in the entire file system
display a long listing of all the files in the current folder that have been accessed in today from the start of the day
display all the files ending with " .user " in / var / adm / logs / morelogs / and excluding all regular files
Print all filenames in / usr / src except for those that are of the form ' * , v ' or ' . * , v '
Find all files / directories under current directory with ' foobar ' ( case insensitive ) in their names and copy them to ~ / foo / bar
Find files / directories owned by user ' com.xml ' under ' / usr / local ' directory tree
Print the list of regular files in the current directory and all subdirectories
search for all the regular / normal mp3 files in the file system and move them to the folder / mnt / mp3
Archive " / path / to / files " to " / path " on host " user @ targethost " with elevated permission on the remote host
Find all files / directories under project t / src / emacs directory and also show the total count
Removes all files and folders that match pattern ' / usr / local / { lib / node { , / .npm , _ modules } , bin , share / man } / npm * '
Archive all filepattern- * 2009 * files / directories under data / into 2009.tar
Print the list of regular files from the current directory that were last modified on November , 22
Save the full path of command " ~ / f " to variable " foo "
Recursively search for all files with names ending with " _ test.rb " , renaming them to end with " _ spec.rb " , using at most 4 concurrent processes .
Compress all log files in the current directory tree that were last modified more than 7 days ago
Find all * .pdf files under $ { IPUT _ LOCATION } and move them to folder $ { OUTPUT _ LOCATION }
Find all files under $ { searchpath } that match the regex $ { string1 } . * $ { string2 } . * $ { string3 } in their contents where $ { string1 } etc .. will be expanded
Saves list of logged in users in system together with ' USER ' header in the ' a ' variable .
Move " / usr / bin / openssl " to directory " / root / "
searches through the root filesystem ( " / " ) for the file named Chapter1 , and prints the location
Archive " / path / to / files " to " / path " on host " user @ targethost " with elevated permission on the remote host
Print content of ' a ' file , showing all non-printing characters including TAB characters , and displaying $ at the end of each line .
Find all files under $ source _ dir that match the regex expanded by $ input _ file _ type in their paths
Locate all files named ' restore.php ' in the current directory and 3 levels below
Archive " / path / to / files " to " / path " on host " user @ targethost " with elevated permission on the remote host
Search the current directory tree for all files matching either pattern ' * .rb ' or pattern ' * .py '
Search PATH for utilities called " rename " , display the type of file ( script , executable , ... ) for each match found .
Move all " core " files in the current directory tree to " / path / subfolder / "
display all the files in the folders / etc / srv excluding the paths / etc / mtab and / srv / tftp / pxelinux.cfg
Find all files / directories under ' / data / SpoollIn ' directory tree that contain the string ' top ' in their names
Print a sorted list of unique directory paths in entire file system that match the pattern ' < name _ pattern > ' in their names
Print the current date in ' % H : % M : % S ' format followed by the string ' : done waiting. both jobs terminated on their own or via timeout ; resuming script '
Archive " / usr / local / " to " / BackUp / usr / local / " on host " XXX.XXX.XXX.XXX " via ssh and show progress
Move all * .emlx files / directories under / path / to / folders / to . / Messages / directory
Print a list of all the files in entire file system whose inode has been modified no later than one minute ago
Perform a default cPanel configuration
Move all * .emlx files / directories under / path / to / folders / to . / Messages / directory
Searches the manual pages with descriptions in section 3 , that name begins with lowercase letter .
find all the files in the entire file system that have been changed exactly 60 days and display ten files
Change directory to the " lib " directory located two parent directories above the path to command " perl "
Find files / directories that does not have write permssion for group or others
Decompress " path / to / test / file.gz " to standard output and save all lines matching " my regex " to files with a 1000000 line limit
Find all files under $ { searchpath } that match the regex $ { string1 } . * $ { string2 } . * $ { string3 } in their contents where $ { string1 } etc .. will be expanded
Archive " / path / to / files / source " to " user @ remoteip : / path / to / files / destination " via ssh on port 2121
Decompress and extract ' / usr / src / redhat / SOURCES / source-one.tar.gz '
Print the compressed size , uncompressed size , compression ratio , and uncompressed filename of " file.zip "
ssh into default vagrant host without running " vagrant ssh " by passing the configuration parameters vagrant uses for ssh
Find all directories under / path / to / folders / without descending into directories named ' .snapshot ' directory tree
Archive " / media / 10001 / music / " on host " server " to local directory " / media / incoming / music / " and skip files that are newer in the destination , delete any files in the destination not in the source , and compress data during transmission
Print a colon-separated list of all directories from the $ root directory tree , except those matching pattern " . [ a-z ] * "
